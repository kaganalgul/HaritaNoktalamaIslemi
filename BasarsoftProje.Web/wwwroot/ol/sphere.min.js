/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/sphere.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import GeometryType from"./geom/GeometryType.js";import{toDegrees,toRadians}from"./math.js";export var DEFAULT_RADIUS=6371008.8;export function getDistance(e,t,a){var r=a||DEFAULT_RADIUS,o=toRadians(e[1]),n=toRadians(t[1]),s=(n-o)/2,h=toRadians(t[0]-e[0])/2,T=Math.sin(s)*Math.sin(s)+Math.sin(h)*Math.sin(h)*Math.cos(o)*Math.cos(n);return 2*r*Math.atan2(Math.sqrt(T),Math.sqrt(1-T))}function getLengthInternal(e,t){for(var a=0,r=0,o=e.length;r<o-1;++r)a+=getDistance(e[r],e[r+1],t);return a}export function getLength(e,t){var a=t||{},r=a.radius||DEFAULT_RADIUS,o=a.projection||"EPSG:3857",n=e.getType();n!==GeometryType.GEOMETRY_COLLECTION&&(e=e.clone().transform(o,"EPSG:4326"));var s,h,T,g,y,i,G=0;switch(n){case GeometryType.POINT:case GeometryType.MULTI_POINT:break;case GeometryType.LINE_STRING:case GeometryType.LINEAR_RING:G=getLengthInternal(s=e.getCoordinates(),r);break;case GeometryType.MULTI_LINE_STRING:case GeometryType.POLYGON:for(T=0,g=(s=e.getCoordinates()).length;T<g;++T)G+=getLengthInternal(s[T],r);break;case GeometryType.MULTI_POLYGON:for(T=0,g=(s=e.getCoordinates()).length;T<g;++T)for(y=0,i=(h=s[T]).length;y<i;++y)G+=getLengthInternal(h[y],r);break;case GeometryType.GEOMETRY_COLLECTION:var I=e.getGeometries();for(T=0,g=I.length;T<g;++T)G+=getLength(I[T],t);break;default:throw new Error("Unsupported geometry type: "+n)}return G}function getAreaInternal(e,t){for(var a=0,r=e.length,o=e[r-1][0],n=e[r-1][1],s=0;s<r;s++){var h=e[s][0],T=e[s][1];a+=toRadians(h-o)*(2+Math.sin(toRadians(n))+Math.sin(toRadians(T))),o=h,n=T}return a*t*t/2}export function getArea(e,t){var a=t||{},r=a.radius||DEFAULT_RADIUS,o=a.projection||"EPSG:3857",n=e.getType();n!==GeometryType.GEOMETRY_COLLECTION&&(e=e.clone().transform(o,"EPSG:4326"));var s,h,T,g,y,i,G=0;switch(n){case GeometryType.POINT:case GeometryType.MULTI_POINT:case GeometryType.LINE_STRING:case GeometryType.MULTI_LINE_STRING:case GeometryType.LINEAR_RING:break;case GeometryType.POLYGON:for(s=e.getCoordinates(),G=Math.abs(getAreaInternal(s[0],r)),T=1,g=s.length;T<g;++T)G-=Math.abs(getAreaInternal(s[T],r));break;case GeometryType.MULTI_POLYGON:for(T=0,g=(s=e.getCoordinates()).length;T<g;++T)for(h=s[T],G+=Math.abs(getAreaInternal(h[0],r)),y=1,i=h.length;y<i;++y)G-=Math.abs(getAreaInternal(h[y],r));break;case GeometryType.GEOMETRY_COLLECTION:var I=e.getGeometries();for(T=0,g=I.length;T<g;++T)G+=getArea(I[T],t);break;default:throw new Error("Unsupported geometry type: "+n)}return G}export function offset(e,t,a,r){var o=r||DEFAULT_RADIUS,n=toRadians(e[1]),s=toRadians(e[0]),h=t/o,T=Math.asin(Math.sin(n)*Math.cos(h)+Math.cos(n)*Math.sin(h)*Math.cos(a)),g=s+Math.atan2(Math.sin(a)*Math.sin(h)*Math.cos(n),Math.cos(h)-Math.sin(n)*Math.sin(T));return[toDegrees(g),toDegrees(T)]}
//# sourceMappingURL=/sm/b38e990ba12a9885d25f5dc3584f8ab0480e2345ec8a148ebe933bd22df5cd8c.map