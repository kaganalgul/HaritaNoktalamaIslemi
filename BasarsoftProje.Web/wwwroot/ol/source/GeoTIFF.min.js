/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/source/GeoTIFF.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var __extends=this&&this.__extends||function(){var e=function(r,t){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var t in r)Object.prototype.hasOwnProperty.call(r,t)&&(e[t]=r[t])},e(r,t)};return function(r,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function o(){this.constructor=r}e(r,t),r.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}();import DataTile from"./DataTile.js";import State from"./State.js";import TileGrid from"../tilegrid/TileGrid.js";import{Pool,fromUrl as tiffFromUrl,fromUrls as tiffFromUrls}from"geotiff/src/geotiff.js";import{Projection,get as getCachedProjection,toUserCoordinate,toUserExtent}from"../proj.js";import{clamp}from"../math.js";import{create as createDecoderWorker}from"../worker/geotiff-decoder.js";import{getCenter,getIntersection}from"../extent.js";import{toSize}from"../size.js";import{fromCode as unitsFromCode}from"../proj/Units.js";var workerPool,STATISTICS_MAXIMUM="STATISTICS_MAXIMUM",STATISTICS_MINIMUM="STATISTICS_MINIMUM";function getWorkerPool(){return workerPool||(workerPool=new Pool(void 0,createDecoderWorker())),workerPool}function getBoundingBox(e){try{return e.getBoundingBox()}catch(t){var r=e.fileDirectory;return[0,0,r.ImageWidth,r.ImageLength]}}function getOrigin(e){try{return e.getOrigin().slice(0,2)}catch(r){return[0,e.fileDirectory.ImageLength]}}function getResolution(e,r){try{return e.getResolution(r)[0]}catch(t){return r.fileDirectory.ImageWidth/e.fileDirectory.ImageWidth}}function getProjection(e){var r=e.geoKeys;if(!r)return null;if(r.ProjectedCSTypeGeoKey){var t="EPSG:"+r.ProjectedCSTypeGeoKey;if(!(o=getCachedProjection(t)))(n=unitsFromCode(r.ProjLinearUnitsGeoKey))&&(o=new Projection({code:t,units:n}));return o}if(r.GeographicTypeGeoKey){var o,n;t="EPSG:"+r.GeographicTypeGeoKey;if(!(o=getCachedProjection(t)))(n=unitsFromCode(r.GeogAngularUnitsGeoKey))&&(o=new Projection({code:t,units:n}));return o}return null}function getImagesForTIFF(e){return e.getImageCount().then((function(r){for(var t=new Array(r),o=0;o<r;++o)t[o]=e.getImage(o);return Promise.all(t)}))}function getImagesForSource(e){return(e.overviews?tiffFromUrls(e.url,e.overviews):tiffFromUrl(e.url)).then(getImagesForTIFF)}function assertEqual(e,r,t,o,n){if(Array.isArray(e)){var i=e.length;if(!Array.isArray(r)||i!=r.length){var a=new Error(o);throw n(a),a}for(var s=0;s<i;++s)assertEqual(e[s],r[s],t,o,n)}else if(r=r,Math.abs(e-r)>t*e)throw new Error(o)}function getMinForDataType(e){return e instanceof Int8Array?-128:e instanceof Int16Array?-32768:e instanceof Int32Array?-2147483648:e instanceof Float32Array?12e-39:0}function getMaxForDataType(e){return e instanceof Int8Array?127:e instanceof Uint8Array||e instanceof Uint8ClampedArray?255:e instanceof Int16Array?32767:e instanceof Uint16Array?65535:e instanceof Int32Array?2147483647:e instanceof Uint32Array?4294967295:e instanceof Float32Array?34e37:255}var GeoTIFFSource=function(e){function r(r){var t=e.call(this,{state:State.LOADING,tileGrid:null,projection:null,opaque:r.opaque,transition:r.transition,interpolate:!1!==r.interpolate,wrapX:r.wrapX})||this;t.sourceInfo_=r.sources;var o=t.sourceInfo_.length;t.sourceImagery_=new Array(o),t.resolutionFactors_=new Array(o),t.samplesPerPixel_,t.nodataValues_,t.metadata_,t.normalize_=!1!==r.normalize,t.addAlpha_=!1,t.error_=null,t.readMethod_=r.convertToRGB?"readRGB":"readRasters",t.setKey(t.sourceInfo_.map((function(e){return e.url})).join(","));for(var n=t,i=new Array(o),a=0;a<o;++a)i[a]=getImagesForSource(t.sourceInfo_[a]);return Promise.all(i).then((function(e){n.configure_(e)})).catch((function(e){console.error(e),n.error_=e,n.setState(State.ERROR)})),t}return __extends(r,e),r.prototype.getError=function(){return this.error_},r.prototype.configure_=function(e){for(var r,t,o,n,i=new Array(e.length),a=new Array(e.length),s=new Array(e.length),l=0,c=e.length,u=function(c){var u=e[c],h=u.length,g=void 0,d=void 0,m=new Array(h),p=new Array(h);a[c]=new Array(h),s[c]=new Array(h);for(var v=0;v<h;++v){var y=u[v],I=y.getGDALNoData();s[c][v]=y.getGDALMetadata(),a[c][v]=null===I?NaN:I;var _=f.sourceInfo_[c].bands;i[c]=_?_.length:y.getSamplesPerPixel();var A=h-(v+1);g||(g=getBoundingBox(y)),d||(d=getOrigin(y)),p[A]=getResolution(y,u[0]),m[A]=[y.getTileWidth(),y.getTileHeight()]}(r?getIntersection(r,g,r):r=g,t)?assertEqual(t,d,0,w="Origin mismatch for source "+c+", got ["+d+"] but expected ["+t+"]",f.viewRejector):t=d;if(n){n.length-l>p.length&&(l=n.length-p.length);var T=n[n.length-1]/p[p.length-1];f.resolutionFactors_[c]=T;var S=p.map((function(e){return e*T})),w="Resolution mismatch for source "+c+", got ["+S+"] but expected ["+n+"]";assertEqual(n.slice(l,n.length),S,.005,w,f.viewRejector)}else n=p,f.resolutionFactors_[c]=1;o?assertEqual(o.slice(l,o.length),m,0,"Tile size mismatch for source "+c,f.viewRejector):o=m,f.sourceImagery_[c]=u.reverse()},f=this,h=0;h<c;++h)u(h);for(var g=0,d=this.sourceImagery_.length;g<d;++g)for(var m=this.sourceImagery_[g];m.length<n.length;)m.unshift(void 0);if(!this.getProjection()){var p=e[0];for(g=p.length-1;g>=0;--g){var v=getProjection(p[g]);if(v){this.projection=v;break}}}this.samplesPerPixel_=i,this.nodataValues_=a,this.metadata_=s;e:for(h=0;h<c;++h){if(void 0!==this.sourceInfo_[h].nodata){this.addAlpha_=!0;break}var y=a[h],I=this.sourceInfo_[h].bands;if(I){for(g=0;g<I.length;++g)if(!isNaN(y[I[g]-1])){this.addAlpha_=!0;break e}}else for(var _=0;_<y.length;++_)if(!isNaN(y[_])){this.addAlpha_=!0;break e}}var A=this.addAlpha_?1:0;this.bandCount=i.reduce((function(e,r){return e+=r}),0)+A;var T=new TileGrid({extent:r,minZoom:l,origin:t,resolutions:n,tileSizes:o});this.tileGrid=T,this.setLoader(this.loadTile_.bind(this)),this.setState(State.READY),this.viewResolver({projection:this.projection,resolutions:n,center:toUserCoordinate(getCenter(r),this.projection),extent:toUserExtent(r,this.projection),zoom:0})},r.prototype.loadTile_=function(e,r,t){for(var o=toSize(this.tileGrid.getTileSize(e)),n=this.sourceImagery_.length,i=new Array(n),a=this.addAlpha_,s=this.bandCount,l=this.samplesPerPixel_,c=this.nodataValues_,u=this.sourceInfo_,f=function(n){var a=u[n],s=h.resolutionFactors_[n],l=[Math.round(r*(o[0]*s)),Math.round(t*(o[1]*s)),Math.round((r+1)*(o[0]*s)),Math.round((t+1)*(o[1]*s))],f=h.sourceImagery_[n][e],g=void 0;a.bands&&(g=a.bands.map((function(e){return e-1})));var d=void 0;d=isNaN(a.nodata)?g?g.map((function(e){return c[n][e]})):c[n]:a.nodata,i[n]=f[h.readMethod_]({window:l,width:o[0],height:o[1],samples:g,fillValue:d,pool:getWorkerPool(),interleave:!1})},h=this,g=0;g<n;++g)f(g);var d=o[0]*o[1],m=d*s,p=this.normalize_,v=this.metadata_;return Promise.all(i).then((function(e){var r;r=p?new Uint8Array(m):new Float32Array(m);for(var t=0,o=0;o<d;++o){for(var i=a,s=0;s<n;++s){var f=u[s],h=f.min,g=f.max,y=void 0,I=void 0;if(p){var _=v[s][0];void 0===h&&(h=_&&STATISTICS_MINIMUM in _?parseFloat(_[STATISTICS_MINIMUM]):getMinForDataType(e[s][0])),void 0===g&&(g=_&&STATISTICS_MAXIMUM in _?parseFloat(_[STATISTICS_MAXIMUM]):getMaxForDataType(e[s][0])),I=-h*(y=255/(g-h))}for(var A=0;A<l[s];++A){var T=e[s][A][o],S=void 0;if(S=p?clamp(y*T+I,0,255):T,a){var w=f.nodata;if(void 0===w){var j=void 0;j=f.bands?f.bands[A]-1:A,w=c[s][j]}T!==w&&(i=!1,r[t]=S)}else r[t]=S;t++}}a&&(i||(r[t]=255),t++)}return r}))},r}(DataTile);GeoTIFFSource.prototype.getView;export default GeoTIFFSource;
//# sourceMappingURL=/sm/17df3ff1f6fcc3862f9f149e983011dcab2bb59afda4fd37ef19e753d8f9f621.map