/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/source/DataTile.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var __extends=this&&this.__extends||function(){var t=function(e,i){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])},t(e,i)};return function(e,i){if("function"!=typeof i&&null!==i)throw new TypeError("Class extends value "+String(i)+" is not a constructor or null");function o(){this.constructor=e}t(e,i),e.prototype=null===i?Object.create(i):(o.prototype=i.prototype,new o)}}();import DataTile from"../DataTile.js";import EventType from"../events/EventType.js";import TileEventType from"./TileEventType.js";import TileSource,{TileSourceEvent}from"./Tile.js";import TileState from"../TileState.js";import{assign}from"../obj.js";import{createXYZ,extentFromProjection}from"../tilegrid.js";import{getKeyZXY}from"../tilecoord.js";import{getUid}from"../util.js";import{toPromise}from"../functions.js";var DataTileSource=function(t){function e(e){var i=this,o=void 0===e.projection?"EPSG:3857":e.projection,n=e.tileGrid;return void 0===n&&o&&(n=createXYZ({extent:extentFromProjection(o),maxResolution:e.maxResolution,maxZoom:e.maxZoom,minZoom:e.minZoom,tileSize:e.tileSize})),(i=t.call(this,{cacheSize:.1,attributions:e.attributions,attributionsCollapsible:e.attributionsCollapsible,projection:o,tileGrid:n,opaque:e.opaque,state:e.state,tilePixelRatio:e.tilePixelRatio,wrapX:e.wrapX,transition:e.transition,interpolate:e.interpolate})||this).tileLoadingKeys_={},i.loader_=e.loader,i.handleTileChange_=i.handleTileChange_.bind(i),i.bandCount=void 0===e.bandCount?4:e.bandCount,i}return __extends(e,t),e.prototype.setLoader=function(t){this.loader_=t},e.prototype.getTile=function(t,e,i,o,n){var r=getKeyZXY(t,e,i);if(this.tileCache.containsKey(r))return this.tileCache.get(r);var a=this.loader_;var l=new DataTile(assign({tileCoord:[t,e,i],loader:function(){return toPromise((function(){return a(t,e,i)}))}},this.tileOptions));return l.key=this.getKey(),l.addEventListener(EventType.CHANGE,this.handleTileChange_),this.tileCache.set(r,l),l},e.prototype.handleTileChange_=function(t){var e,i=t.target,o=getUid(i),n=i.getState();n==TileState.LOADING?(this.tileLoadingKeys_[o]=!0,e=TileEventType.TILELOADSTART):o in this.tileLoadingKeys_&&(delete this.tileLoadingKeys_[o],e=n==TileState.ERROR?TileEventType.TILELOADERROR:n==TileState.LOADED?TileEventType.TILELOADEND:void 0),e&&this.dispatchEvent(new TileSourceEvent(e,i))},e}(TileSource);export default DataTileSource;
//# sourceMappingURL=/sm/586f2e356a98b24942890f7c6be97a12999436425dc26864c3d5346c6b294d2f.map