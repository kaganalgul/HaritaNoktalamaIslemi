/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/src/renderer/canvas/Layer.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import LayerRenderer from"../Layer.js";import RenderEvent from"../../render/Event.js";import RenderEventType from"../../render/EventType.js";import{apply as applyTransform,compose as composeTransform,create as createTransform}from"../../transform.js";import{asArray}from"../../color.js";import{containsCoordinate,getBottomLeft,getBottomRight,getTopLeft,getTopRight}from"../../extent.js";import{createCanvasContext2D}from"../../dom.js";import{equals}from"../../array.js";class CanvasLayerRenderer extends LayerRenderer{constructor(e){super(e),this.container=null,this.renderedResolution,this.tempTransform=createTransform(),this.pixelTransform=createTransform(),this.inversePixelTransform=createTransform(),this.context=null,this.containerReused=!1,this.pixelContext_=null}getBackground(e){let t=this.getLayer().getBackground();return"function"==typeof t&&(t=t(e.viewState.resolution)),t||void 0}useContainer(e,t,r,n){const o=this.getLayer().getClassName();let a,s;if(e&&e.className===o&&""===e.style.opacity&&1===r&&(!n||e.style.backgroundColor&&equals(asArray(e.style.backgroundColor),asArray(n)))){const t=e.firstElementChild;t instanceof HTMLCanvasElement&&(s=t.getContext("2d"))}if(s&&s.canvas.style.transform===t?(this.container=e,this.context=s,this.containerReused=!0):this.containerReused&&(this.container=null,this.context=null,this.containerReused=!1),!this.container){a=document.createElement("div"),a.className=o;let e=a.style;e.position="absolute",e.width="100%",e.height="100%",n&&(e.backgroundColor=n),s=createCanvasContext2D();const t=s.canvas;a.appendChild(t),e=t.style,e.position="absolute",e.left="0",e.transformOrigin="top left",this.container=a,this.context=s}}clipUnrotated(e,t,r){const n=getTopLeft(r),o=getTopRight(r),a=getBottomRight(r),s=getBottomLeft(r);applyTransform(t.coordinateToPixelTransform,n),applyTransform(t.coordinateToPixelTransform,o),applyTransform(t.coordinateToPixelTransform,a),applyTransform(t.coordinateToPixelTransform,s);const i=this.inversePixelTransform;applyTransform(i,n),applyTransform(i,o),applyTransform(i,a),applyTransform(i,s),e.save(),e.beginPath(),e.moveTo(Math.round(n[0]),Math.round(n[1])),e.lineTo(Math.round(o[0]),Math.round(o[1])),e.lineTo(Math.round(a[0]),Math.round(a[1])),e.lineTo(Math.round(s[0]),Math.round(s[1])),e.clip()}dispatchRenderEvent_(e,t,r){const n=this.getLayer();if(n.hasListener(e)){const o=new RenderEvent(e,this.inversePixelTransform,r,t);n.dispatchEvent(o)}}preRender(e,t){this.dispatchRenderEvent_(RenderEventType.PRERENDER,e,t)}postRender(e,t){this.dispatchRenderEvent_(RenderEventType.POSTRENDER,e,t)}getRenderTransform(e,t,r,n,o,a,s){const i=o/2,l=a/2,c=n/t,m=-c,p=-e[0]+s,d=-e[1];return composeTransform(this.tempTransform,i,l,c,m,-r,p,d)}getDataAtPixel(e,t,r){const n=applyTransform(this.inversePixelTransform,e.slice()),o=this.context,a=this.getLayer().getExtent();if(a){const r=applyTransform(t.pixelToCoordinateTransform,e.slice());if(!containsCoordinate(a,r))return null}const s=Math.round(n[0]),i=Math.round(n[1]);let l,c=this.pixelContext_;if(!c){const e=document.createElement("canvas");e.width=1,e.height=1,c=e.getContext("2d"),this.pixelContext_=c}c.clearRect(0,0,1,1);try{c.drawImage(o.canvas,s,i,1,1,0,0,1,1),l=c.getImageData(0,0,1,1).data}catch(e){return"SecurityError"===e.name?(this.pixelContext_=null,new Uint8Array):l}return 0===l[3]?null:l}}export default CanvasLayerRenderer;
//# sourceMappingURL=/sm/e614b50e5332614342ada4bdf08da27a2aa45f1c0f583d51792a3d8158c5eb68.map