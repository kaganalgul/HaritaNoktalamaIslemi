/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/src/renderer/canvas/VectorTileLayer.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import CanvasBuilderGroup from"../../render/canvas/BuilderGroup.js";import CanvasExecutorGroup from"../../render/canvas/ExecutorGroup.js";import CanvasTileLayerRenderer from"./TileLayer.js";import ReplayType from"../../render/canvas/BuilderType.js";import TileState from"../../TileState.js";import VectorTileRenderType from"../../layer/VectorTileRenderType.js";import ViewHint from"../../ViewHint.js";import{HIT_DETECT_RESOLUTION,createHitDetectionImageData,hitDetect}from"../../render/canvas/hitdetect.js";import{apply as applyTransform,create as createTransform,multiply,reset as resetTransform,scale,scale as scaleTransform,translate as translateTransform}from"../../transform.js";import{boundingExtent,buffer,containsExtent,equals,getIntersection,getTopLeft,intersects}from"../../extent.js";import{getSquaredTolerance as getSquaredRenderTolerance,renderFeature}from"../vector.js";import{getUid}from"../../util.js";import{toSize}from"../../size.js";import{wrapX}from"../../coordinate.js";const IMAGE_REPLAYS={image:[ReplayType.POLYGON,ReplayType.CIRCLE,ReplayType.LINE_STRING,ReplayType.IMAGE,ReplayType.TEXT],hybrid:[ReplayType.POLYGON,ReplayType.LINE_STRING],vector:[]},VECTOR_REPLAYS={hybrid:[ReplayType.IMAGE,ReplayType.TEXT,ReplayType.DEFAULT],vector:[ReplayType.POLYGON,ReplayType.CIRCLE,ReplayType.LINE_STRING,ReplayType.IMAGE,ReplayType.TEXT,ReplayType.DEFAULT]};class CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer{constructor(e){super(e),this.boundHandleStyleImageChange_=this.handleStyleImageChange_.bind(this),this.dirty_=!1,this.renderedLayerRevision_,this.renderedPixelToCoordinateTransform_=null,this.renderedRotation_,this.tmpTransform_=createTransform()}prepareTile(e,t,r){let o;const i=e.getState();return i!==TileState.LOADED&&i!==TileState.ERROR||(this.updateExecutorGroup_(e,t,r),this.tileImageNeedsRender_(e)&&(o=!0)),o}getTile(e,t,r,o){const i=o.pixelRatio,n=o.viewState,a=n.resolution,s=n.projection,l=this.getLayer(),d=l.getSource().getTile(e,t,r,i,s),c=o.viewHints,T=!(c[ViewHint.ANIMATING]||c[ViewHint.INTERACTING]);!T&&d.wantedResolution||(d.wantedResolution=a);return this.prepareTile(d,i,s)&&(T||Date.now()-o.time<8)&&l.getRenderMode()!==VectorTileRenderType.VECTOR&&this.renderTileImage_(d,o),super.getTile(e,t,r,o)}isDrawableTile(e){const t=this.getLayer();return super.isDrawableTile(e)&&(t.getRenderMode()===VectorTileRenderType.VECTOR?getUid(t)in e.executorGroups:e.hasContext(t))}getTileImage(e){return e.getImage(this.getLayer())}prepareFrame(e){const t=this.getLayer().getRevision();return this.renderedLayerRevision_!=t&&(this.renderedTiles.length=0),this.renderedLayerRevision_=t,super.prepareFrame(e)}updateExecutorGroup_(e,t,r){const o=this.getLayer(),i=o.getRevision(),n=o.getRenderOrder()||null,a=e.wantedResolution,s=e.getReplayState(o);if(!s.dirty&&s.renderedResolution===a&&s.renderedRevision==i&&s.renderedRenderOrder==n)return;const l=o.getSource(),d=o.getDeclutter(),c=l.getTileGrid(),T=l.getTileGridForProjection(r).getTileCoordExtent(e.wrappedTileCoord),u=l.getSourceTiles(t,r,e),g=getUid(o);delete e.hitDetectionImageData[g],e.executorGroups[g]=[],d&&(e.declutterExecutorGroups[g]=[]);for(let r=0,i=u.length;r<i;++r){const i=u[r];if(i.getState()!=TileState.LOADED)continue;const p=i.tileCoord,h=c.getTileCoordExtent(p),R=getIntersection(T,h),y=buffer(R,o.getRenderBuffer()*a,this.tmpExtent),f=equals(h,R)?null:y;s.dirty=!1;const m=new CanvasBuilderGroup(0,y,a,t),E=d?new CanvasBuilderGroup(0,R,a,t):void 0,C=getSquaredRenderTolerance(a,t),S=function(e){let t;const r=e.getStyleFunction()||o.getStyleFunction();if(r&&(t=r(e,a)),t){const r=this.renderFeature(e,C,t,m,E);this.dirty_=this.dirty_||r,s.dirty=s.dirty||r}},v=i.getFeatures();n&&n!==s.renderedRenderOrder&&v.sort(n);for(let e=0,t=v.length;e<t;++e){const t=v[e];f&&!intersects(f,t.getGeometry().getExtent())||S.call(this,t)}const x=m.finish(),I=o.getRenderMode()!==VectorTileRenderType.VECTOR&&d&&1===u.length?null:R,L=new CanvasExecutorGroup(I,a,t,l.getOverlaps(),x,o.getRenderBuffer());if(e.executorGroups[g].push(L),E){const r=new CanvasExecutorGroup(null,a,t,l.getOverlaps(),E.finish(),o.getRenderBuffer());e.declutterExecutorGroups[g].push(r)}}s.renderedRevision=i,s.renderedRenderOrder=n,s.renderedResolution=a}forEachFeatureAtCoordinate(e,t,r,o,i){const n=t.viewState.resolution,a=t.viewState.rotation;r=null==r?0:r;const s=this.getLayer(),l=s.getSource().getTileGridForProjection(t.viewState.projection),d=boundingExtent([e]);buffer(d,n*r,d);const c={},T=function(e,t,r){let n=e.getId();void 0===n&&(n=getUid(e));const a=c[n];if(a){if(!0!==a&&r<a.distanceSq){if(0===r)return c[n]=!0,i.splice(i.lastIndexOf(a),1),o(e,s,t);a.geometry=t,a.distanceSq=r}}else{if(0===r)return c[n]=!0,o(e,s,t);i.push(c[n]={feature:e,layer:s,geometry:t,distanceSq:r,callback:o})}},u=this.renderedTiles;let g;for(let o=0,i=u.length;!g&&o<i;++o){const i=u[o],c=l.getTileCoordExtent(i.wrappedTileCoord);if(!intersects(c,d))continue;const p=getUid(s),h=[i.executorGroups[p]],R=i.declutterExecutorGroups[p];R&&h.push(R),h.some((o=>{const i=o===R?t.declutterTree.all().map((e=>e.value)):null;for(let t=0,s=o.length;t<s;++t){const s=o[t];if(g=s.forEachFeatureAtCoordinate(e,n,a,r,T,i),g)return!0}}))}return g}getFeatures(e){return new Promise(function(t,r){const o=this.getLayer(),i=getUid(o),n=o.getSource(),a=this.renderedProjection,s=a.getExtent(),l=this.renderedResolution,d=n.getTileGridForProjection(a),c=applyTransform(this.renderedPixelToCoordinateTransform_,e.slice()),T=d.getTileCoordForCoordAndResolution(c,l);let u;for(let e=0,t=this.renderedTiles.length;e<t;++e)if(T.toString()===this.renderedTiles[e].tileCoord.toString()){if(u=this.renderedTiles[e],u.getState()===TileState.LOADED){const e=d.getTileCoordExtent(u.tileCoord);n.getWrapX()&&a.canWrapX()&&!containsExtent(s,e)&&wrapX(c,a);break}u=void 0}if(!u||u.loadingSourceTiles>0)return void t([]);const g=d.getTileCoordExtent(u.wrappedTileCoord),p=getTopLeft(g),h=[(c[0]-p[0])/l,(p[1]-c[1])/l],R=u.getSourceTiles().reduce((function(e,t){return e.concat(t.getFeatures())}),[]);let y=u.hitDetectionImageData[i];if(!y&&!this.animatingOrInteracting_){const e=toSize(d.getTileSize(d.getZForResolution(l))),t=this.renderedRotation_,r=[this.getRenderTransform(d.getTileCoordCenter(u.wrappedTileCoord),l,0,HIT_DETECT_RESOLUTION,e[0]*HIT_DETECT_RESOLUTION,e[1]*HIT_DETECT_RESOLUTION,0)];y=createHitDetectionImageData(e,r,R,o.getStyleFunction(),d.getTileCoordExtent(u.wrappedTileCoord),u.getReplayState(o).renderedResolution,t),u.hitDetectionImageData[i]=y}t(hitDetect(h,R,y))}.bind(this))}handleFontsChanged(){const e=this.getLayer();e.getVisible()&&void 0!==this.renderedLayerRevision_&&e.changed()}handleStyleImageChange_(e){this.renderIfReadyAndVisible()}renderDeclutter(e){const t=this.context,r=t.globalAlpha;t.globalAlpha=this.getLayer().getOpacity();const o=e.viewHints,i=!(o[ViewHint.ANIMATING]||o[ViewHint.INTERACTING]),n=this.renderedTiles;for(let t=0,r=n.length;t<r;++t){const r=n[t],o=r.declutterExecutorGroups[getUid(this.getLayer())];if(o)for(let t=o.length-1;t>=0;--t)o[t].execute(this.context,1,this.getTileRenderTransform(r,e),e.viewState.rotation,i,void 0,e.declutterTree)}t.globalAlpha=r}getTileRenderTransform(e,t){const r=t.pixelRatio,o=t.viewState,i=o.center,n=o.resolution,a=o.rotation,s=t.size,l=Math.round(s[0]*r),d=Math.round(s[1]*r),c=this.getLayer().getSource().getTileGridForProjection(t.viewState.projection),T=e.tileCoord,u=c.getTileCoordExtent(e.wrappedTileCoord),g=c.getTileCoordExtent(T,this.tmpExtent)[0]-u[0];return multiply(scale(this.inversePixelTransform.slice(),1/r,1/r),this.getRenderTransform(i,n,a,r,l,d,g))}renderFrame(e,t){const r=e.viewHints,o=!(r[ViewHint.ANIMATING]||r[ViewHint.INTERACTING]);super.renderFrame(e,t),this.renderedPixelToCoordinateTransform_=e.pixelToCoordinateTransform.slice(),this.renderedRotation_=e.viewState.rotation;const i=this.getLayer(),n=i.getRenderMode(),a=this.context,s=a.globalAlpha;a.globalAlpha=i.getOpacity();const l=VECTOR_REPLAYS[n],d=e.viewState.rotation,c=this.renderedTiles,T=[],u=[];for(let t=c.length-1;t>=0;--t){const r=c[t],n=this.getTileRenderTransform(r,e),s=r.executorGroups[getUid(i)];let g=!1;for(let e=0,t=s.length;e<t;++e){const t=s[e];if(!t.hasExecutors(l))continue;const i=r.tileCoord[0];let c;if(!g&&(c=t.getClipCoords(n),c)){a.save();for(let e=0,t=T.length;e<t;++e){const t=T[e];i<u[e]&&(a.beginPath(),a.moveTo(c[0],c[1]),a.lineTo(c[2],c[3]),a.lineTo(c[4],c[5]),a.lineTo(c[6],c[7]),a.moveTo(t[6],t[7]),a.lineTo(t[4],t[5]),a.lineTo(t[2],t[3]),a.lineTo(t[0],t[1]),a.clip())}}t.execute(a,1,n,d,o,l),!g&&c&&(a.restore(),T.push(c),u.push(i),g=!0)}}return a.globalAlpha=s,this.container}renderFeature(e,t,r,o,i){if(!r)return!1;let n=!1;if(Array.isArray(r))for(let a=0,s=r.length;a<s;++a)n=renderFeature(o,e,r[a],t,this.boundHandleStyleImageChange_,void 0,i)||n;else n=renderFeature(o,e,r,t,this.boundHandleStyleImageChange_,void 0,i);return n}tileImageNeedsRender_(e){const t=this.getLayer();if(t.getRenderMode()===VectorTileRenderType.VECTOR)return!1;const r=e.getReplayState(t),o=t.getRevision(),i=e.wantedResolution;return r.renderedTileResolution!==i||r.renderedTileRevision!==o}renderTileImage_(e,t){const r=this.getLayer(),o=e.getReplayState(r),i=r.getRevision(),n=e.executorGroups[getUid(r)];o.renderedTileRevision=i;const a=e.wrappedTileCoord,s=a[0],l=r.getSource();let d=t.pixelRatio;const c=t.viewState.projection,T=l.getTileGridForProjection(c),u=T.getResolution(e.tileCoord[0]),g=t.pixelRatio/e.wantedResolution*u,p=T.getResolution(s),h=e.getContext(r);d=Math.round(Math.max(d,g/d));const R=l.getTilePixelSize(s,d,c);h.canvas.width=R[0],h.canvas.height=R[1];const y=d/g;if(1!==y){const e=resetTransform(this.tmpTransform_);scaleTransform(e,y,y),h.setTransform.apply(h,e)}const f=T.getTileCoordExtent(a,this.tmpExtent),m=g/p,E=resetTransform(this.tmpTransform_);scaleTransform(E,m,-m),translateTransform(E,-f[0],-f[3]);for(let e=0,t=n.length;e<t;++e){n[e].execute(h,y,E,0,!0,IMAGE_REPLAYS[r.getRenderMode()])}o.renderedTileResolution=e.wantedResolution}}export default CanvasVectorTileLayerRenderer;
//# sourceMappingURL=/sm/86b211f608d89c846d110827f388d20e013cad48f271dbfd9a399416a71b30fa.map