/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/src/renderer/vector.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import BuilderType from"../render/canvas/BuilderType.js";import GeometryType from"../geom/GeometryType.js";import ImageState from"../ImageState.js";import{getUid}from"../util.js";const SIMPLIFY_TOLERANCE=.5,GEOMETRY_RENDERERS={Point:renderPointGeometry,LineString:renderLineStringGeometry,Polygon:renderPolygonGeometry,MultiPoint:renderMultiPointGeometry,MultiLineString:renderMultiLineStringGeometry,MultiPolygon:renderMultiPolygonGeometry,GeometryCollection:renderGeometryCollectionGeometry,Circle:renderCircleGeometry};export function defaultOrder(e,t){return parseInt(getUid(e),10)-parseInt(getUid(t),10)}export function getSquaredTolerance(e,t){const r=getTolerance(e,t);return r*r}export function getTolerance(e,t){return.5*e/t}function renderCircleGeometry(e,t,r,n,o){const i=r.getFill(),l=r.getStroke();if(i||l){const o=e.getBuilder(r.getZIndex(),BuilderType.CIRCLE);o.setFillStrokeStyle(i,l),o.drawCircle(t,n)}const g=r.getText();if(g&&g.getText()){const i=(o||e).getBuilder(r.getZIndex(),BuilderType.TEXT);i.setTextStyle(g),i.drawText(t,n)}}export function renderFeature(e,t,r,n,o,i,l){let g=!1;const d=r.getImage();if(d){let e=d.getImageState();e==ImageState.LOADED||e==ImageState.ERROR?d.unlistenImageChange(o):(e==ImageState.IDLE&&d.load(),e=d.getImageState(),d.listenImageChange(o),g=!0)}return renderFeatureInternal(e,t,r,n,i,l),g}function renderFeatureInternal(e,t,r,n,o,i){const l=r.getGeometryFunction()(t);if(!l)return;const g=l.simplifyTransformed(n,o);if(r.getRenderer())renderGeometry(e,g,r,t);else{(0,GEOMETRY_RENDERERS[g.getType()])(e,g,r,t,i)}}function renderGeometry(e,t,r,n){if(t.getType()==GeometryType.GEOMETRY_COLLECTION){const o=t.getGeometries();for(let t=0,i=o.length;t<i;++t)renderGeometry(e,o[t],r,n);return}e.getBuilder(r.getZIndex(),BuilderType.DEFAULT).drawCustom(t,n,r.getRenderer(),r.getHitDetectionRenderer())}function renderGeometryCollectionGeometry(e,t,r,n,o){const i=t.getGeometriesArray();let l,g;for(l=0,g=i.length;l<g;++l){(0,GEOMETRY_RENDERERS[i[l].getType()])(e,i[l],r,n,o)}}function renderLineStringGeometry(e,t,r,n,o){const i=r.getStroke();if(i){const o=e.getBuilder(r.getZIndex(),BuilderType.LINE_STRING);o.setFillStrokeStyle(null,i),o.drawLineString(t,n)}const l=r.getText();if(l&&l.getText()){const i=(o||e).getBuilder(r.getZIndex(),BuilderType.TEXT);i.setTextStyle(l),i.drawText(t,n)}}function renderMultiLineStringGeometry(e,t,r,n,o){const i=r.getStroke();if(i){const o=e.getBuilder(r.getZIndex(),BuilderType.LINE_STRING);o.setFillStrokeStyle(null,i),o.drawMultiLineString(t,n)}const l=r.getText();if(l&&l.getText()){const i=(o||e).getBuilder(r.getZIndex(),BuilderType.TEXT);i.setTextStyle(l),i.drawText(t,n)}}function renderMultiPolygonGeometry(e,t,r,n,o){const i=r.getFill(),l=r.getStroke();if(l||i){const o=e.getBuilder(r.getZIndex(),BuilderType.POLYGON);o.setFillStrokeStyle(i,l),o.drawMultiPolygon(t,n)}const g=r.getText();if(g&&g.getText()){const i=(o||e).getBuilder(r.getZIndex(),BuilderType.TEXT);i.setTextStyle(g),i.drawText(t,n)}}function renderPointGeometry(e,t,r,n,o){const i=r.getImage(),l=r.getText();let g;if(o&&(e=o,g=i&&l&&l.getText()?{}:void 0),i){if(i.getImageState()!=ImageState.LOADED)return;const o=e.getBuilder(r.getZIndex(),BuilderType.IMAGE);o.setImageStyle(i,g),o.drawPoint(t,n)}if(l&&l.getText()){const o=e.getBuilder(r.getZIndex(),BuilderType.TEXT);o.setTextStyle(l,g),o.drawText(t,n)}}function renderMultiPointGeometry(e,t,r,n,o){const i=r.getImage(),l=r.getText();let g;if(o&&(e=o,g=i&&l&&l.getText()?{}:void 0),i){if(i.getImageState()!=ImageState.LOADED)return;const o=e.getBuilder(r.getZIndex(),BuilderType.IMAGE);o.setImageStyle(i,g),o.drawMultiPoint(t,n)}if(l&&l.getText()){const i=(o||e).getBuilder(r.getZIndex(),BuilderType.TEXT);i.setTextStyle(l,g),i.drawText(t,n)}}function renderPolygonGeometry(e,t,r,n,o){const i=r.getFill(),l=r.getStroke();if(i||l){const o=e.getBuilder(r.getZIndex(),BuilderType.POLYGON);o.setFillStrokeStyle(i,l),o.drawPolygon(t,n)}const g=r.getText();if(g&&g.getText()){const i=(o||e).getBuilder(r.getZIndex(),BuilderType.TEXT);i.setTextStyle(g),i.drawText(t,n)}}
//# sourceMappingURL=/sm/d476df7bad26222dc0f4aa48913ee562774e0e91227a065b7d434cd51b6e1c42.map