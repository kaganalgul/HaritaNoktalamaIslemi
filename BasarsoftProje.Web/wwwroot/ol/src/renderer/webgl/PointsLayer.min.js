/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/src/renderer/webgl/PointsLayer.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import BaseVector from"../../layer/BaseVector.js";import GeometryType from"../../geom/GeometryType.js";import VectorEventType from"../../source/VectorEventType.js";import ViewHint from"../../ViewHint.js";import WebGLArrayBuffer from"../../webgl/Buffer.js";import WebGLLayerRenderer,{WebGLWorkerMessageType,colorDecodeId,colorEncodeId}from"./Layer.js";import WebGLRenderTarget from"../../webgl/RenderTarget.js";import{ARRAY_BUFFER,DYNAMIC_DRAW,ELEMENT_ARRAY_BUFFER}from"../../webgl.js";import{AttributeType,DefaultUniform}from"../../webgl/Helper.js";import{apply as applyTransform,create as createTransform,makeInverse as makeInverseTransform,multiply as multiplyTransform}from"../../transform.js";import{assert}from"../../asserts.js";import{buffer,createEmpty,equals}from"../../extent.js";import{create as createWebGLWorker}from"../../worker/webgl.js";import{getUid}from"../../util.js";import{listen,unlistenByKey}from"../../events.js";class WebGLPointsLayerRenderer extends WebGLLayerRenderer{constructor(e,t){const r=t.uniforms||{},s=createTransform();r[DefaultUniform.PROJECTION_MATRIX]=s,super(e,{uniforms:r,postProcesses:t.postProcesses}),this.sourceRevision_=-1,this.verticesBuffer_=new WebGLArrayBuffer(ARRAY_BUFFER,DYNAMIC_DRAW),this.hitVerticesBuffer_=new WebGLArrayBuffer(ARRAY_BUFFER,DYNAMIC_DRAW),this.indicesBuffer_=new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER,DYNAMIC_DRAW),this.vertexShader_=t.vertexShader,this.fragmentShader_=t.fragmentShader,this.program_,this.hitDetectionEnabled_=!(!t.hitFragmentShader||!t.hitVertexShader),this.hitVertexShader_=t.hitVertexShader,this.hitFragmentShader_=t.hitFragmentShader,this.hitProgram_;const i=t.attributes?t.attributes.map((function(e){return{name:"a_"+e.name,size:1,type:AttributeType.FLOAT}})):[];this.attributes=[{name:"a_position",size:2,type:AttributeType.FLOAT},{name:"a_index",size:1,type:AttributeType.FLOAT}].concat(i),this.hitDetectionAttributes=[{name:"a_position",size:2,type:AttributeType.FLOAT},{name:"a_index",size:1,type:AttributeType.FLOAT},{name:"a_hitColor",size:4,type:AttributeType.FLOAT},{name:"a_featureUid",size:1,type:AttributeType.FLOAT}].concat(i),this.customAttributes=t.attributes?t.attributes:[],this.previousExtent_=createEmpty(),this.currentTransform_=s,this.renderTransform_=createTransform(),this.invertRenderTransform_=createTransform(),this.renderInstructions_=new Float32Array(0),this.hitRenderInstructions_=new Float32Array(0),this.hitRenderTarget_,this.worker_=createWebGLWorker(),this.worker_.addEventListener("message",function(e){const t=e.data;if(t.type===WebGLWorkerMessageType.GENERATE_BUFFERS){const r=t.projectionTransform;t.hitDetection?(this.hitVerticesBuffer_.fromArrayBuffer(t.vertexBuffer),this.helper.flushBufferData(this.hitVerticesBuffer_)):(this.verticesBuffer_.fromArrayBuffer(t.vertexBuffer),this.helper.flushBufferData(this.verticesBuffer_)),this.indicesBuffer_.fromArrayBuffer(t.indexBuffer),this.helper.flushBufferData(this.indicesBuffer_),this.renderTransform_=r,makeInverseTransform(this.invertRenderTransform_,this.renderTransform_),t.hitDetection?this.hitRenderInstructions_=new Float32Array(e.data.renderInstructions):this.renderInstructions_=new Float32Array(e.data.renderInstructions),this.getLayer().changed()}}.bind(this)),this.featureCache_={},this.featureCount_=0;const n=this.getLayer().getSource();this.sourceListenKeys_=[listen(n,VectorEventType.ADDFEATURE,this.handleSourceFeatureAdded_,this),listen(n,VectorEventType.CHANGEFEATURE,this.handleSourceFeatureChanged_,this),listen(n,VectorEventType.REMOVEFEATURE,this.handleSourceFeatureDelete_,this),listen(n,VectorEventType.CLEAR,this.handleSourceFeatureClear_,this)],n.forEachFeature(function(e){this.featureCache_[getUid(e)]={feature:e,properties:e.getProperties(),geometry:e.getGeometry()},this.featureCount_++}.bind(this))}afterHelperCreated(){this.program_=this.helper.getProgram(this.fragmentShader_,this.vertexShader_),this.hitDetectionEnabled_&&(this.hitProgram_=this.helper.getProgram(this.hitFragmentShader_,this.hitVertexShader_),this.hitRenderTarget_=new WebGLRenderTarget(this.helper))}handleSourceFeatureAdded_(e){const t=e.feature;this.featureCache_[getUid(t)]={feature:t,properties:t.getProperties(),geometry:t.getGeometry()},this.featureCount_++}handleSourceFeatureChanged_(e){const t=e.feature;this.featureCache_[getUid(t)]={feature:t,properties:t.getProperties(),geometry:t.getGeometry()}}handleSourceFeatureDelete_(e){const t=e.feature;delete this.featureCache_[getUid(t)],this.featureCount_--}handleSourceFeatureClear_(){this.featureCache_={},this.featureCount_=0}renderFrame(e){const t=this.helper.getGL();this.preRender(t,e);const r=this.indicesBuffer_.getSize();this.helper.drawElements(0,r),this.helper.finalizeDraw(e,this.dispatchPreComposeEvent,this.dispatchPostComposeEvent);const s=this.helper.getCanvas();return this.hitDetectionEnabled_&&(this.renderHitDetection(e),this.hitRenderTarget_.clearCachedData()),this.postRender(t,e),s}prepareFrameInternal(e){const t=this.getLayer(),r=t.getSource(),s=e.viewState,i=!e.viewHints[ViewHint.ANIMATING]&&!e.viewHints[ViewHint.INTERACTING],n=!equals(this.previousExtent_,e.extent),o=this.sourceRevision_<r.getRevision();if(o&&(this.sourceRevision_=r.getRevision()),i&&(n||o)){const i=s.projection,n=s.resolution,o=t instanceof BaseVector?t.getRenderBuffer():0,h=buffer(e.extent,o*n);r.loadFeatures(h,n,i),this.rebuildBuffers_(e),this.previousExtent_=e.extent.slice()}return this.helper.makeProjectionTransform(e,this.currentTransform_),multiplyTransform(this.currentTransform_,this.invertRenderTransform_),this.helper.useProgram(this.program_),this.helper.prepareDraw(e),this.helper.bindBuffer(this.verticesBuffer_),this.helper.bindBuffer(this.indicesBuffer_),this.helper.enableAttributes(this.attributes),!0}rebuildBuffers_(e){const t=createTransform();this.helper.makeProjectionTransform(e,t);const r=(2+this.customAttributes.length)*this.featureCount_;if(this.renderInstructions_&&this.renderInstructions_.length===r||(this.renderInstructions_=new Float32Array(r)),this.hitDetectionEnabled_){const e=(7+this.customAttributes.length)*this.featureCount_;this.hitRenderInstructions_&&this.hitRenderInstructions_.length===e||(this.hitRenderInstructions_=new Float32Array(e))}let s,i;const n=[],o=[];let h,a=0,u=0;for(const e in this.featureCache_){if(s=this.featureCache_[e],i=s.geometry,!i||i.getType()!==GeometryType.POINT)continue;let r;n[0]=i.getFlatCoordinates()[0],n[1]=i.getFlatCoordinates()[1],applyTransform(t,n),h=colorEncodeId(u+6,o),this.renderInstructions_[a++]=n[0],this.renderInstructions_[a++]=n[1],this.hitDetectionEnabled_&&(this.hitRenderInstructions_[u++]=n[0],this.hitRenderInstructions_[u++]=n[1],this.hitRenderInstructions_[u++]=h[0],this.hitRenderInstructions_[u++]=h[1],this.hitRenderInstructions_[u++]=h[2],this.hitRenderInstructions_[u++]=h[3],this.hitRenderInstructions_[u++]=Number(e));for(let e=0;e<this.customAttributes.length;e++)r=this.customAttributes[e].callback(s.feature,s.properties),this.renderInstructions_[a++]=r,this.hitDetectionEnabled_&&(this.hitRenderInstructions_[u++]=r)}const f={type:WebGLWorkerMessageType.GENERATE_BUFFERS,renderInstructions:this.renderInstructions_.buffer,customAttributesCount:this.customAttributes.length};if(f.projectionTransform=t,this.worker_.postMessage(f,[this.renderInstructions_.buffer]),this.renderInstructions_=null,this.hitDetectionEnabled_){const e={type:WebGLWorkerMessageType.GENERATE_BUFFERS,renderInstructions:this.hitRenderInstructions_.buffer,customAttributesCount:5+this.customAttributes.length};e.projectionTransform=t,e.hitDetection=!0,this.worker_.postMessage(e,[this.hitRenderInstructions_.buffer]),this.hitRenderInstructions_=null}}forEachFeatureAtCoordinate(e,t,r,s,i){if(assert(this.hitDetectionEnabled_,66),!this.hitRenderInstructions_)return;const n=applyTransform(t.coordinateToPixelTransform,e.slice()),o=this.hitRenderTarget_.readPixel(n[0]/2,n[1]/2),h=[o[0]/255,o[1]/255,o[2]/255,o[3]/255],a=colorDecodeId(h),u=this.hitRenderInstructions_[a],f=Math.floor(u).toString(),c=this.getLayer().getSource().getFeatureByUid(f);return c?s(c,this.getLayer(),null):void 0}renderHitDetection(e){if(!this.hitVerticesBuffer_.getSize())return;this.hitRenderTarget_.setSize([Math.floor(e.size[0]/2),Math.floor(e.size[1]/2)]),this.helper.useProgram(this.hitProgram_),this.helper.prepareDrawToRenderTarget(e,this.hitRenderTarget_,!0),this.helper.bindBuffer(this.hitVerticesBuffer_),this.helper.bindBuffer(this.indicesBuffer_),this.helper.enableAttributes(this.hitDetectionAttributes);const t=this.indicesBuffer_.getSize();this.helper.drawElements(0,t)}disposeInternal(){this.worker_.terminate(),this.layer_=null,this.sourceListenKeys_.forEach((function(e){unlistenByKey(e)})),this.sourceListenKeys_=null,super.disposeInternal()}}export default WebGLPointsLayerRenderer;
//# sourceMappingURL=/sm/304d3b10d84807dc949d6551db54140a0d87cdd059c93724ad807b6ef39377d3.map