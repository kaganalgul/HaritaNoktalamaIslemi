/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/src/webgl/Helper.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import ContextEventType from"../webgl/ContextEventType.js";import Disposable from"../Disposable.js";import WebGLPostProcessingPass from"./PostProcessingPass.js";import{FLOAT,UNSIGNED_BYTE,UNSIGNED_INT,UNSIGNED_SHORT,getContext}from"../webgl.js";import{clear}from"../obj.js";import{compose as composeTransform,create as createTransform,reset as resetTransform,rotate as rotateTransform,scale as scaleTransform}from"../transform.js";import{create,fromTransform}from"../vec/mat4.js";import{getUid}from"../util.js";export const ShaderType={FRAGMENT_SHADER:35632,VERTEX_SHADER:35633};export const DefaultUniform={PROJECTION_MATRIX:"u_projectionMatrix",OFFSET_SCALE_MATRIX:"u_offsetScaleMatrix",OFFSET_ROTATION_MATRIX:"u_offsetRotateMatrix",TIME:"u_time",ZOOM:"u_zoom",RESOLUTION:"u_resolution"};export const AttributeType={UNSIGNED_BYTE:UNSIGNED_BYTE,UNSIGNED_SHORT:UNSIGNED_SHORT,UNSIGNED_INT:UNSIGNED_INT,FLOAT:FLOAT};const canvasCache={};function getSharedCanvasCacheKey(e){return"shared/"+e}let uniqueCanvasCacheKeyCount=0;function getUniqueCanvasCacheKey(){const e="unique/"+uniqueCanvasCacheKeyCount;return uniqueCanvasCacheKeyCount+=1,e}function getCanvas(e){let t=canvasCache[e];if(!t){const r=document.createElement("canvas");r.style.position="absolute",r.style.left="0",t={users:0,canvas:r},canvasCache[e]=t}return t.users+=1,t.canvas}function releaseCanvas(e){const t=canvasCache[e];if(!t)return;if(t.users-=1,t.users>0)return;const r=t.canvas,s=getContext(r).getExtension("WEBGL_lose_context");s&&s.loseContext(),delete canvasCache[e]}class WebGLHelper extends Disposable{constructor(e){super();const t=e||{};this.boundHandleWebGLContextLost_=this.handleWebGLContextLost.bind(this),this.boundHandleWebGLContextRestored_=this.handleWebGLContextRestored.bind(this),this.canvasCacheKey_=t.canvasCacheKey?getSharedCanvasCacheKey(t.canvasCacheKey):getUniqueCanvasCacheKey(),this.canvas_=getCanvas(this.canvasCacheKey_),this.gl_=getContext(this.canvas_),this.bufferCache_={},this.extensionCache_={},this.currentProgram_=null,this.canvas_.addEventListener(ContextEventType.LOST,this.boundHandleWebGLContextLost_),this.canvas_.addEventListener(ContextEventType.RESTORED,this.boundHandleWebGLContextRestored_),this.offsetRotateMatrix_=createTransform(),this.offsetScaleMatrix_=createTransform(),this.tmpMat4_=create(),this.uniformLocations_={},this.attribLocations_={},this.uniforms_=[],t.uniforms&&this.setUniforms(t.uniforms);const r=this.getGL();this.postProcessPasses_=t.postProcesses?t.postProcesses.map((function(e){return new WebGLPostProcessingPass({webGlContext:r,scaleRatio:e.scaleRatio,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader,uniforms:e.uniforms})})):[new WebGLPostProcessingPass({webGlContext:r})],this.shaderCompileErrors_=null,this.startTime_=Date.now()}setUniforms(e){this.uniforms_=[];for(const t in e)this.uniforms_.push({name:t,value:e[t]});this.uniformLocations_={}}canvasCacheKeyMatches(e){return this.canvasCacheKey_===getSharedCanvasCacheKey(e)}getExtension(e){if(e in this.extensionCache_)return this.extensionCache_[e];const t=this.gl_.getExtension(e);return this.extensionCache_[e]=t,t}bindBuffer(e){const t=this.getGL(),r=getUid(e);let s=this.bufferCache_[r];if(!s){s={buffer:e,webGlBuffer:t.createBuffer()},this.bufferCache_[r]=s}t.bindBuffer(e.getType(),s.webGlBuffer)}flushBufferData(e){const t=this.getGL();this.bindBuffer(e),t.bufferData(e.getType(),e.getArray(),e.getUsage())}deleteBuffer(e){const t=this.getGL(),r=getUid(e),s=this.bufferCache_[r];s&&!t.isContextLost()&&t.deleteBuffer(s.webGlBuffer),delete this.bufferCache_[r]}disposeInternal(){this.canvas_.removeEventListener(ContextEventType.LOST,this.boundHandleWebGLContextLost_),this.canvas_.removeEventListener(ContextEventType.RESTORED,this.boundHandleWebGLContextRestored_),releaseCanvas(this.canvasCacheKey_),delete this.gl_,delete this.canvas_}prepareDraw(e,t){const r=this.getGL(),s=this.getCanvas(),a=e.size,n=e.pixelRatio;s.width=a[0]*n,s.height=a[1]*n,s.style.width=a[0]+"px",s.style.height=a[1]+"px",r.useProgram(this.currentProgram_);for(let t=this.postProcessPasses_.length-1;t>=0;t--)this.postProcessPasses_[t].init(e);r.bindTexture(r.TEXTURE_2D,null),r.clearColor(0,0,0,0),r.clear(r.COLOR_BUFFER_BIT),r.enable(r.BLEND),r.blendFunc(r.ONE,t?r.ZERO:r.ONE_MINUS_SRC_ALPHA),r.useProgram(this.currentProgram_),this.applyFrameState(e),this.applyUniforms(e)}prepareDrawToRenderTarget(e,t,r){const s=this.getGL(),a=t.getSize();s.bindFramebuffer(s.FRAMEBUFFER,t.getFramebuffer()),s.viewport(0,0,a[0],a[1]),s.bindTexture(s.TEXTURE_2D,t.getTexture()),s.clearColor(0,0,0,0),s.clear(s.COLOR_BUFFER_BIT),s.enable(s.BLEND),s.blendFunc(s.ONE,r?s.ZERO:s.ONE_MINUS_SRC_ALPHA),s.useProgram(this.currentProgram_),this.applyFrameState(e),this.applyUniforms(e)}drawElements(e,t){const r=this.getGL();this.getExtension("OES_element_index_uint");const s=r.UNSIGNED_INT,a=t-e,n=4*e;r.drawElements(r.TRIANGLES,a,s,n)}finalizeDraw(e,t,r){for(let s=0,a=this.postProcessPasses_.length;s<a;s++)s===a-1?this.postProcessPasses_[s].apply(e,null,t,r):this.postProcessPasses_[s].apply(e,this.postProcessPasses_[s+1])}getCanvas(){return this.canvas_}getGL(){return this.gl_}applyFrameState(e){const t=e.size,r=e.viewState.rotation,s=resetTransform(this.offsetScaleMatrix_);scaleTransform(s,2/t[0],2/t[1]);const a=resetTransform(this.offsetRotateMatrix_);0!==r&&rotateTransform(a,-r),this.setUniformMatrixValue(DefaultUniform.OFFSET_SCALE_MATRIX,fromTransform(this.tmpMat4_,s)),this.setUniformMatrixValue(DefaultUniform.OFFSET_ROTATION_MATRIX,fromTransform(this.tmpMat4_,a)),this.setUniformFloatValue(DefaultUniform.TIME,.001*(Date.now()-this.startTime_)),this.setUniformFloatValue(DefaultUniform.ZOOM,e.viewState.zoom),this.setUniformFloatValue(DefaultUniform.RESOLUTION,e.viewState.resolution)}applyUniforms(e){const t=this.getGL();let r,s=0;this.uniforms_.forEach(function(a){if(r="function"==typeof a.value?a.value(e):a.value,r instanceof HTMLCanvasElement||r instanceof HTMLImageElement||r instanceof ImageData){a.texture||(a.prevValue=void 0,a.texture=t.createTexture()),t.activeTexture(t[`TEXTURE${s}`]),t.bindTexture(t.TEXTURE_2D,a.texture),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE);(!(r instanceof HTMLImageElement)||r.complete)&&a.prevValue!==r&&(a.prevValue=r,t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,r)),t.uniform1i(this.getUniformLocation(a.name),s++)}else if(Array.isArray(r)&&6===r.length)this.setUniformMatrixValue(a.name,fromTransform(this.tmpMat4_,r));else if(Array.isArray(r)&&r.length<=4)switch(r.length){case 2:return void t.uniform2f(this.getUniformLocation(a.name),r[0],r[1]);case 3:return void t.uniform3f(this.getUniformLocation(a.name),r[0],r[1],r[2]);case 4:return void t.uniform4f(this.getUniformLocation(a.name),r[0],r[1],r[2],r[3]);default:return}else"number"==typeof r&&t.uniform1f(this.getUniformLocation(a.name),r)}.bind(this))}useProgram(e){if(e==this.currentProgram_)return!1;return this.getGL().useProgram(e),this.currentProgram_=e,this.uniformLocations_={},this.attribLocations_={},!0}compileShader(e,t){const r=this.getGL(),s=r.createShader(t);return r.shaderSource(s,e),r.compileShader(s),s}getProgram(e,t){const r=this.getGL(),s=this.compileShader(e,r.FRAGMENT_SHADER),a=this.compileShader(t,r.VERTEX_SHADER),n=r.createProgram();if(r.attachShader(n,s),r.attachShader(n,a),r.linkProgram(n),!r.getShaderParameter(s,r.COMPILE_STATUS)){const e=`Fragment shader compliation failed: ${r.getShaderInfoLog(s)}`;throw new Error(e)}if(r.deleteShader(s),!r.getShaderParameter(a,r.COMPILE_STATUS)){const e=`Vertex shader compilation failed: ${r.getShaderInfoLog(a)}`;throw new Error(e)}if(r.deleteShader(a),!r.getProgramParameter(n,r.LINK_STATUS)){const e=`GL program linking failed: ${r.getShaderInfoLog(a)}`;throw new Error(e)}return n}getUniformLocation(e){return void 0===this.uniformLocations_[e]&&(this.uniformLocations_[e]=this.getGL().getUniformLocation(this.currentProgram_,e)),this.uniformLocations_[e]}getAttributeLocation(e){return void 0===this.attribLocations_[e]&&(this.attribLocations_[e]=this.getGL().getAttribLocation(this.currentProgram_,e)),this.attribLocations_[e]}makeProjectionTransform(e,t){const r=e.size,s=e.viewState.rotation,a=e.viewState.resolution,n=e.viewState.center;return resetTransform(t),composeTransform(t,0,0,2/(a*r[0]),2/(a*r[1]),-s,-n[0],-n[1]),t}setUniformFloatValue(e,t){this.getGL().uniform1f(this.getUniformLocation(e),t)}setUniformMatrixValue(e,t){this.getGL().uniformMatrix4fv(this.getUniformLocation(e),!1,t)}enableAttributeArray_(e,t,r,s,a){const n=this.getAttributeLocation(e);n<0||(this.getGL().enableVertexAttribArray(n),this.getGL().vertexAttribPointer(n,t,r,!1,s,a))}enableAttributes(e){const t=computeAttributesStride(e);let r=0;for(let s=0;s<e.length;s++){const a=e[s];this.enableAttributeArray_(a.name,a.size,a.type||FLOAT,t,r),r+=a.size*getByteSizeFromType(a.type)}}handleWebGLContextLost(){clear(this.bufferCache_),this.currentProgram_=null}handleWebGLContextRestored(){}createTexture(e,t,r){const s=this.getGL(),a=r||s.createTexture(),n=s.RGBA,o=s.RGBA,i=s.UNSIGNED_BYTE;return s.bindTexture(s.TEXTURE_2D,a),t?s.texImage2D(s.TEXTURE_2D,0,n,o,i,t):s.texImage2D(s.TEXTURE_2D,0,n,e[0],e[1],0,o,i,null),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_MIN_FILTER,s.LINEAR),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_WRAP_S,s.CLAMP_TO_EDGE),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_WRAP_T,s.CLAMP_TO_EDGE),a}}export function computeAttributesStride(e){let t=0;for(let r=0;r<e.length;r++){const s=e[r];t+=s.size*getByteSizeFromType(s.type)}return t}function getByteSizeFromType(e){switch(e){case AttributeType.UNSIGNED_BYTE:return Uint8Array.BYTES_PER_ELEMENT;case AttributeType.UNSIGNED_SHORT:return Uint16Array.BYTES_PER_ELEMENT;case AttributeType.UNSIGNED_INT:return Uint32Array.BYTES_PER_ELEMENT;default:return Float32Array.BYTES_PER_ELEMENT}}export default WebGLHelper;
//# sourceMappingURL=/sm/7e6d4e2ec376e1b4ab16f1a227c73cdcdcc46161d059fc997903a1b05ba543c2.map