/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/src/Object.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import Event from"./events/Event.js";import ObjectEventType from"./ObjectEventType.js";import Observable from"./Observable.js";import{assign,isEmpty}from"./obj.js";import{getUid}from"./util.js";export class ObjectEvent extends Event{constructor(e,t,s){super(e),this.key=t,this.oldValue=s}}class BaseObject extends Observable{constructor(e){super(),this.on,this.once,this.un,getUid(this),this.values_=null,void 0!==e&&this.setProperties(e)}get(e){let t;return this.values_&&this.values_.hasOwnProperty(e)&&(t=this.values_[e]),t}getKeys(){return this.values_&&Object.keys(this.values_)||[]}getProperties(){return this.values_&&assign({},this.values_)||{}}hasProperties(){return!!this.values_}notify(e,t){let s;s=`change:${e}`,this.dispatchEvent(new ObjectEvent(s,e,t)),s=ObjectEventType.PROPERTYCHANGE,this.dispatchEvent(new ObjectEvent(s,e,t))}addChangeListener(e,t){this.addEventListener(`change:${e}`,t)}removeChangeListener(e,t){this.removeEventListener(`change:${e}`,t)}set(e,t,s){const i=this.values_||(this.values_={});if(s)i[e]=t;else{const s=i[e];i[e]=t,s!==t&&this.notify(e,s)}}setProperties(e,t){for(const s in e)this.set(s,e[s],t)}applyProperties(e){e.values_&&assign(this.values_||(this.values_={}),e.values_)}unset(e,t){if(this.values_&&e in this.values_){const s=this.values_[e];delete this.values_[e],isEmpty(this.values_)&&(this.values_=null),t||this.notify(e,s)}}}export default BaseObject;
//# sourceMappingURL=/sm/f040ac94cd74b4660ca9e1843435a709c8ec55b33ec0cab63f2e6ea7f6d485c3.map