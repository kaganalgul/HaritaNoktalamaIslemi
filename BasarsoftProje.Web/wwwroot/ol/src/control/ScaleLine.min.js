/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/src/control/ScaleLine.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import Control from"./Control.js";import ProjUnits from"../proj/Units.js";import{CLASS_UNSELECTABLE}from"../css.js";import{METERS_PER_UNIT,getPointResolution}from"../proj.js";import{assert}from"../asserts.js";const UNITS_PROP="units";export const Units={DEGREES:"degrees",IMPERIAL:"imperial",NAUTICAL:"nautical",METRIC:"metric",US:"us"};const LEADING_DIGITS=[1,2,5],DEFAULT_DPI=25.4/.28;class ScaleLine extends Control{constructor(e){const t=e||{},s=void 0!==t.className?t.className:t.bar?"ol-scale-bar":"ol-scale-line";super({element:document.createElement("div"),render:t.render,target:t.target}),this.on,this.once,this.un,this.innerElement_=document.createElement("div"),this.innerElement_.className=s+"-inner",this.element.className=s+" "+CLASS_UNSELECTABLE,this.element.appendChild(this.innerElement_),this.viewState_=null,this.minWidth_=void 0!==t.minWidth?t.minWidth:64,this.renderedVisible_=!1,this.renderedWidth_=void 0,this.renderedHTML_="",this.addChangeListener("units",this.handleUnitsChanged_),this.setUnits(t.units||Units.METRIC),this.scaleBar_=t.bar||!1,this.scaleBarSteps_=t.steps||4,this.scaleBarText_=t.text||!1,this.dpi_=t.dpi||void 0}getUnits(){return this.get("units")}handleUnitsChanged_(){this.updateElement_()}setUnits(e){this.set("units",e)}setDpi(e){this.dpi_=e}updateElement_(){const e=this.viewState_;if(!e)return void(this.renderedVisible_&&(this.element.style.display="none",this.renderedVisible_=!1));const t=e.center,s=e.projection,i=this.getUnits(),n=i==Units.DEGREES?ProjUnits.DEGREES:ProjUnits.METERS;let r=getPointResolution(s,e.resolution,t,n);const a=this.minWidth_*(this.dpi_||DEFAULT_DPI)/DEFAULT_DPI;let l=a*r,o="";if(i==Units.DEGREES){const e=METERS_PER_UNIT[ProjUnits.DEGREES];l*=e,l<e/60?(o="″",r*=3600):l<e?(o="′",r*=60):o="°"}else i==Units.IMPERIAL?l<.9144?(o="in",r/=.0254):l<1609.344?(o="ft",r/=.3048):(o="mi",r/=1609.344):i==Units.NAUTICAL?(r/=1852,o="nm"):i==Units.METRIC?l<.001?(o="μm",r*=1e6):l<1?(o="mm",r*=1e3):l<1e3?o="m":(o="km",r/=1e3):i==Units.US?l<.9144?(o="in",r*=39.37):l<1609.344?(o="ft",r/=.30480061):(o="mi",r/=1609.3472):assert(!1,33);let h,d,c,_,p=3*Math.floor(Math.log(a*r)/Math.log(10));for(;;){c=Math.floor(p/3);const e=Math.pow(10,c);if(h=LEADING_DIGITS[(p%3+3)%3]*e,d=Math.round(h/r),isNaN(d))return this.element.style.display="none",void(this.renderedVisible_=!1);if(d>=a)break;++p}_=this.scaleBar_?this.createScaleBar(d,h,o):h.toFixed(c<0?-c:0)+" "+o,this.renderedHTML_!=_&&(this.innerElement_.innerHTML=_,this.renderedHTML_=_),this.renderedWidth_!=d&&(this.innerElement_.style.width=d+"px",this.renderedWidth_=d),this.renderedVisible_||(this.element.style.display="",this.renderedVisible_=!0)}createScaleBar(e,t,s){const i="1 : "+Math.round(this.getScaleForResolution()).toLocaleString(),n=[],r=e/this.scaleBarSteps_;let a,l="#ffffff";for(let i=0;i<this.scaleBarSteps_;i++)0===i&&n.push(this.createMarker("absolute",i)),n.push('<div><div class="ol-scale-singlebar" style="width: '+r+"px;background-color: "+l+';"></div>'+this.createMarker("relative",i)+(i%2==0||2===this.scaleBarSteps_?this.createStepText(i,e,!1,t,s):"")+"</div>"),i===this.scaleBarSteps_-1&&n.push(this.createStepText(i+1,e,!0,t,s)),l="#ffffff"===l?"#000000":"#ffffff";a=this.scaleBarText_?'<div class="ol-scale-text" style="width: '+e+'px;">'+i+"</div>":"";return'<div style="display: flex;">'+a+n.join("")+"</div>"}createMarker(e,t){return'<div class="ol-scale-step-marker" style="position: '+e+";top: "+("absolute"===e?3:-10)+'px;"></div>'}createStepText(e,t,s,i,n){const r=(0===e?0:Math.round(i/this.scaleBarSteps_*e*100)/100)+(0===e?"":" "+n);return'<div class="ol-scale-step-text" style="margin-left: '+(0===e?-3:t/this.scaleBarSteps_*-1)+"px;text-align: "+(0===e?"left":"center")+"; min-width: "+(0===e?0:t/this.scaleBarSteps_*2)+"px;left: "+(s?t+"px":"unset")+';">'+r+"</div>"}getScaleForResolution(){const e=getPointResolution(this.viewState_.projection,this.viewState_.resolution,this.viewState_.center,ProjUnits.METERS),t=this.dpi_||DEFAULT_DPI;return parseFloat(e.toString())*(1e3/25.4)*t}render(e){const t=e.frameState;this.viewState_=t?t.viewState:null,this.updateElement_()}}export default ScaleLine;
//# sourceMappingURL=/sm/cb626861d3241344b65d89b3b6cdb47e02aad21bef3da182dee4c3e386276200.map