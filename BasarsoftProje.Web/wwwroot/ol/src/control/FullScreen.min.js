/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/src/control/FullScreen.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import Control from"./Control.js";import EventType from"../events/EventType.js";import MapProperty from"../MapProperty.js";import{CLASS_CONTROL,CLASS_UNSELECTABLE,CLASS_UNSUPPORTED}from"../css.js";import{listen,unlistenByKey}from"../events.js";import{replaceNode}from"../dom.js";const events=["fullscreenchange","webkitfullscreenchange","MSFullscreenChange"],FullScreenEventType={ENTERFULLSCREEN:"enterfullscreen",LEAVEFULLSCREEN:"leavefullscreen"};class FullScreen extends Control{constructor(e){const t=e||{};super({element:document.createElement("div"),target:t.target}),this.on,this.once,this.un,this.cssClassName_=void 0!==t.className?t.className:"ol-full-screen",this.documentListeners_=[],this.activeClassName_=void 0!==t.activeClassName?t.activeClassName.split(" "):[this.cssClassName_+"-true"],this.inactiveClassName_=void 0!==t.inactiveClassName?t.inactiveClassName.split(" "):[this.cssClassName_+"-false"];const s=void 0!==t.label?t.label:"⤢";this.labelNode_="string"==typeof s?document.createTextNode(s):s;const l=void 0!==t.labelActive?t.labelActive:"×";this.labelActiveNode_="string"==typeof l?document.createTextNode(l):l,this.button_=document.createElement("button");const n=t.tipLabel?t.tipLabel:"Toggle full-screen";this.button_.setAttribute("type","button"),this.button_.title=n,this.button_.appendChild(this.labelNode_),this.button_.addEventListener(EventType.CLICK,this.handleClick_.bind(this),!1),this.element.className=`${this.cssClassName_} ${CLASS_UNSELECTABLE} ${CLASS_CONTROL}`,this.element.appendChild(this.button_),this.keys_=void 0!==t.keys&&t.keys,this.source_=t.source,this.isInFullscreen_=!1,this.boundHandleMapTargetChange_=this.handleMapTargetChange_.bind(this)}handleClick_(e){e.preventDefault(),this.handleFullScreen_()}handleFullScreen_(){const e=this.getMap();if(!e)return;const t=e.getOwnerDocument();if(isFullScreenSupported(t))if(isFullScreen(t))exitFullScreen(t);else{let s;s=this.source_?"string"==typeof this.source_?t.getElementById(this.source_):this.source_:e.getTargetElement(),this.keys_?requestFullScreenWithKeys(s):requestFullScreen(s)}}handleFullScreenChange_(){const e=this.getMap();if(!e)return;const t=this.isInFullscreen_;this.isInFullscreen_=isFullScreen(e.getOwnerDocument()),t!==this.isInFullscreen_&&(this.setClassName_(this.button_,this.isInFullscreen_),this.isInFullscreen_?(replaceNode(this.labelActiveNode_,this.labelNode_),this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN)):(replaceNode(this.labelNode_,this.labelActiveNode_),this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN)),e.updateSize())}setClassName_(e,t){const s=this.activeClassName_,l=this.inactiveClassName_,n=t?s:l;e.classList.remove(...s),e.classList.remove(...l),e.classList.add(...n)}setMap(e){const t=this.getMap();t&&t.removeChangeListener(MapProperty.TARGET,this.boundHandleMapTargetChange_),super.setMap(e),this.handleMapTargetChange_(),e&&e.addChangeListener(MapProperty.TARGET,this.boundHandleMapTargetChange_)}handleMapTargetChange_(){const e=this.documentListeners_;for(let t=0,s=e.length;t<s;++t)unlistenByKey(e[t]);e.length=0;const t=this.getMap();if(t){const s=t.getOwnerDocument();isFullScreenSupported(s)?this.element.classList.remove(CLASS_UNSUPPORTED):this.element.classList.add(CLASS_UNSUPPORTED);for(let t=0,l=events.length;t<l;++t)e.push(listen(s,events[t],this.handleFullScreenChange_,this));this.handleFullScreenChange_()}}}function isFullScreenSupported(e){const t=e.body;return!!(t.webkitRequestFullscreen||t.msRequestFullscreen&&e.msFullscreenEnabled||t.requestFullscreen&&e.fullscreenEnabled)}function isFullScreen(e){return!!(e.webkitIsFullScreen||e.msFullscreenElement||e.fullscreenElement)}function requestFullScreen(e){e.requestFullscreen?e.requestFullscreen():e.msRequestFullscreen?e.msRequestFullscreen():e.webkitRequestFullscreen&&e.webkitRequestFullscreen()}function requestFullScreenWithKeys(e){e.webkitRequestFullscreen?e.webkitRequestFullscreen():requestFullScreen(e)}function exitFullScreen(e){e.exitFullscreen?e.exitFullscreen():e.msExitFullscreen?e.msExitFullscreen():e.webkitExitFullscreen&&e.webkitExitFullscreen()}export default FullScreen;
//# sourceMappingURL=/sm/1dd0f377251e5e0aedb75bf72a6d20819c616db5196ae837341a891e94afeff9.map