/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/src/reproj/Image.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{ERROR_THRESHOLD}from"./common.js";import EventType from"../events/EventType.js";import ImageBase from"../ImageBase.js";import ImageState from"../ImageState.js";import Triangulation from"./Triangulation.js";import{calculateSourceResolution,render as renderReprojected}from"../reproj.js";import{getCenter,getHeight,getIntersection,getWidth}from"../extent.js";import{listen,unlistenByKey}from"../events.js";class ReprojImage extends ImageBase{constructor(t,e,s,i,a,r,o){const n=t.getExtent(),g=e.getExtent(),u=g?getIntersection(s,g):s,c=getCenter(u),h=calculateSourceResolution(t,e,c,i),m=new Triangulation(t,e,u,n,h*ERROR_THRESHOLD,i),l=r(m.calculateSourceExtent(),h,a),_=l?ImageState.IDLE:ImageState.EMPTY,I=l?l.getPixelRatio():1;super(s,i,I,_),this.targetProj_=e,this.maxSourceExtent_=n,this.triangulation_=m,this.targetResolution_=i,this.targetExtent_=s,this.sourceImage_=l,this.sourcePixelRatio_=I,this.interpolate_=o,this.canvas_=null,this.sourceListenerKey_=null}disposeInternal(){this.state==ImageState.LOADING&&this.unlistenSource_(),super.disposeInternal()}getImage(){return this.canvas_}getProjection(){return this.targetProj_}reproject_(){const t=this.sourceImage_.getState();if(t==ImageState.LOADED){const t=getWidth(this.targetExtent_)/this.targetResolution_,e=getHeight(this.targetExtent_)/this.targetResolution_;this.canvas_=renderReprojected(t,e,this.sourcePixelRatio_,this.sourceImage_.getResolution(),this.maxSourceExtent_,this.targetResolution_,this.targetExtent_,this.triangulation_,[{extent:this.sourceImage_.getExtent(),image:this.sourceImage_.getImage()}],0,void 0,this.interpolate_)}this.state=t,this.changed()}load(){if(this.state==ImageState.IDLE){this.state=ImageState.LOADING,this.changed();const t=this.sourceImage_.getState();t==ImageState.LOADED||t==ImageState.ERROR?this.reproject_():(this.sourceListenerKey_=listen(this.sourceImage_,EventType.CHANGE,(function(t){const e=this.sourceImage_.getState();e!=ImageState.LOADED&&e!=ImageState.ERROR||(this.unlistenSource_(),this.reproject_())}),this),this.sourceImage_.load())}}unlistenSource_(){unlistenByKey(this.sourceListenerKey_),this.sourceListenerKey_=null}}export default ReprojImage;
//# sourceMappingURL=/sm/82fe8a34118b4514d9205a86cf56873f33d0872ea47738481847d2fd97e83952.map