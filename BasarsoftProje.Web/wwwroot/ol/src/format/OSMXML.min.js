/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/src/format/OSMXML.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import Feature from"../Feature.js";import GeometryLayout from"../geom/GeometryLayout.js";import LineString from"../geom/LineString.js";import Point from"../geom/Point.js";import Polygon from"../geom/Polygon.js";import XMLFeature from"./XMLFeature.js";import{extend}from"../array.js";import{get as getProjection}from"../proj.js";import{isEmpty}from"../obj.js";import{makeStructureNS,pushParseAndPop}from"../xml.js";import{transformGeometryWithOptions}from"./Feature.js";const NAMESPACE_URIS=[null],WAY_PARSERS=makeStructureNS(NAMESPACE_URIS,{nd:readNd,tag:readTag}),PARSERS=makeStructureNS(NAMESPACE_URIS,{node:readNode,way:readWay});class OSMXML extends XMLFeature{constructor(){super(),this.dataProjection=getProjection("EPSG:4326")}readFeaturesFromNode(t,e){const r=this.getReadOptions(t,e);if("osm"==t.localName){const e=pushParseAndPop({nodes:{},ways:[],features:[]},PARSERS,t,[r]);for(let t=0;t<e.ways.length;t++){const o=e.ways[t],s=[];for(let t=0,r=o.ndrefs.length;t<r;t++){const r=e.nodes[o.ndrefs[t]];extend(s,r)}let n;n=o.ndrefs[0]==o.ndrefs[o.ndrefs.length-1]?new Polygon(s,GeometryLayout.XY,[s.length]):new LineString(s,GeometryLayout.XY),transformGeometryWithOptions(n,!1,r);const a=new Feature(n);a.setId(o.id),a.setProperties(o.tags,!0),e.features.push(a)}if(e.features)return e.features}return[]}}const NODE_PARSERS=makeStructureNS(NAMESPACE_URIS,{tag:readTag});function readNode(t,e){const r=e[0],o=e[e.length-1],s=t.getAttribute("id"),n=[parseFloat(t.getAttribute("lon")),parseFloat(t.getAttribute("lat"))];o.nodes[s]=n;const a=pushParseAndPop({tags:{}},NODE_PARSERS,t,e);if(!isEmpty(a.tags)){const t=new Point(n);transformGeometryWithOptions(t,!1,r);const e=new Feature(t);e.setId(s),e.setProperties(a.tags,!0),o.features.push(e)}}function readWay(t,e){const r=t.getAttribute("id"),o=pushParseAndPop({id:r,ndrefs:[],tags:{}},WAY_PARSERS,t,e);e[e.length-1].ways.push(o)}function readNd(t,e){e[e.length-1].ndrefs.push(t.getAttribute("ref"))}function readTag(t,e){e[e.length-1].tags[t.getAttribute("k")]=t.getAttribute("v")}export default OSMXML;
//# sourceMappingURL=/sm/4907000f24ea669fe900d15cc1bcea8e44ba37541817f4b77de1bbe2414e49b0.map