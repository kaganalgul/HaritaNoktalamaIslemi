/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/src/format/WKB.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import Feature from"../Feature.js";import FeatureFormat,{transformGeometryWithOptions}from"./Feature.js";import FormatType from"./FormatType.js";import GeometryCollection from"../geom/GeometryCollection.js";import GeometryLayout from"../geom/GeometryLayout.js";import GeometryType from"../geom/GeometryType.js";import LineString from"../geom/LineString.js";import MultiLineString from"../geom/MultiLineString.js";import MultiPoint from"../geom/MultiPoint.js";import MultiPolygon from"../geom/MultiPolygon.js";import Point from"../geom/Point.js";import Polygon from"../geom/Polygon.js";import{get as getProjection}from"../proj.js";import SimpleGeometry from"../geom/SimpleGeometry.js";import{assign}from"../obj.js";const WKBGeometryType={POINT:1,LINE_STRING:2,POLYGON:3,MULTI_POINT:4,MULTI_LINE_STRING:5,MULTI_POLYGON:6,GEOMETRY_COLLECTION:7,POLYHEDRAL_SURFACE:15,TIN:16,TRIANGLE:17};class WkbReader{constructor(e){this.view_=e,this.pos_=0,this.initialized_=!1,this.isLittleEndian_=!1,this.hasZ_=!1,this.hasM_=!1,this.srid_=null,this.layout_=GeometryLayout.XY}readUint8(){return this.view_.getUint8(this.pos_++)}readUint32(e){return this.view_.getUint32((this.pos_+=4)-4,void 0!==e?e:this.isLittleEndian_)}readDouble(e){return this.view_.getFloat64((this.pos_+=8)-8,void 0!==e?e:this.isLittleEndian_)}readPoint(){const e=[];return e.push(this.readDouble()),e.push(this.readDouble()),this.hasZ_&&e.push(this.readDouble()),this.hasM_&&e.push(this.readDouble()),e}readLineString(){const e=this.readUint32(),t=[];for(let i=0;i<e;i++)t.push(this.readPoint());return t}readPolygon(){const e=this.readUint32(),t=[];for(let i=0;i<e;i++)t.push(this.readLineString());return t}readWkbHeader(e){const t=this.readUint8()>0,i=this.readUint32(t),r=Math.floor((268435455&i)/1e3),o=Boolean(2147483648&i)||1===r||3===r,n=Boolean(1073741824&i)||2===r||3===r,s=Boolean(536870912&i),a=(268435455&i)%1e3,y=["XY",o?"Z":"",n?"M":""].join(""),l=s?this.readUint32(t):null;if(void 0!==e&&e!==a)throw new Error("Unexpected WKB geometry type "+a);if(this.initialized_){if(this.isLittleEndian_!==t)throw new Error("Inconsistent endian");if(this.layout_!==y)throw new Error("Inconsistent geometry layout");if(l&&this.srid_!==l)throw new Error("Inconsistent coordinate system (SRID)")}else this.isLittleEndian_=t,this.hasZ_=o,this.hasM_=n,this.layout_=y,this.srid_=l,this.initialized_=!0;return a}readWkbPayload(e){switch(e){case WKBGeometryType.POINT:return this.readPoint();case WKBGeometryType.LINE_STRING:return this.readLineString();case WKBGeometryType.POLYGON:case WKBGeometryType.TRIANGLE:return this.readPolygon();case WKBGeometryType.MULTI_POINT:return this.readMultiPoint();case WKBGeometryType.MULTI_LINE_STRING:return this.readMultiLineString();case WKBGeometryType.MULTI_POLYGON:case WKBGeometryType.POLYHEDRAL_SURFACE:case WKBGeometryType.TIN:return this.readMultiPolygon();case WKBGeometryType.GEOMETRY_COLLECTION:return this.readGeometryCollection();default:throw new Error("Unsupported WKB geometry type "+e+" is found")}}readWkbBlock(e){return this.readWkbPayload(this.readWkbHeader(e))}readWkbCollection(e,t){const i=this.readUint32(),r=[];for(let o=0;o<i;o++){const i=e.call(this,t);i&&r.push(i)}return r}readMultiPoint(){return this.readWkbCollection(this.readWkbBlock,WKBGeometryType.POINT)}readMultiLineString(){return this.readWkbCollection(this.readWkbBlock,WKBGeometryType.LINE_STRING)}readMultiPolygon(){return this.readWkbCollection(this.readWkbBlock,WKBGeometryType.POLYGON)}readGeometryCollection(){return this.readWkbCollection(this.readGeometry)}readGeometry(){const e=this.readWkbHeader(),t=this.readWkbPayload(e);switch(e){case WKBGeometryType.POINT:return new Point(t,this.layout_);case WKBGeometryType.LINE_STRING:return new LineString(t,this.layout_);case WKBGeometryType.POLYGON:case WKBGeometryType.TRIANGLE:return new Polygon(t,this.layout_);case WKBGeometryType.MULTI_POINT:return new MultiPoint(t,this.layout_);case WKBGeometryType.MULTI_LINE_STRING:return new MultiLineString(t,this.layout_);case WKBGeometryType.MULTI_POLYGON:case WKBGeometryType.POLYHEDRAL_SURFACE:case WKBGeometryType.TIN:return new MultiPolygon(t,this.layout_);case WKBGeometryType.GEOMETRY_COLLECTION:return new GeometryCollection(t);default:return null}}getSrid(){return this.srid_}}class WkbWriter{constructor(e){e=e||{},this.layout_=e.layout,this.isLittleEndian_=!1!==e.littleEndian,this.isEWKB_=!1!==e.ewkb,this.writeQueue_=[],this.nodata_=assign({X:0,Y:0,Z:0,M:0},e.nodata)}writeUint8(e){this.writeQueue_.push([1,e])}writeUint32(e){this.writeQueue_.push([4,e])}writeDouble(e){this.writeQueue_.push([8,e])}writePoint(e,t){const i=assign.apply(null,t.split("").map(((t,i)=>({[t]:e[i]}))));for(const e of this.layout_)this.writeDouble(e in i?i[e]:this.nodata_[e])}writeLineString(e,t){this.writeUint32(e.length);for(let i=0;i<e.length;i++)this.writePoint(e[i],t)}writePolygon(e,t){this.writeUint32(e.length);for(let i=0;i<e.length;i++)this.writeLineString(e[i],t)}writeWkbHeader(e,t){e%=1e3,this.layout_.indexOf("Z")>=0&&(e+=this.isEWKB_?2147483648:1e3),this.layout_.indexOf("M")>=0&&(e+=this.isEWKB_?1073741824:2e3),this.isEWKB_&&Number.isInteger(t)&&(e|=536870912),this.writeUint8(this.isLittleEndian_?1:0),this.writeUint32(e),this.isEWKB_&&Number.isInteger(t)&&this.writeUint32(t)}writeMultiPoint(e,t){this.writeUint32(e.length);for(let i=0;i<e.length;i++)this.writeWkbHeader(1),this.writePoint(e[i],t)}writeMultiLineString(e,t){this.writeUint32(e.length);for(let i=0;i<e.length;i++)this.writeWkbHeader(2),this.writeLineString(e[i],t)}writeMultiPolygon(e,t){this.writeUint32(e.length);for(let i=0;i<e.length;i++)this.writeWkbHeader(3),this.writePolygon(e[i],t)}writeGeometryCollection(e){this.writeUint32(e.length);for(let t=0;t<e.length;t++)this.writeGeometry(e[t])}findMinimumLayout(e,t=GeometryLayout.XYZM){if(e instanceof SimpleGeometry)return(i=e.getLayout())===(r=t)?i:i===GeometryLayout.XYZM?r:r===GeometryLayout.XYZM?i:GeometryLayout.XY;var i,r;if(e instanceof GeometryCollection){const i=e.getGeometriesArray();for(let e=0;e<i.length&&t!==GeometryLayout.XY;e++)t=this.findMinimumLayout(i[e],t)}return t}writeGeometry(e,t){const i={[GeometryType.POINT]:WKBGeometryType.POINT,[GeometryType.LINE_STRING]:WKBGeometryType.LINE_STRING,[GeometryType.POLYGON]:WKBGeometryType.POLYGON,[GeometryType.MULTI_POINT]:WKBGeometryType.MULTI_POINT,[GeometryType.MULTI_LINE_STRING]:WKBGeometryType.MULTI_LINE_STRING,[GeometryType.MULTI_POLYGON]:WKBGeometryType.MULTI_POLYGON,[GeometryType.GEOMETRY_COLLECTION]:WKBGeometryType.GEOMETRY_COLLECTION},r=e.getType(),o=i[r];if(!o)throw new Error("GeometryType "+r+" is not supported");if(this.layout_||(this.layout_=this.findMinimumLayout(e)),this.writeWkbHeader(o,t),e instanceof SimpleGeometry){({[GeometryType.POINT]:this.writePoint,[GeometryType.LINE_STRING]:this.writeLineString,[GeometryType.POLYGON]:this.writePolygon,[GeometryType.MULTI_POINT]:this.writeMultiPoint,[GeometryType.MULTI_LINE_STRING]:this.writeMultiLineString,[GeometryType.MULTI_POLYGON]:this.writeMultiPolygon})[r].call(this,e.getCoordinates(),e.getLayout())}else e instanceof GeometryCollection&&this.writeGeometryCollection(e.getGeometriesArray())}getBuffer(){const e=this.writeQueue_.reduce(((e,t)=>e+t[0]),0),t=new ArrayBuffer(e),i=new DataView(t);let r=0;return this.writeQueue_.forEach((e=>{switch(e[0]){case 1:i.setUint8(r,e[1]);break;case 4:i.setUint32(r,e[1],this.isLittleEndian_);break;case 8:i.setFloat64(r,e[1],this.isLittleEndian_)}r+=e[0]})),t}}class WKB extends FeatureFormat{constructor(e){super();const t=e||{};this.splitCollection=Boolean(t.splitCollection),this.viewCache_=null,this.hex_=!1!==t.hex,this.littleEndian_=!1!==t.littleEndian,this.ewkb_=!1!==t.ewkb,this.layout_=t.geometryLayout,this.nodataZ_=t.nodataZ||0,this.nodataM_=t.nodataM||0,this.srid_=t.srid}getType(){return this.hex_?FormatType.TEXT:FormatType.ARRAY_BUFFER}readFeature(e,t){return new Feature({geometry:this.readGeometry(e,t)})}readFeatures(e,t){let i=[];const r=this.readGeometry(e,t);return i=this.splitCollection&&r instanceof GeometryCollection?r.getGeometriesArray():[r],i.map((e=>new Feature({geometry:e})))}readGeometry(e,t){const i=getDataView(e);if(!i)return null;const r=new WkbReader(i).readGeometry();this.viewCache_=i;const o=this.getReadOptions(e,t);return this.viewCache_=null,transformGeometryWithOptions(r,!1,o)}readProjection(e){const t=this.viewCache_||getDataView(e);if(!t)return;const i=new WkbReader(t);return i.readWkbHeader(),i.getSrid()&&getProjection("EPSG:"+i.getSrid())||void 0}writeFeature(e,t){return this.writeGeometry(e.getGeometry(),t)}writeFeatures(e,t){return this.writeGeometry(new GeometryCollection(e.map((e=>e.getGeometry()))),t)}writeGeometry(e,t){const i=this.adaptOptions(t),r=new WkbWriter({layout:this.layout_,littleEndian:this.littleEndian_,ewkb:this.ewkb_,nodata:{Z:this.nodataZ_,M:this.nodataM_}});let o=Number.isInteger(this.srid_)?Number(this.srid_):null;if(!1!==this.srid_&&!Number.isInteger(this.srid_)){const e=i.dataProjection&&getProjection(i.dataProjection);if(e){const t=e.getCode();0===t.indexOf("EPSG:")&&(o=Number(t.substring(5)))}}r.writeGeometry(transformGeometryWithOptions(e,!0,i),o);const n=r.getBuffer();return this.hex_?encodeHexString(n):n}}function encodeHexString(e){const t=new Uint8Array(e);return Array.from(t.values()).map((e=>(e<16?"0":"")+Number(e).toString(16).toUpperCase())).join("")}function decodeHexString(e){const t=new Uint8Array(e.length/2);for(let i=0;i<e.length/2;i++)t[i]=parseInt(e.substr(2*i,2),16);return new DataView(t.buffer)}function getDataView(e){return"string"==typeof e?decodeHexString(e):ArrayBuffer.isView(e)?e instanceof DataView?e:new DataView(e.buffer,e.byteOffset,e.byteLength):e instanceof ArrayBuffer?new DataView(e):null}export default WKB;
//# sourceMappingURL=/sm/1d40bd1dfee920c0a7dbad79ed4e98f59b1e3c1bbf23d5be4ab462754bc0b089.map