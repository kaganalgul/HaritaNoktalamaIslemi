/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/src/format/KML.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import Feature from"../Feature.js";import Fill from"../style/Fill.js";import GeometryCollection from"../geom/GeometryCollection.js";import GeometryLayout from"../geom/GeometryLayout.js";import GeometryType from"../geom/GeometryType.js";import Icon from"../style/Icon.js";import IconAnchorUnits from"../style/IconAnchorUnits.js";import IconOrigin from"../style/IconOrigin.js";import ImageState from"../ImageState.js";import LineString from"../geom/LineString.js";import MultiLineString from"../geom/MultiLineString.js";import MultiPoint from"../geom/MultiPoint.js";import MultiPolygon from"../geom/MultiPolygon.js";import Point from"../geom/Point.js";import Polygon from"../geom/Polygon.js";import Stroke from"../style/Stroke.js";import Style from"../style/Style.js";import Text from"../style/Text.js";import XMLFeature from"./XMLFeature.js";import{OBJECT_PROPERTY_NODE_FACTORY,XML_SCHEMA_INSTANCE_URI,createElementNS,getAllTextContent,isDocument,makeArrayExtender,makeArrayPusher,makeChildAppender,makeObjectPropertySetter,makeReplacer,makeSequence,makeSimpleNodeFactory,makeStructureNS,parse,parseNode,pushParseAndPop,pushSerializeAndPop}from"../xml.js";import{asArray}from"../color.js";import{assert}from"../asserts.js";import{extend,includes}from"../array.js";import{get as getProjection}from"../proj.js";import{readBoolean,readDecimal,readString,writeBooleanTextNode,writeCDATASection,writeDecimalTextNode,writeStringTextNode}from"./xsd.js";import{toRadians}from"../math.js";import{transformGeometryWithOptions}from"./Feature.js";const GX_NAMESPACE_URIS=["http://www.google.com/kml/ext/2.2"],NAMESPACE_URIS=[null,"http://earth.google.com/kml/2.0","http://earth.google.com/kml/2.1","http://earth.google.com/kml/2.2","http://www.opengis.net/kml/2.2"],SCHEMA_LOCATION="http://www.opengis.net/kml/2.2 https://developers.google.com/kml/schema/kml22gx.xsd",ICON_ANCHOR_UNITS_MAP={fraction:IconAnchorUnits.FRACTION,pixels:IconAnchorUnits.PIXELS,insetPixels:IconAnchorUnits.PIXELS},PLACEMARK_PARSERS=makeStructureNS(NAMESPACE_URIS,{ExtendedData:extendedDataParser,Region:regionParser,MultiGeometry:makeObjectPropertySetter(readMultiGeometry,"geometry"),LineString:makeObjectPropertySetter(readLineString,"geometry"),LinearRing:makeObjectPropertySetter(readLinearRing,"geometry"),Point:makeObjectPropertySetter(readPoint,"geometry"),Polygon:makeObjectPropertySetter(readPolygon,"geometry"),Style:makeObjectPropertySetter(readStyle),StyleMap:placemarkStyleMapParser,address:makeObjectPropertySetter(readString),description:makeObjectPropertySetter(readString),name:makeObjectPropertySetter(readString),open:makeObjectPropertySetter(readBoolean),phoneNumber:makeObjectPropertySetter(readString),styleUrl:makeObjectPropertySetter(readStyleURL),visibility:makeObjectPropertySetter(readBoolean)},makeStructureNS(GX_NAMESPACE_URIS,{MultiTrack:makeObjectPropertySetter(readGxMultiTrack,"geometry"),Track:makeObjectPropertySetter(readGxTrack,"geometry")})),NETWORK_LINK_PARSERS=makeStructureNS(NAMESPACE_URIS,{ExtendedData:extendedDataParser,Region:regionParser,Link:linkParser,address:makeObjectPropertySetter(readString),description:makeObjectPropertySetter(readString),name:makeObjectPropertySetter(readString),open:makeObjectPropertySetter(readBoolean),phoneNumber:makeObjectPropertySetter(readString),visibility:makeObjectPropertySetter(readBoolean)}),LINK_PARSERS=makeStructureNS(NAMESPACE_URIS,{href:makeObjectPropertySetter(readURI)}),REGION_PARSERS=makeStructureNS(NAMESPACE_URIS,{LatLonAltBox:latLonAltBoxParser,Lod:lodParser}),KML_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["Document","Placemark"]),KML_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{Document:makeChildAppender(writeDocument),Placemark:makeChildAppender(writePlacemark)});let DEFAULT_COLOR,DEFAULT_IMAGE_STYLE_ANCHOR,DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,DEFAULT_IMAGE_STYLE_SIZE,DEFAULT_IMAGE_STYLE_SRC,DEFAULT_FILL_STYLE=null;export function getDefaultFillStyle(){return DEFAULT_FILL_STYLE}let DEFAULT_NO_IMAGE_STYLE,DEFAULT_IMAGE_STYLE=null;export function getDefaultImageStyle(){return DEFAULT_IMAGE_STYLE}let DEFAULT_TEXT_STROKE_STYLE,DEFAULT_STROKE_STYLE=null;export function getDefaultStrokeStyle(){return DEFAULT_STROKE_STYLE}let DEFAULT_TEXT_STYLE=null;export function getDefaultTextStyle(){return DEFAULT_TEXT_STYLE}let DEFAULT_STYLE=null;export function getDefaultStyle(){return DEFAULT_STYLE}let TEXTAREA,DEFAULT_STYLE_ARRAY=null;export function getDefaultStyleArray(){return DEFAULT_STYLE_ARRAY}function scaleForSize(e){return 32/Math.min(e[0],e[1])}function createStyleDefaults(){DEFAULT_COLOR=[255,255,255,1],DEFAULT_FILL_STYLE=new Fill({color:DEFAULT_COLOR}),DEFAULT_IMAGE_STYLE_ANCHOR=[20,2],DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS=IconAnchorUnits.PIXELS,DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS=IconAnchorUnits.PIXELS,DEFAULT_IMAGE_STYLE_SIZE=[64,64],DEFAULT_IMAGE_STYLE_SRC="https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png",DEFAULT_IMAGE_STYLE=new Icon({anchor:DEFAULT_IMAGE_STYLE_ANCHOR,anchorOrigin:IconOrigin.BOTTOM_LEFT,anchorXUnits:DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,anchorYUnits:DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,crossOrigin:"anonymous",rotation:0,scale:scaleForSize(DEFAULT_IMAGE_STYLE_SIZE),size:DEFAULT_IMAGE_STYLE_SIZE,src:DEFAULT_IMAGE_STYLE_SRC}),DEFAULT_NO_IMAGE_STYLE="NO_IMAGE",DEFAULT_STROKE_STYLE=new Stroke({color:DEFAULT_COLOR,width:1}),DEFAULT_TEXT_STROKE_STYLE=new Stroke({color:[51,51,51,1],width:2}),DEFAULT_TEXT_STYLE=new Text({font:"bold 16px Helvetica",fill:DEFAULT_FILL_STYLE,stroke:DEFAULT_TEXT_STROKE_STYLE,scale:.8}),DEFAULT_STYLE=new Style({fill:DEFAULT_FILL_STYLE,image:DEFAULT_IMAGE_STYLE,text:DEFAULT_TEXT_STYLE,stroke:DEFAULT_STROKE_STYLE,zIndex:0}),DEFAULT_STYLE_ARRAY=[DEFAULT_STYLE]}function defaultIconUrlFunction(e){return e}class KML extends XMLFeature{constructor(e){super();const t=e||{};DEFAULT_STYLE_ARRAY||createStyleDefaults(),this.dataProjection=getProjection("EPSG:4326"),this.defaultStyle_=t.defaultStyle?t.defaultStyle:DEFAULT_STYLE_ARRAY,this.extractStyles_=void 0===t.extractStyles||t.extractStyles,this.writeStyles_=void 0===t.writeStyles||t.writeStyles,this.sharedStyles_={},this.showPointNames_=void 0===t.showPointNames||t.showPointNames,this.crossOrigin_=void 0!==t.crossOrigin?t.crossOrigin:"anonymous",this.iconUrlFunction_=t.iconUrlFunction?t.iconUrlFunction:defaultIconUrlFunction,this.supportedMediaTypes=["application/vnd.google-earth.kml+xml"]}readDocumentOrFolder_(e,t){const r=makeStructureNS(NAMESPACE_URIS,{Document:makeArrayExtender(this.readDocumentOrFolder_,this),Folder:makeArrayExtender(this.readDocumentOrFolder_,this),Placemark:makeArrayPusher(this.readPlacemark_,this),Style:this.readSharedStyle_.bind(this),StyleMap:this.readSharedStyleMap_.bind(this)}),o=pushParseAndPop([],r,e,t,this);return o||void 0}readPlacemark_(e,t){const r=pushParseAndPop({geometry:null},PLACEMARK_PARSERS,e,t,this);if(!r)return;const o=new Feature,n=e.getAttribute("id");null!==n&&o.setId(n);const i=t[0],a=r.geometry;if(a&&transformGeometryWithOptions(a,!1,i),o.setGeometry(a),delete r.geometry,this.extractStyles_){const e=createFeatureStyleFunction(r.Style,r.styleUrl,this.defaultStyle_,this.sharedStyles_,this.showPointNames_);o.setStyle(e)}return delete r.Style,o.setProperties(r,!0),o}readSharedStyle_(e,t){const r=e.getAttribute("id");if(null!==r){const o=readStyle.call(this,e,t);if(o){let t,n=e.baseURI;if(n&&"about:blank"!=n||(n=window.location.href),n){t=new URL("#"+r,n).href}else t="#"+r;this.sharedStyles_[t]=o}}}readSharedStyleMap_(e,t){const r=e.getAttribute("id");if(null===r)return;const o=readStyleMapValue.call(this,e,t);if(!o)return;let n,i=e.baseURI;if(i&&"about:blank"!=i||(i=window.location.href),i){n=new URL("#"+r,i).href}else n="#"+r;this.sharedStyles_[n]=o}readFeatureFromNode(e,t){if(!includes(NAMESPACE_URIS,e.namespaceURI))return null;const r=this.readPlacemark_(e,[this.getReadOptions(e,t)]);return r||null}readFeaturesFromNode(e,t){if(!includes(NAMESPACE_URIS,e.namespaceURI))return[];let r;const o=e.localName;if("Document"==o||"Folder"==o)return r=this.readDocumentOrFolder_(e,[this.getReadOptions(e,t)]),r||[];if("Placemark"==o){const r=this.readPlacemark_(e,[this.getReadOptions(e,t)]);return r?[r]:[]}if("kml"==o){r=[];for(let o=e.firstElementChild;o;o=o.nextElementSibling){const e=this.readFeaturesFromNode(o,t);e&&extend(r,e)}return r}return[]}readName(e){if(e){if("string"==typeof e){const t=parse(e);return this.readNameFromDocument(t)}return isDocument(e)?this.readNameFromDocument(e):this.readNameFromNode(e)}}readNameFromDocument(e){for(let t=e.firstChild;t;t=t.nextSibling)if(t.nodeType==Node.ELEMENT_NODE){const e=this.readNameFromNode(t);if(e)return e}}readNameFromNode(e){for(let t=e.firstElementChild;t;t=t.nextElementSibling)if(includes(NAMESPACE_URIS,t.namespaceURI)&&"name"==t.localName)return readString(t);for(let t=e.firstElementChild;t;t=t.nextElementSibling){const e=t.localName;if(includes(NAMESPACE_URIS,t.namespaceURI)&&("Document"==e||"Folder"==e||"Placemark"==e||"kml"==e)){const e=this.readNameFromNode(t);if(e)return e}}}readNetworkLinks(e){const t=[];if("string"==typeof e){const r=parse(e);extend(t,this.readNetworkLinksFromDocument(r))}else isDocument(e)?extend(t,this.readNetworkLinksFromDocument(e)):extend(t,this.readNetworkLinksFromNode(e));return t}readNetworkLinksFromDocument(e){const t=[];for(let r=e.firstChild;r;r=r.nextSibling)r.nodeType==Node.ELEMENT_NODE&&extend(t,this.readNetworkLinksFromNode(r));return t}readNetworkLinksFromNode(e){const t=[];for(let r=e.firstElementChild;r;r=r.nextElementSibling)if(includes(NAMESPACE_URIS,r.namespaceURI)&&"NetworkLink"==r.localName){const e=pushParseAndPop({},NETWORK_LINK_PARSERS,r,[]);t.push(e)}for(let r=e.firstElementChild;r;r=r.nextElementSibling){const e=r.localName;!includes(NAMESPACE_URIS,r.namespaceURI)||"Document"!=e&&"Folder"!=e&&"kml"!=e||extend(t,this.readNetworkLinksFromNode(r))}return t}readRegion(e){const t=[];if("string"==typeof e){const r=parse(e);extend(t,this.readRegionFromDocument(r))}else isDocument(e)?extend(t,this.readRegionFromDocument(e)):extend(t,this.readRegionFromNode(e));return t}readRegionFromDocument(e){const t=[];for(let r=e.firstChild;r;r=r.nextSibling)r.nodeType==Node.ELEMENT_NODE&&extend(t,this.readRegionFromNode(r));return t}readRegionFromNode(e){const t=[];for(let r=e.firstElementChild;r;r=r.nextElementSibling)if(includes(NAMESPACE_URIS,r.namespaceURI)&&"Region"==r.localName){const e=pushParseAndPop({},REGION_PARSERS,r,[]);t.push(e)}for(let r=e.firstElementChild;r;r=r.nextElementSibling){const e=r.localName;!includes(NAMESPACE_URIS,r.namespaceURI)||"Document"!=e&&"Folder"!=e&&"kml"!=e||extend(t,this.readRegionFromNode(r))}return t}writeFeaturesNode(e,t){t=this.adaptOptions(t);const r=createElementNS(NAMESPACE_URIS[4],"kml"),o="http://www.w3.org/2000/xmlns/";r.setAttributeNS(o,"xmlns:gx",GX_NAMESPACE_URIS[0]),r.setAttributeNS(o,"xmlns:xsi",XML_SCHEMA_INSTANCE_URI),r.setAttributeNS(XML_SCHEMA_INSTANCE_URI,"xsi:schemaLocation",SCHEMA_LOCATION);const n={node:r},i={};e.length>1?i.Document=e:1==e.length&&(i.Placemark=e[0]);const a=KML_SEQUENCE[r.namespaceURI],l=makeSequence(i,a);return pushSerializeAndPop(n,KML_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,l,[t],a,this),r}}function createNameStyleFunction(e,t){const r=[0,0];let o="start";const n=e.getImage();if(n){const e=n.getSize();if(e&&2==e.length){const t=n.getScaleArray(),i=n.getAnchor();r[0]=t[0]*(e[0]-i[0]),r[1]=t[1]*(e[1]/2-i[1]),o="left"}}let i=e.getText();i?(i=i.clone(),i.setFont(i.getFont()||DEFAULT_TEXT_STYLE.getFont()),i.setScale(i.getScale()||DEFAULT_TEXT_STYLE.getScale()),i.setFill(i.getFill()||DEFAULT_TEXT_STYLE.getFill()),i.setStroke(i.getStroke()||DEFAULT_TEXT_STROKE_STYLE)):i=DEFAULT_TEXT_STYLE.clone(),i.setText(t),i.setOffsetX(r[0]),i.setOffsetY(r[1]),i.setTextAlign(o);return new Style({image:n,text:i})}function createFeatureStyleFunction(e,t,r,o,n){return function(i,a){let l=n,S="",s=[];if(l){const e=i.getGeometry();if(e){const t=e.getType();t===GeometryType.GEOMETRY_COLLECTION?(s=e.getGeometriesArrayRecursive().filter((function(e){const t=e.getType();return t===GeometryType.POINT||t===GeometryType.MULTI_POINT})),l=s.length>0):l=t===GeometryType.POINT||t===GeometryType.MULTI_POINT}}l&&(S=i.get("name"),l=l&&!!S,l&&S.search(/&[^&]+;/)>-1&&(TEXTAREA||(TEXTAREA=document.createElement("textarea")),TEXTAREA.innerHTML=S,S=TEXTAREA.value));let E=r;if(e?E=e:t&&(E=findStyle(t,r,o)),l){const e=createNameStyleFunction(E[0],S);if(s.length>0){e.setGeometry(new GeometryCollection(s));return[e,new Style({geometry:E[0].getGeometry(),image:null,fill:E[0].getFill(),stroke:E[0].getStroke(),text:null})].concat(E.slice(1))}return e}return E}}function findStyle(e,t,r){return Array.isArray(e)?e:"string"==typeof e?findStyle(r[e],t,r):t}function readColor(e){const t=getAllTextContent(e,!1),r=/^\s*#?\s*([0-9A-Fa-f]{8})\s*$/.exec(t);if(r){const e=r[1];return[parseInt(e.substr(6,2),16),parseInt(e.substr(4,2),16),parseInt(e.substr(2,2),16),parseInt(e.substr(0,2),16)/255]}}export function readFlatCoordinates(e){let t=getAllTextContent(e,!1);const r=[];t=t.replace(/\s*,\s*/g,",");const o=/^\s*([+\-]?\d*\.?\d+(?:e[+\-]?\d+)?),([+\-]?\d*\.?\d+(?:e[+\-]?\d+)?)(?:\s+|,|$)(?:([+\-]?\d*\.?\d+(?:e[+\-]?\d+)?)(?:\s+|$))?\s*/i;let n;for(;n=o.exec(t);){const e=parseFloat(n[1]),o=parseFloat(n[2]),i=n[3]?parseFloat(n[3]):0;r.push(e,o,i),t=t.substr(n[0].length)}if(""===t)return r}function readURI(e){const t=getAllTextContent(e,!1).trim();let r=e.baseURI;if(r&&"about:blank"!=r||(r=window.location.href),r){return new URL(t,r).href}return t}function readStyleURL(e){const t=getAllTextContent(e,!1).trim().replace(/^(?!.*#)/,"#");let r=e.baseURI;if(r&&"about:blank"!=r||(r=window.location.href),r){return new URL(t,r).href}return t}function readVec2(e){const t=e.getAttribute("xunits"),r=e.getAttribute("yunits");let o;return o="insetPixels"!==t?"insetPixels"!==r?IconOrigin.BOTTOM_LEFT:IconOrigin.TOP_LEFT:"insetPixels"!==r?IconOrigin.BOTTOM_RIGHT:IconOrigin.TOP_RIGHT,{x:parseFloat(e.getAttribute("x")),xunits:ICON_ANCHOR_UNITS_MAP[t],y:parseFloat(e.getAttribute("y")),yunits:ICON_ANCHOR_UNITS_MAP[r],origin:o}}function readScale(e){return readDecimal(e)}const STYLE_MAP_PARSERS=makeStructureNS(NAMESPACE_URIS,{Pair:pairDataParser});function readStyleMapValue(e,t){return pushParseAndPop(void 0,STYLE_MAP_PARSERS,e,t,this)}const ICON_STYLE_PARSERS=makeStructureNS(NAMESPACE_URIS,{Icon:makeObjectPropertySetter(readIcon),color:makeObjectPropertySetter(readColor),heading:makeObjectPropertySetter(readDecimal),hotSpot:makeObjectPropertySetter(readVec2),scale:makeObjectPropertySetter(readScale)});function iconStyleParser(e,t){const r=pushParseAndPop({},ICON_STYLE_PARSERS,e,t);if(!r)return;const o=t[t.length-1],n="Icon"in r?r.Icon:{},i=!("Icon"in r)||Object.keys(n).length>0;let a;const l=n.href;let S,s,E;l?a=l:i&&(a=DEFAULT_IMAGE_STYLE_SRC);let c=IconOrigin.BOTTOM_LEFT;const A=r.hotSpot;let m;A?(S=[A.x,A.y],s=A.xunits,E=A.yunits,c=A.origin):/^http:\/\/maps\.(?:google|gstatic)\.com\//.test(a)&&(/pushpin/.test(a)?(S=DEFAULT_IMAGE_STYLE_ANCHOR,s=DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,E=DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS):/arrow-reverse/.test(a)?(S=[54,42],s=DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,E=DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS):/paddle/.test(a)&&(S=[32,1],s=DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,E=DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS));const d=n.x,_=n.y;let u;void 0!==d&&void 0!==_&&(m=[d,_]);const T=n.w,p=n.h;let R;void 0!==T&&void 0!==p&&(u=[T,p]);const y=r.heading;void 0!==y&&(R=toRadians(y));const N=r.scale,P=r.color;if(i){a==DEFAULT_IMAGE_STYLE_SRC&&(u=DEFAULT_IMAGE_STYLE_SIZE);const e=new Icon({anchor:S,anchorOrigin:c,anchorXUnits:s,anchorYUnits:E,crossOrigin:this.crossOrigin_,offset:m,offsetOrigin:IconOrigin.BOTTOM_LEFT,rotation:R,scale:N,size:u,src:this.iconUrlFunction_(a),color:P}),t=e.getScaleArray()[0],r=e.getSize();if(null===r){const r=e.getImageState();if(r===ImageState.IDLE||r===ImageState.LOADING){const o=function(){const r=e.getImageState();if(r!==ImageState.IDLE&&r!==ImageState.LOADING){const r=e.getSize();if(r&&2==r.length){const o=scaleForSize(r);e.setScale(t*o)}e.unlistenImageChange(o)}};e.listenImageChange(o),r===ImageState.IDLE&&e.load()}}else if(2==r.length){const o=scaleForSize(r);e.setScale(t*o)}o.imageStyle=e}else o.imageStyle=DEFAULT_NO_IMAGE_STYLE}const LABEL_STYLE_PARSERS=makeStructureNS(NAMESPACE_URIS,{color:makeObjectPropertySetter(readColor),scale:makeObjectPropertySetter(readScale)});function labelStyleParser(e,t){const r=pushParseAndPop({},LABEL_STYLE_PARSERS,e,t);if(!r)return;const o=t[t.length-1],n=new Text({fill:new Fill({color:"color"in r?r.color:DEFAULT_COLOR}),scale:r.scale});o.textStyle=n}const LINE_STYLE_PARSERS=makeStructureNS(NAMESPACE_URIS,{color:makeObjectPropertySetter(readColor),width:makeObjectPropertySetter(readDecimal)});function lineStyleParser(e,t){const r=pushParseAndPop({},LINE_STYLE_PARSERS,e,t);if(!r)return;const o=t[t.length-1],n=new Stroke({color:"color"in r?r.color:DEFAULT_COLOR,width:"width"in r?r.width:1});o.strokeStyle=n}const POLY_STYLE_PARSERS=makeStructureNS(NAMESPACE_URIS,{color:makeObjectPropertySetter(readColor),fill:makeObjectPropertySetter(readBoolean),outline:makeObjectPropertySetter(readBoolean)});function polyStyleParser(e,t){const r=pushParseAndPop({},POLY_STYLE_PARSERS,e,t);if(!r)return;const o=t[t.length-1],n=new Fill({color:"color"in r?r.color:DEFAULT_COLOR});o.fillStyle=n;const i=r.fill;void 0!==i&&(o.fill=i);const a=r.outline;void 0!==a&&(o.outline=a)}const FLAT_LINEAR_RING_PARSERS=makeStructureNS(NAMESPACE_URIS,{coordinates:makeReplacer(readFlatCoordinates)});function readFlatLinearRing(e,t){return pushParseAndPop(null,FLAT_LINEAR_RING_PARSERS,e,t)}function gxCoordParser(e,t){const r=t[t.length-1].coordinates,o=getAllTextContent(e,!1),n=/^\s*([+\-]?\d+(?:\.\d*)?(?:e[+\-]?\d*)?)\s+([+\-]?\d+(?:\.\d*)?(?:e[+\-]?\d*)?)\s+([+\-]?\d+(?:\.\d*)?(?:e[+\-]?\d*)?)\s*$/i.exec(o);if(n){const e=parseFloat(n[1]),t=parseFloat(n[2]),o=parseFloat(n[3]);r.push([e,t,o])}else r.push([])}const GX_MULTITRACK_GEOMETRY_PARSERS=makeStructureNS(GX_NAMESPACE_URIS,{Track:makeArrayPusher(readGxTrack)});function readGxMultiTrack(e,t){const r=pushParseAndPop([],GX_MULTITRACK_GEOMETRY_PARSERS,e,t);if(r)return new MultiLineString(r)}const GX_TRACK_PARSERS=makeStructureNS(NAMESPACE_URIS,{when:whenParser},makeStructureNS(GX_NAMESPACE_URIS,{coord:gxCoordParser}));function readGxTrack(e,t){const r=pushParseAndPop({coordinates:[],whens:[]},GX_TRACK_PARSERS,e,t);if(!r)return;const o=[],n=r.coordinates,i=r.whens;for(let e=0,t=Math.min(n.length,i.length);e<t;++e)3==n[e].length&&o.push(n[e][0],n[e][1],n[e][2],i[e]);return new LineString(o,GeometryLayout.XYZM)}const ICON_PARSERS=makeStructureNS(NAMESPACE_URIS,{href:makeObjectPropertySetter(readURI)},makeStructureNS(GX_NAMESPACE_URIS,{x:makeObjectPropertySetter(readDecimal),y:makeObjectPropertySetter(readDecimal),w:makeObjectPropertySetter(readDecimal),h:makeObjectPropertySetter(readDecimal)}));function readIcon(e,t){const r=pushParseAndPop({},ICON_PARSERS,e,t);return r||null}const GEOMETRY_FLAT_COORDINATES_PARSERS=makeStructureNS(NAMESPACE_URIS,{coordinates:makeReplacer(readFlatCoordinates)});function readFlatCoordinatesFromNode(e,t){return pushParseAndPop(null,GEOMETRY_FLAT_COORDINATES_PARSERS,e,t)}const EXTRUDE_AND_ALTITUDE_MODE_PARSERS=makeStructureNS(NAMESPACE_URIS,{extrude:makeObjectPropertySetter(readBoolean),tessellate:makeObjectPropertySetter(readBoolean),altitudeMode:makeObjectPropertySetter(readString)});function readLineString(e,t){const r=pushParseAndPop({},EXTRUDE_AND_ALTITUDE_MODE_PARSERS,e,t),o=readFlatCoordinatesFromNode(e,t);if(o){const e=new LineString(o,GeometryLayout.XYZ);return e.setProperties(r,!0),e}}function readLinearRing(e,t){const r=pushParseAndPop({},EXTRUDE_AND_ALTITUDE_MODE_PARSERS,e,t),o=readFlatCoordinatesFromNode(e,t);if(o){const e=new Polygon(o,GeometryLayout.XYZ,[o.length]);return e.setProperties(r,!0),e}}const MULTI_GEOMETRY_PARSERS=makeStructureNS(NAMESPACE_URIS,{LineString:makeArrayPusher(readLineString),LinearRing:makeArrayPusher(readLinearRing),MultiGeometry:makeArrayPusher(readMultiGeometry),Point:makeArrayPusher(readPoint),Polygon:makeArrayPusher(readPolygon)});function readMultiGeometry(e,t){const r=pushParseAndPop([],MULTI_GEOMETRY_PARSERS,e,t);if(!r)return null;if(0===r.length)return new GeometryCollection(r);let o,n=!0;const i=r[0].getType();let a;for(let e=1,t=r.length;e<t;++e)if(a=r[e],a.getType()!=i){n=!1;break}if(n){let e,t;if(i==GeometryType.POINT){const n=r[0];e=n.getLayout(),t=n.getFlatCoordinates();for(let e=1,o=r.length;e<o;++e)a=r[e],extend(t,a.getFlatCoordinates());o=new MultiPoint(t,e),setCommonGeometryProperties(o,r)}else i==GeometryType.LINE_STRING?(o=new MultiLineString(r),setCommonGeometryProperties(o,r)):i==GeometryType.POLYGON?(o=new MultiPolygon(r),setCommonGeometryProperties(o,r)):i==GeometryType.GEOMETRY_COLLECTION?o=new GeometryCollection(r):assert(!1,37)}else o=new GeometryCollection(r);return o}function readPoint(e,t){const r=pushParseAndPop({},EXTRUDE_AND_ALTITUDE_MODE_PARSERS,e,t),o=readFlatCoordinatesFromNode(e,t);if(o){const e=new Point(o,GeometryLayout.XYZ);return e.setProperties(r,!0),e}}const FLAT_LINEAR_RINGS_PARSERS=makeStructureNS(NAMESPACE_URIS,{innerBoundaryIs:innerBoundaryIsParser,outerBoundaryIs:outerBoundaryIsParser});function readPolygon(e,t){const r=pushParseAndPop({},EXTRUDE_AND_ALTITUDE_MODE_PARSERS,e,t),o=pushParseAndPop([null],FLAT_LINEAR_RINGS_PARSERS,e,t);if(o&&o[0]){const e=o[0],t=[e.length];for(let r=1,n=o.length;r<n;++r)extend(e,o[r]),t.push(e.length);const n=new Polygon(e,GeometryLayout.XYZ,t);return n.setProperties(r,!0),n}}const STYLE_PARSERS=makeStructureNS(NAMESPACE_URIS,{IconStyle:iconStyleParser,LabelStyle:labelStyleParser,LineStyle:lineStyleParser,PolyStyle:polyStyleParser});function readStyle(e,t){const r=pushParseAndPop({},STYLE_PARSERS,e,t,this);if(!r)return null;let o="fillStyle"in r?r.fillStyle:DEFAULT_FILL_STYLE;const n=r.fill;let i;void 0===n||n||(o=null),"imageStyle"in r?r.imageStyle!=DEFAULT_NO_IMAGE_STYLE&&(i=r.imageStyle):i=DEFAULT_IMAGE_STYLE;const a="textStyle"in r?r.textStyle:DEFAULT_TEXT_STYLE,l="strokeStyle"in r?r.strokeStyle:DEFAULT_STROKE_STYLE,S=r.outline;return void 0===S||S?[new Style({fill:o,image:i,stroke:l,text:a,zIndex:void 0})]:[new Style({geometry:function(e){const t=e.getGeometry(),r=t.getType();if(r===GeometryType.GEOMETRY_COLLECTION){return new GeometryCollection(t.getGeometriesArrayRecursive().filter((function(e){const t=e.getType();return t!==GeometryType.POLYGON&&t!==GeometryType.MULTI_POLYGON})))}if(r!==GeometryType.POLYGON&&r!==GeometryType.MULTI_POLYGON)return t},fill:o,image:i,stroke:l,text:a,zIndex:void 0}),new Style({geometry:function(e){const t=e.getGeometry(),r=t.getType();if(r===GeometryType.GEOMETRY_COLLECTION){return new GeometryCollection(t.getGeometriesArrayRecursive().filter((function(e){const t=e.getType();return t===GeometryType.POLYGON||t===GeometryType.MULTI_POLYGON})))}if(r===GeometryType.POLYGON||r===GeometryType.MULTI_POLYGON)return t},fill:o,stroke:null,zIndex:void 0})]}function setCommonGeometryProperties(e,t){const r=t.length,o=new Array(t.length),n=new Array(t.length),i=new Array(t.length);let a,l,S;a=!1,l=!1,S=!1;for(let e=0;e<r;++e){const r=t[e];o[e]=r.get("extrude"),n[e]=r.get("tessellate"),i[e]=r.get("altitudeMode"),a=a||void 0!==o[e],l=l||void 0!==n[e],S=S||i[e]}a&&e.set("extrude",o),l&&e.set("tessellate",n),S&&e.set("altitudeMode",i)}const DATA_PARSERS=makeStructureNS(NAMESPACE_URIS,{displayName:makeObjectPropertySetter(readString),value:makeObjectPropertySetter(readString)});function dataParser(e,t){const r=e.getAttribute("name");parseNode(DATA_PARSERS,e,t);const o=t[t.length-1];r&&o.displayName?o[r]={value:o.value,displayName:o.displayName,toString:function(){return o.value}}:null!==r?o[r]=o.value:null!==o.displayName&&(o[o.displayName]=o.value),delete o.value}const EXTENDED_DATA_PARSERS=makeStructureNS(NAMESPACE_URIS,{Data:dataParser,SchemaData:schemaDataParser});function extendedDataParser(e,t){parseNode(EXTENDED_DATA_PARSERS,e,t)}function regionParser(e,t){parseNode(REGION_PARSERS,e,t)}const PAIR_PARSERS=makeStructureNS(NAMESPACE_URIS,{Style:makeObjectPropertySetter(readStyle),key:makeObjectPropertySetter(readString),styleUrl:makeObjectPropertySetter(readStyleURL)});function pairDataParser(e,t){const r=pushParseAndPop({},PAIR_PARSERS,e,t,this);if(!r)return;const o=r.key;if(o&&"normal"==o){const e=r.styleUrl;e&&(t[t.length-1]=e);const o=r.Style;o&&(t[t.length-1]=o)}}function placemarkStyleMapParser(e,t){const r=readStyleMapValue.call(this,e,t);if(!r)return;const o=t[t.length-1];Array.isArray(r)?o.Style=r:"string"==typeof r?o.styleUrl=r:assert(!1,38)}const SCHEMA_DATA_PARSERS=makeStructureNS(NAMESPACE_URIS,{SimpleData:simpleDataParser});function schemaDataParser(e,t){parseNode(SCHEMA_DATA_PARSERS,e,t)}function simpleDataParser(e,t){const r=e.getAttribute("name");if(null!==r){const o=readString(e);t[t.length-1][r]=o}}const LAT_LON_ALT_BOX_PARSERS=makeStructureNS(NAMESPACE_URIS,{altitudeMode:makeObjectPropertySetter(readString),minAltitude:makeObjectPropertySetter(readDecimal),maxAltitude:makeObjectPropertySetter(readDecimal),north:makeObjectPropertySetter(readDecimal),south:makeObjectPropertySetter(readDecimal),east:makeObjectPropertySetter(readDecimal),west:makeObjectPropertySetter(readDecimal)});function latLonAltBoxParser(e,t){const r=pushParseAndPop({},LAT_LON_ALT_BOX_PARSERS,e,t);if(!r)return;const o=t[t.length-1],n=[parseFloat(r.west),parseFloat(r.south),parseFloat(r.east),parseFloat(r.north)];o.extent=n,o.altitudeMode=r.altitudeMode,o.minAltitude=parseFloat(r.minAltitude),o.maxAltitude=parseFloat(r.maxAltitude)}const LOD_PARSERS=makeStructureNS(NAMESPACE_URIS,{minLodPixels:makeObjectPropertySetter(readDecimal),maxLodPixels:makeObjectPropertySetter(readDecimal),minFadeExtent:makeObjectPropertySetter(readDecimal),maxFadeExtent:makeObjectPropertySetter(readDecimal)});function lodParser(e,t){const r=pushParseAndPop({},LOD_PARSERS,e,t);if(!r)return;const o=t[t.length-1];o.minLodPixels=parseFloat(r.minLodPixels),o.maxLodPixels=parseFloat(r.maxLodPixels),o.minFadeExtent=parseFloat(r.minFadeExtent),o.maxFadeExtent=parseFloat(r.maxFadeExtent)}const INNER_BOUNDARY_IS_PARSERS=makeStructureNS(NAMESPACE_URIS,{LinearRing:makeArrayPusher(readFlatLinearRing)});function innerBoundaryIsParser(e,t){const r=pushParseAndPop([],INNER_BOUNDARY_IS_PARSERS,e,t);if(r.length>0){t[t.length-1].push(...r)}}const OUTER_BOUNDARY_IS_PARSERS=makeStructureNS(NAMESPACE_URIS,{LinearRing:makeReplacer(readFlatLinearRing)});function outerBoundaryIsParser(e,t){const r=pushParseAndPop(void 0,OUTER_BOUNDARY_IS_PARSERS,e,t);if(r){t[t.length-1][0]=r}}function linkParser(e,t){parseNode(LINK_PARSERS,e,t)}function whenParser(e,t){const r=t[t.length-1].whens,o=getAllTextContent(e,!1),n=Date.parse(o);r.push(isNaN(n)?0:n)}function writeColorTextNode(e,t){const r=asArray(t),o=[255*(4==r.length?r[3]:1),r[2],r[1],r[0]];for(let e=0;e<4;++e){const t=Math.floor(o[e]).toString(16);o[e]=1==t.length?"0"+t:t}writeStringTextNode(e,o.join(""))}function writeCoordinatesTextNode(e,t,r){const o=r[r.length-1],n=o.layout,i=o.stride;let a;n==GeometryLayout.XY||n==GeometryLayout.XYM?a=2:n==GeometryLayout.XYZ||n==GeometryLayout.XYZM?a=3:assert(!1,34);const l=t.length;let S="";if(l>0){S+=t[0];for(let e=1;e<a;++e)S+=","+t[e];for(let e=i;e<l;e+=i){S+=" "+t[e];for(let r=1;r<a;++r)S+=","+t[e+r]}}writeStringTextNode(e,S)}const EXTENDEDDATA_NODE_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{Data:makeChildAppender(writeDataNode),value:makeChildAppender(writeDataNodeValue),displayName:makeChildAppender(writeDataNodeName)});function writeDataNode(e,t,r){e.setAttribute("name",t.name);const o={node:e},n=t.value;"object"==typeof n?(null!==n&&n.displayName&&pushSerializeAndPop(o,EXTENDEDDATA_NODE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,[n.displayName],r,["displayName"]),null!==n&&n.value&&pushSerializeAndPop(o,EXTENDEDDATA_NODE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,[n.value],r,["value"])):pushSerializeAndPop(o,EXTENDEDDATA_NODE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,[n],r,["value"])}function writeDataNodeName(e,t){writeCDATASection(e,t)}function writeDataNodeValue(e,t){writeStringTextNode(e,t)}const DOCUMENT_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{Placemark:makeChildAppender(writePlacemark)}),DOCUMENT_NODE_FACTORY=function(e,t,r){const o=t[t.length-1].node;return createElementNS(o.namespaceURI,"Placemark")};function writeDocument(e,t,r){pushSerializeAndPop({node:e},DOCUMENT_SERIALIZERS,DOCUMENT_NODE_FACTORY,t,r,void 0,this)}const DATA_NODE_FACTORY=makeSimpleNodeFactory("Data");function writeExtendedData(e,t,r){const o={node:e},n=t.names,i=t.values,a=n.length;for(let e=0;e<a;e++)pushSerializeAndPop(o,EXTENDEDDATA_NODE_SERIALIZERS,DATA_NODE_FACTORY,[{name:n[e],value:i[e]}],r)}const ICON_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["href"],makeStructureNS(GX_NAMESPACE_URIS,["x","y","w","h"])),ICON_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{href:makeChildAppender(writeStringTextNode)},makeStructureNS(GX_NAMESPACE_URIS,{x:makeChildAppender(writeDecimalTextNode),y:makeChildAppender(writeDecimalTextNode),w:makeChildAppender(writeDecimalTextNode),h:makeChildAppender(writeDecimalTextNode)})),GX_NODE_FACTORY=function(e,t,r){return createElementNS(GX_NAMESPACE_URIS[0],"gx:"+r)};function writeIcon(e,t,r){const o={node:e},n=r[r.length-1].node;let i=ICON_SEQUENCE[n.namespaceURI],a=makeSequence(t,i);pushSerializeAndPop(o,ICON_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,a,r,i),i=ICON_SEQUENCE[GX_NAMESPACE_URIS[0]],a=makeSequence(t,i),pushSerializeAndPop(o,ICON_SERIALIZERS,GX_NODE_FACTORY,a,r,i)}const ICON_STYLE_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["scale","heading","Icon","color","hotSpot"]),ICON_STYLE_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{Icon:makeChildAppender(writeIcon),color:makeChildAppender(writeColorTextNode),heading:makeChildAppender(writeDecimalTextNode),hotSpot:makeChildAppender(writeVec2),scale:makeChildAppender(writeScaleTextNode)});function writeIconStyle(e,t,r){const o={node:e},n={},i=t.getSrc(),a=t.getSize(),l=t.getImageSize(),S={href:i};if(a){S.w=a[0],S.h=a[1];const e=t.getAnchor(),r=t.getOrigin();if(r&&l&&0!==r[0]&&r[1]!==a[1]&&(S.x=r[0],S.y=l[1]-(r[1]+a[1])),e&&(e[0]!==a[0]/2||e[1]!==a[1]/2)){const t={x:e[0],xunits:IconAnchorUnits.PIXELS,y:a[1]-e[1],yunits:IconAnchorUnits.PIXELS};n.hotSpot=t}}n.Icon=S;let s=t.getScaleArray()[0],E=a;if(null===E&&(E=DEFAULT_IMAGE_STYLE_SIZE),2==E.length){s/=scaleForSize(E)}1!==s&&(n.scale=s);const c=t.getRotation();0!==c&&(n.heading=c);const A=t.getColor();A&&(n.color=A);const m=r[r.length-1].node,d=ICON_STYLE_SEQUENCE[m.namespaceURI],_=makeSequence(n,d);pushSerializeAndPop(o,ICON_STYLE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,_,r,d)}const LABEL_STYLE_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["color","scale"]),LABEL_STYLE_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{color:makeChildAppender(writeColorTextNode),scale:makeChildAppender(writeScaleTextNode)});function writeLabelStyle(e,t,r){const o={node:e},n={},i=t.getFill();i&&(n.color=i.getColor());const a=t.getScale();a&&1!==a&&(n.scale=a);const l=r[r.length-1].node,S=LABEL_STYLE_SEQUENCE[l.namespaceURI],s=makeSequence(n,S);pushSerializeAndPop(o,LABEL_STYLE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,s,r,S)}const LINE_STYLE_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["color","width"]),LINE_STYLE_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{color:makeChildAppender(writeColorTextNode),width:makeChildAppender(writeDecimalTextNode)});function writeLineStyle(e,t,r){const o={node:e},n={color:t.getColor(),width:Number(t.getWidth())||1},i=r[r.length-1].node,a=LINE_STYLE_SEQUENCE[i.namespaceURI],l=makeSequence(n,a);pushSerializeAndPop(o,LINE_STYLE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,l,r,a)}const GEOMETRY_TYPE_TO_NODENAME={Point:"Point",LineString:"LineString",LinearRing:"LinearRing",Polygon:"Polygon",MultiPoint:"MultiGeometry",MultiLineString:"MultiGeometry",MultiPolygon:"MultiGeometry",GeometryCollection:"MultiGeometry"},GEOMETRY_NODE_FACTORY=function(e,t,r){if(e){const r=t[t.length-1].node;return createElementNS(r.namespaceURI,GEOMETRY_TYPE_TO_NODENAME[e.getType()])}},POINT_NODE_FACTORY=makeSimpleNodeFactory("Point"),LINE_STRING_NODE_FACTORY=makeSimpleNodeFactory("LineString"),LINEAR_RING_NODE_FACTORY=makeSimpleNodeFactory("LinearRing"),POLYGON_NODE_FACTORY=makeSimpleNodeFactory("Polygon"),MULTI_GEOMETRY_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{LineString:makeChildAppender(writePrimitiveGeometry),Point:makeChildAppender(writePrimitiveGeometry),Polygon:makeChildAppender(writePolygon),GeometryCollection:makeChildAppender(writeMultiGeometry)});function writeMultiGeometry(e,t,r){const o={node:e},n=t.getType();let i,a=[];n===GeometryType.GEOMETRY_COLLECTION?(t.getGeometriesArrayRecursive().forEach((function(e){const t=e.getType();t===GeometryType.MULTI_POINT?a=a.concat(e.getPoints()):t===GeometryType.MULTI_LINE_STRING?a=a.concat(e.getLineStrings()):t===GeometryType.MULTI_POLYGON?a=a.concat(e.getPolygons()):t===GeometryType.POINT||t===GeometryType.LINE_STRING||t===GeometryType.POLYGON?a.push(e):assert(!1,39)})),i=GEOMETRY_NODE_FACTORY):n===GeometryType.MULTI_POINT?(a=t.getPoints(),i=POINT_NODE_FACTORY):n===GeometryType.MULTI_LINE_STRING?(a=t.getLineStrings(),i=LINE_STRING_NODE_FACTORY):n===GeometryType.MULTI_POLYGON?(a=t.getPolygons(),i=POLYGON_NODE_FACTORY):assert(!1,39),pushSerializeAndPop(o,MULTI_GEOMETRY_SERIALIZERS,i,a,r)}const BOUNDARY_IS_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{LinearRing:makeChildAppender(writePrimitiveGeometry)});function writeBoundaryIs(e,t,r){pushSerializeAndPop({node:e},BOUNDARY_IS_SERIALIZERS,LINEAR_RING_NODE_FACTORY,[t],r)}const PLACEMARK_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{ExtendedData:makeChildAppender(writeExtendedData),MultiGeometry:makeChildAppender(writeMultiGeometry),LineString:makeChildAppender(writePrimitiveGeometry),LinearRing:makeChildAppender(writePrimitiveGeometry),Point:makeChildAppender(writePrimitiveGeometry),Polygon:makeChildAppender(writePolygon),Style:makeChildAppender(writeStyle),address:makeChildAppender(writeStringTextNode),description:makeChildAppender(writeStringTextNode),name:makeChildAppender(writeStringTextNode),open:makeChildAppender(writeBooleanTextNode),phoneNumber:makeChildAppender(writeStringTextNode),styleUrl:makeChildAppender(writeStringTextNode),visibility:makeChildAppender(writeBooleanTextNode)}),PLACEMARK_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["name","open","visibility","address","phoneNumber","description","styleUrl","Style"]),EXTENDEDDATA_NODE_FACTORY=makeSimpleNodeFactory("ExtendedData");function writePlacemark(e,t,r){const o={node:e};t.getId()&&e.setAttribute("id",t.getId());const n=t.getProperties(),i={address:1,description:1,name:1,open:1,phoneNumber:1,styleUrl:1,visibility:1};i[t.getGeometryName()]=1;const a=Object.keys(n||{}).sort().filter((function(e){return!i[e]})),l=t.getStyleFunction();if(l){const e=l(t,0);if(e){const r=Array.isArray(e)?e:[e];let o=r;if(t.getGeometry()&&(o=r.filter((function(e){const r=e.getGeometryFunction()(t);if(r){const e=r.getType();return e===GeometryType.GEOMETRY_COLLECTION?r.getGeometriesArrayRecursive().filter((function(e){const t=e.getType();return t===GeometryType.POINT||t===GeometryType.MULTI_POINT})).length:e===GeometryType.POINT||e===GeometryType.MULTI_POINT}}))),this.writeStyles_){let e=r,i=r;t.getGeometry()&&(e=r.filter((function(e){const r=e.getGeometryFunction()(t);if(r){const e=r.getType();return e===GeometryType.GEOMETRY_COLLECTION?r.getGeometriesArrayRecursive().filter((function(e){const t=e.getType();return t===GeometryType.LINE_STRING||t===GeometryType.MULTI_LINE_STRING})).length:e===GeometryType.LINE_STRING||e===GeometryType.MULTI_LINE_STRING}})),i=r.filter((function(e){const r=e.getGeometryFunction()(t);if(r){const e=r.getType();return e===GeometryType.GEOMETRY_COLLECTION?r.getGeometriesArrayRecursive().filter((function(e){const t=e.getType();return t===GeometryType.POLYGON||t===GeometryType.MULTI_POLYGON})).length:e===GeometryType.POLYGON||e===GeometryType.MULTI_POLYGON}}))),n.Style={pointStyles:o,lineStyles:e,polyStyles:i}}if(o.length&&void 0===n.name){const e=o[0].getText();e&&(n.name=e.getText())}}}const S=r[r.length-1].node,s=PLACEMARK_SEQUENCE[S.namespaceURI],E=makeSequence(n,s);if(pushSerializeAndPop(o,PLACEMARK_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,E,r,s),a.length>0){const e=makeSequence(n,a);pushSerializeAndPop(o,PLACEMARK_SERIALIZERS,EXTENDEDDATA_NODE_FACTORY,[{names:a,values:e}],r)}const c=r[0];let A=t.getGeometry();A&&(A=transformGeometryWithOptions(A,!0,c)),pushSerializeAndPop(o,PLACEMARK_SERIALIZERS,GEOMETRY_NODE_FACTORY,[A],r)}const PRIMITIVE_GEOMETRY_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["extrude","tessellate","altitudeMode","coordinates"]),PRIMITIVE_GEOMETRY_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{extrude:makeChildAppender(writeBooleanTextNode),tessellate:makeChildAppender(writeBooleanTextNode),altitudeMode:makeChildAppender(writeStringTextNode),coordinates:makeChildAppender(writeCoordinatesTextNode)});function writePrimitiveGeometry(e,t,r){const o=t.getFlatCoordinates(),n={node:e};n.layout=t.getLayout(),n.stride=t.getStride();const i=t.getProperties();i.coordinates=o;const a=r[r.length-1].node,l=PRIMITIVE_GEOMETRY_SEQUENCE[a.namespaceURI],S=makeSequence(i,l);pushSerializeAndPop(n,PRIMITIVE_GEOMETRY_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,S,r,l)}const POLY_STYLE_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["color","fill","outline"]),POLYGON_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{outerBoundaryIs:makeChildAppender(writeBoundaryIs),innerBoundaryIs:makeChildAppender(writeBoundaryIs)}),INNER_BOUNDARY_NODE_FACTORY=makeSimpleNodeFactory("innerBoundaryIs"),OUTER_BOUNDARY_NODE_FACTORY=makeSimpleNodeFactory("outerBoundaryIs");function writePolygon(e,t,r){const o=t.getLinearRings(),n=o.shift(),i={node:e};pushSerializeAndPop(i,POLYGON_SERIALIZERS,INNER_BOUNDARY_NODE_FACTORY,o,r),pushSerializeAndPop(i,POLYGON_SERIALIZERS,OUTER_BOUNDARY_NODE_FACTORY,[n],r)}const POLY_STYLE_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{color:makeChildAppender(writeColorTextNode),fill:makeChildAppender(writeBooleanTextNode),outline:makeChildAppender(writeBooleanTextNode)});function writePolyStyle(e,t,r){const o={node:e},n=t.getFill(),i=t.getStroke(),a={color:n?n.getColor():void 0,fill:!!n&&void 0,outline:!!i&&void 0},l=r[r.length-1].node,S=POLY_STYLE_SEQUENCE[l.namespaceURI],s=makeSequence(a,S);pushSerializeAndPop(o,POLY_STYLE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,s,r,S)}function writeScaleTextNode(e,t){writeDecimalTextNode(e,Math.round(1e6*t)/1e6)}const STYLE_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["IconStyle","LabelStyle","LineStyle","PolyStyle"]),STYLE_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{IconStyle:makeChildAppender(writeIconStyle),LabelStyle:makeChildAppender(writeLabelStyle),LineStyle:makeChildAppender(writeLineStyle),PolyStyle:makeChildAppender(writePolyStyle)});function writeStyle(e,t,r){const o={node:e},n={};if(t.pointStyles.length){const e=t.pointStyles[0].getText();e&&(n.LabelStyle=e);const r=t.pointStyles[0].getImage();r&&"function"==typeof r.getSrc&&(n.IconStyle=r)}if(t.lineStyles.length){const e=t.lineStyles[0].getStroke();e&&(n.LineStyle=e)}if(t.polyStyles.length){const e=t.polyStyles[0].getStroke();e&&!n.LineStyle&&(n.LineStyle=e),n.PolyStyle=t.polyStyles[0]}const i=r[r.length-1].node,a=STYLE_SEQUENCE[i.namespaceURI],l=makeSequence(n,a);pushSerializeAndPop(o,STYLE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,l,r,a)}function writeVec2(e,t){e.setAttribute("x",String(t.x)),e.setAttribute("y",String(t.y)),e.setAttribute("xunits",t.xunits),e.setAttribute("yunits",t.yunits)}export default KML;
//# sourceMappingURL=/sm/c559c02b22518b5d567a0c35b7a9ff1953e3ee8a8f2ac426a6b0c03841f2f5d4.map