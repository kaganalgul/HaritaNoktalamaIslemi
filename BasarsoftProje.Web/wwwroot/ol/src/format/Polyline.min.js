/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/src/format/Polyline.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import Feature from"../Feature.js";import GeometryLayout from"../geom/GeometryLayout.js";import LineString from"../geom/LineString.js";import TextFeature from"./TextFeature.js";import{assert}from"../asserts.js";import{flipXY}from"../geom/flat/flip.js";import{get as getProjection}from"../proj.js";import{getStrideForLayout}from"../geom/SimpleGeometry.js";import{inflateCoordinates}from"../geom/flat/inflate.js";import{transformGeometryWithOptions}from"./Feature.js";class Polyline extends TextFeature{constructor(e){super();const t=e||{};this.dataProjection=getProjection("EPSG:4326"),this.factor_=t.factor?t.factor:1e5,this.geometryLayout_=t.geometryLayout?t.geometryLayout:GeometryLayout.XY}readFeatureFromText(e,t){const r=this.readGeometryFromText(e,t);return new Feature(r)}readFeaturesFromText(e,t){return[this.readFeatureFromText(e,t)]}readGeometryFromText(e,t){const r=getStrideForLayout(this.geometryLayout_),o=decodeDeltas(e,r,this.factor_);flipXY(o,0,o.length,r,o);const n=inflateCoordinates(o,0,o.length,r),s=new LineString(n,this.geometryLayout_);return transformGeometryWithOptions(s,!1,this.adaptOptions(t))}writeFeatureText(e,t){const r=e.getGeometry();return r?this.writeGeometryText(r,t):(assert(!1,40),"")}writeFeaturesText(e,t){return this.writeFeatureText(e[0],t)}writeGeometryText(e,t){const r=(e=transformGeometryWithOptions(e,!0,this.adaptOptions(t))).getFlatCoordinates(),o=e.getStride();return flipXY(r,0,r.length,o,r),encodeDeltas(r,o,this.factor_)}}export function encodeDeltas(e,t,r){const o=r||1e5;let n;const s=new Array(t);for(n=0;n<t;++n)s[n]=0;for(let r=0,o=e.length;r<o;)for(n=0;n<t;++n,++r){const t=e[r],o=t-s[n];s[n]=t,e[r]=o}return encodeFloats(e,o)}export function decodeDeltas(e,t,r){const o=r||1e5;let n;const s=new Array(t);for(n=0;n<t;++n)s[n]=0;const i=decodeFloats(e,o);for(let e=0,r=i.length;e<r;)for(n=0;n<t;++n,++e)s[n]+=i[e],i[e]=s[n];return i}export function encodeFloats(e,t){const r=t||1e5;for(let t=0,o=e.length;t<o;++t)e[t]=Math.round(e[t]*r);return encodeSignedIntegers(e)}export function decodeFloats(e,t){const r=t||1e5,o=decodeSignedIntegers(e);for(let e=0,t=o.length;e<t;++e)o[e]/=r;return o}export function encodeSignedIntegers(e){for(let t=0,r=e.length;t<r;++t){const r=e[t];e[t]=r<0?~(r<<1):r<<1}return encodeUnsignedIntegers(e)}export function decodeSignedIntegers(e){const t=decodeUnsignedIntegers(e);for(let e=0,r=t.length;e<r;++e){const r=t[e];t[e]=1&r?~(r>>1):r>>1}return t}export function encodeUnsignedIntegers(e){let t="";for(let r=0,o=e.length;r<o;++r)t+=encodeUnsignedInteger(e[r]);return t}export function decodeUnsignedIntegers(e){const t=[];let r=0,o=0;for(let n=0,s=e.length;n<s;++n){const s=e.charCodeAt(n)-63;r|=(31&s)<<o,s<32?(t.push(r),r=0,o=0):o+=5}return t}export function encodeUnsignedInteger(e){let t,r="";for(;e>=32;)t=63+(32|31&e),r+=String.fromCharCode(t),e>>=5;return t=e+63,r+=String.fromCharCode(t),r}export default Polyline;
//# sourceMappingURL=/sm/b305696498d67fc1e753af7dd54ec1e90dc0703d864e8beecc9a63ff69f11321.map