/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/src/array.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
export function binarySearch(e,n,r){let t,o;const u=r||numberSafeCompareFunction;let f=0,i=e.length,c=!1;for(;f<i;)t=f+(i-f>>1),o=+u(e[t],n),o<0?f=t+1:(i=t,c=!o);return c?f:~f}export function numberSafeCompareFunction(e,n){return e>n?1:e<n?-1:0}export function includes(e,n){return e.indexOf(n)>=0}export function linearFindNearest(e,n,r){const t=e.length;if(e[0]<=n)return 0;if(n<=e[t-1])return t-1;{let o;if(r>0){for(o=1;o<t;++o)if(e[o]<n)return o-1}else if(r<0){for(o=1;o<t;++o)if(e[o]<=n)return o}else for(o=1;o<t;++o){if(e[o]==n)return o;if(e[o]<n)return"function"==typeof r?r(n,e[o-1],e[o])>0?o-1:o:e[o-1]-n<n-e[o]?o-1:o}return t-1}}export function reverseSubArray(e,n,r){for(;n<r;){const t=e[n];e[n]=e[r],e[r]=t,++n,--r}}export function extend(e,n){const r=Array.isArray(n)?n:[n],t=r.length;for(let n=0;n<t;n++)e[e.length]=r[n]}export function remove(e,n){const r=e.indexOf(n),t=r>-1;return t&&e.splice(r,1),t}export function find(e,n){const r=e.length>>>0;let t;for(let o=0;o<r;o++)if(t=e[o],n(t,o,e))return t;return null}export function equals(e,n){const r=e.length;if(r!==n.length)return!1;for(let t=0;t<r;t++)if(e[t]!==n[t])return!1;return!0}export function stableSort(e,n){const r=e.length,t=Array(e.length);let o;for(o=0;o<r;o++)t[o]={index:o,value:e[o]};for(t.sort((function(e,r){return n(e.value,r.value)||e.index-r.index})),o=0;o<e.length;o++)e[o]=t[o].value}export function findIndex(e,n){let r;return!e.every((function(t,o){return r=o,!n(t,o,e)}))?r:-1}export function isSorted(e,n,r){const t=n||numberSafeCompareFunction;return e.every((function(n,o){if(0===o)return!0;const u=t(e[o-1],n);return!(u>0||r&&0===u)}))}
//# sourceMappingURL=/sm/198d134142195f0b30896ee25f0367945ed33f31ed33bf9a1d3ad92b53b4d38c.map