/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/src/source/UTFGrid.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import EventType from"../events/EventType.js";import SourceState from"./State.js";import Tile from"../Tile.js";import TileSource from"./Tile.js";import TileState from"../TileState.js";import{applyTransform,intersects}from"../extent.js";import{assert}from"../asserts.js";import{createFromTemplates,nullTileUrlFunction}from"../tileurlfunction.js";import{createXYZ,extentFromProjection}from"../tilegrid.js";import{getKeyZXY}from"../tilecoord.js";import{get as getProjection,getTransformFromProjections}from"../proj.js";import{listenOnce}from"../events.js";import{jsonp as requestJSONP}from"../net.js";export class CustomTile extends Tile{constructor(t,e,i,s,r,o){super(t,e),this.src_=i,this.extent_=s,this.preemptive_=r,this.grid_=null,this.keys_=null,this.data_=null,this.jsonp_=o}getImage(){return null}getData(t){if(!this.grid_||!this.keys_)return null;const e=(t[0]-this.extent_[0])/(this.extent_[2]-this.extent_[0]),i=(t[1]-this.extent_[1])/(this.extent_[3]-this.extent_[1]),s=this.grid_[Math.floor((1-i)*this.grid_.length)];if("string"!=typeof s)return null;let r=s.charCodeAt(Math.floor(e*s.length));r>=93&&r--,r>=35&&r--,r-=32;let o=null;if(r in this.keys_){const t=this.keys_[r];o=this.data_&&t in this.data_?this.data_[t]:t}return o}forDataAtCoordinate(t,e,i){this.state==TileState.EMPTY&&!0===i?(this.state=TileState.IDLE,listenOnce(this,EventType.CHANGE,(function(i){e(this.getData(t))}),this),this.loadInternal_()):!0===i?setTimeout(function(){e(this.getData(t))}.bind(this),0):e(this.getData(t))}getKey(){return this.src_}handleError_(){this.state=TileState.ERROR,this.changed()}handleLoad_(t){this.grid_=t.grid,this.keys_=t.keys,this.data_=t.data,this.state=TileState.LOADED,this.changed()}loadInternal_(){if(this.state==TileState.IDLE)if(this.state=TileState.LOADING,this.jsonp_)requestJSONP(this.src_,this.handleLoad_.bind(this),this.handleError_.bind(this));else{const t=new XMLHttpRequest;t.addEventListener("load",this.onXHRLoad_.bind(this)),t.addEventListener("error",this.onXHRError_.bind(this)),t.open("GET",this.src_),t.send()}}onXHRLoad_(t){const e=t.target;if(!e.status||e.status>=200&&e.status<300){let t;try{t=JSON.parse(e.responseText)}catch(t){return void this.handleError_()}this.handleLoad_(t)}else this.handleError_()}onXHRError_(t){this.handleError_()}load(){this.preemptive_?this.loadInternal_():this.setState(TileState.EMPTY)}}class UTFGrid extends TileSource{constructor(t){if(super({projection:getProjection("EPSG:3857"),state:SourceState.LOADING,zDirection:t.zDirection}),this.preemptive_=void 0===t.preemptive||t.preemptive,this.tileUrlFunction_=nullTileUrlFunction,this.template_=void 0,this.jsonp_=t.jsonp||!1,t.url)if(this.jsonp_)requestJSONP(t.url,this.handleTileJSONResponse.bind(this),this.handleTileJSONError.bind(this));else{const e=new XMLHttpRequest;e.addEventListener("load",this.onXHRLoad_.bind(this)),e.addEventListener("error",this.onXHRError_.bind(this)),e.open("GET",t.url),e.send()}else t.tileJSON?this.handleTileJSONResponse(t.tileJSON):assert(!1,51)}onXHRLoad_(t){const e=t.target;if(!e.status||e.status>=200&&e.status<300){let t;try{t=JSON.parse(e.responseText)}catch(t){return void this.handleTileJSONError()}this.handleTileJSONResponse(t)}else this.handleTileJSONError()}onXHRError_(t){this.handleTileJSONError()}getTemplate(){return this.template_}forDataAtCoordinateAndResolution(t,e,i,s){if(this.tileGrid){const r=this.tileGrid.getZForResolution(e,this.zDirection),o=this.tileGrid.getTileCoordForCoordAndZ(t,r);this.getTile(o[0],o[1],o[2],1,this.getProjection()).forDataAtCoordinate(t,i,s)}else!0===s?setTimeout((function(){i(null)}),0):i(null)}handleTileJSONError(){this.setState(SourceState.ERROR)}handleTileJSONResponse(t){const e=getProjection("EPSG:4326"),i=this.getProjection();let s;if(void 0!==t.bounds){const r=getTransformFromProjections(e,i);s=applyTransform(t.bounds,r)}const r=extentFromProjection(i),o=t.minzoom||0,n=t.maxzoom||22,a=createXYZ({extent:r,maxZoom:n,minZoom:o});this.tileGrid=a,this.template_=t.template;const l=t.grids;if(l){if(this.tileUrlFunction_=createFromTemplates(l,a),void 0!==t.attribution){const e=void 0!==s?s:r;this.setAttributions((function(i){return intersects(e,i.extent)?[t.attribution]:null}))}this.setState(SourceState.READY)}else this.setState(SourceState.ERROR)}getTile(t,e,i,s,r){const o=getKeyZXY(t,e,i);if(this.tileCache.containsKey(o))return this.tileCache.get(o);{const n=[t,e,i],a=this.getTileCoordForTileUrlFunction(n,r),l=this.tileUrlFunction_(a,s,r),h=new CustomTile(n,void 0!==l?TileState.IDLE:TileState.EMPTY,void 0!==l?l:"",this.tileGrid.getTileCoordExtent(n),this.preemptive_,this.jsonp_);return this.tileCache.set(o,h),h}}useTile(t,e,i){const s=getKeyZXY(t,e,i);this.tileCache.containsKey(s)&&this.tileCache.get(s)}}export default UTFGrid;
//# sourceMappingURL=/sm/8d0a9f164a9fcc6d6331d8679aa3f6a17e558f096c46eea1fa082aef04e9d153.map