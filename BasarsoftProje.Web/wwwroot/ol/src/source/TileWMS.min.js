/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/src/source/TileWMS.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{DEFAULT_WMS_VERSION}from"./common.js";import TileImage from"./TileImage.js";import WMSServerType from"./WMSServerType.js";import{appendParams}from"../uri.js";import{assert}from"../asserts.js";import{assign}from"../obj.js";import{buffer,createEmpty}from"../extent.js";import{buffer as bufferSize,scale as scaleSize,toSize}from"../size.js";import{calculateSourceResolution}from"../reproj.js";import{compareVersions}from"../string.js";import{get as getProjection,transform,transformExtent}from"../proj.js";import{modulo}from"../math.js";import{hash as tileCoordHash}from"../tilecoord.js";class TileWMS extends TileImage{constructor(t){const e=t||{};let i=void 0===e.imageSmoothing||e.imageSmoothing;void 0!==e.interpolate&&(i=e.interpolate);const r=e.params||{},s=!("TRANSPARENT"in r)||r.TRANSPARENT;super({attributions:e.attributions,attributionsCollapsible:e.attributionsCollapsible,cacheSize:e.cacheSize,crossOrigin:e.crossOrigin,interpolate:i,opaque:!s,projection:e.projection,reprojectionErrorThreshold:e.reprojectionErrorThreshold,tileClass:e.tileClass,tileGrid:e.tileGrid,tileLoadFunction:e.tileLoadFunction,url:e.url,urls:e.urls,wrapX:void 0===e.wrapX||e.wrapX,transition:e.transition,zDirection:e.zDirection}),this.gutter_=void 0!==e.gutter?e.gutter:0,this.params_=r,this.v13_=!0,this.serverType_=e.serverType,this.hidpi_=void 0===e.hidpi||e.hidpi,this.tmpExtent_=createEmpty(),this.updateV13_(),this.setKey(this.getKeyForParams_())}getFeatureInfoUrl(t,e,i,r){const s=getProjection(i),o=this.getProjection();let a=this.getTileGrid();a||(a=this.getTileGridForProjection(s));const n=a.getZForResolution(e,this.zDirection),l=a.getTileCoordForCoordAndZ(t,n);if(a.getResolutions().length<=l[0])return;let p=a.getResolution(l[0]),h=a.getTileCoordExtent(l,this.tmpExtent_),S=toSize(a.getTileSize(l[0]),this.tmpSize);const m=this.gutter_;0!==m&&(S=bufferSize(S,m,this.tmpSize),h=buffer(h,p*m,h)),o&&o!==s&&(p=calculateSourceResolution(o,s,t,p),h=transformExtent(h,s,o),t=transform(t,s,o));const u={SERVICE:"WMS",VERSION:DEFAULT_WMS_VERSION,REQUEST:"GetFeatureInfo",FORMAT:"image/png",TRANSPARENT:!0,QUERY_LAYERS:this.params_.LAYERS};assign(u,this.params_,r);const g=Math.floor((t[0]-h[0])/p),c=Math.floor((h[3]-t[1])/p);return u[this.v13_?"I":"X"]=g,u[this.v13_?"J":"Y"]=c,this.getRequestUrl_(l,S,h,1,o||s,u)}getLegendUrl(t,e){if(void 0===this.urls[0])return;const i={SERVICE:"WMS",VERSION:DEFAULT_WMS_VERSION,REQUEST:"GetLegendGraphic",FORMAT:"image/png"};if(void 0===e||void 0===e.LAYER){const t=this.params_.LAYERS;if(!(!Array.isArray(t)||1===t.length))return;i.LAYER=t}if(void 0!==t){const e=this.getProjection()?this.getProjection().getMetersPerUnit():1,r=28e-5;i.SCALE=t*e/r}return assign(i,e),appendParams(this.urls[0],i)}getGutter(){return this.gutter_}getParams(){return this.params_}getRequestUrl_(t,e,i,r,s,o){const a=this.urls;if(!a)return;if(o.WIDTH=e[0],o.HEIGHT=e[1],o[this.v13_?"CRS":"SRS"]=s.getCode(),"STYLES"in this.params_||(o.STYLES=""),1!=r)switch(this.serverType_){case WMSServerType.GEOSERVER:const t=90*r+.5|0;"FORMAT_OPTIONS"in o?o.FORMAT_OPTIONS+=";dpi:"+t:o.FORMAT_OPTIONS="dpi:"+t;break;case WMSServerType.MAPSERVER:o.MAP_RESOLUTION=90*r;break;case WMSServerType.CARMENTA_SERVER:case WMSServerType.QGIS:o.DPI=90*r;break;default:assert(!1,52)}const n=s.getAxisOrientation(),l=i;if(this.v13_&&"ne"==n.substr(0,2)){let t;t=i[0],l[0]=i[1],l[1]=t,t=i[2],l[2]=i[3],l[3]=t}let p;if(o.BBOX=l.join(","),1==a.length)p=a[0];else{p=a[modulo(tileCoordHash(t),a.length)]}return appendParams(p,o)}getTilePixelRatio(t){return this.hidpi_&&void 0!==this.serverType_?t:1}getKeyForParams_(){let t=0;const e=[];for(const i in this.params_)e[t++]=i+"-"+this.params_[i];return e.join("/")}updateParams(t){assign(this.params_,t),this.updateV13_(),this.setKey(this.getKeyForParams_())}updateV13_(){const t=this.params_.VERSION||DEFAULT_WMS_VERSION;this.v13_=compareVersions(t,"1.3")>=0}tileUrlFunction(t,e,i){let r=this.getTileGrid();if(r||(r=this.getTileGridForProjection(i)),r.getResolutions().length<=t[0])return;1==e||this.hidpi_&&void 0!==this.serverType_||(e=1);const s=r.getResolution(t[0]);let o=r.getTileCoordExtent(t,this.tmpExtent_),a=toSize(r.getTileSize(t[0]),this.tmpSize);const n=this.gutter_;0!==n&&(a=bufferSize(a,n,this.tmpSize),o=buffer(o,s*n,o)),1!=e&&(a=scaleSize(a,e,this.tmpSize));const l={SERVICE:"WMS",VERSION:DEFAULT_WMS_VERSION,REQUEST:"GetMap",FORMAT:"image/png",TRANSPARENT:!0};return assign(l,this.params_),this.getRequestUrl_(t,a,o,e,i,l)}}export default TileWMS;
//# sourceMappingURL=/sm/1e6b45574490aed89e5e9c1797435c41e80d153de2ce5a22b131a223d5613638.map