/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/src/source/OGCVectorTile.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import SourceState from"./State.js";import VectorTile from"./VectorTile.js";import{getTileSetInfo}from"./ogcTileUtil.js";class OGCVectorTile extends VectorTile{constructor(t){super({attributions:t.attributions,attributionsCollapsible:t.attributionsCollapsible,cacheSize:t.cacheSize,format:t.format,overlaps:t.overlaps,projection:t.projection,tileClass:t.tileClass,transition:t.transition,wrapX:t.wrapX,zDirection:t.zDirection,state:SourceState.LOADING});const e={url:t.url,projection:this.getProjection(),mediaType:t.mediaType,supportedMediaTypes:t.format.supportedMediaTypes,context:t.context||null};getTileSetInfo(e).then(this.handleTileSetInfo_.bind(this)).catch(this.handleError_.bind(this))}handleTileSetInfo_(t){this.tileGrid=t.grid,this.setTileUrlFunction(t.urlFunction,t.urlTemplate),this.setState(SourceState.READY)}handleError_(t){console.error(t),this.setState(SourceState.ERROR)}}export default OGCVectorTile;
//# sourceMappingURL=/sm/f6709604eef89b2ae02cdc53d241b272d70e2bd17dcb5f9be13016559b1d51db.map