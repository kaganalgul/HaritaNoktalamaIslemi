/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/src/source/OGCMapTile.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import SourceState from"./State.js";import TileImage from"./TileImage.js";import{getTileSetInfo}from"./ogcTileUtil.js";class OGCMapTile extends TileImage{constructor(t){let e=void 0===t.imageSmoothing||t.imageSmoothing;void 0!==t.interpolate&&(e=t.interpolate),super({attributions:t.attributions,cacheSize:t.cacheSize,crossOrigin:t.crossOrigin,interpolate:e,projection:t.projection,reprojectionErrorThreshold:t.reprojectionErrorThreshold,state:SourceState.LOADING,tileLoadFunction:t.tileLoadFunction,wrapX:void 0===t.wrapX||t.wrapX,transition:t.transition});const i={url:t.url,projection:this.getProjection(),mediaType:t.mediaType,context:t.context||null};getTileSetInfo(i).then(this.handleTileSetInfo_.bind(this)).catch(this.handleError_.bind(this))}handleTileSetInfo_(t){this.tileGrid=t.grid,this.setTileUrlFunction(t.urlFunction,t.urlTemplate),this.setState(SourceState.READY)}handleError_(t){console.error(t),this.setState(SourceState.ERROR)}}export default OGCMapTile;
//# sourceMappingURL=/sm/37f2b8291f99b83b049ed6ca994dfbdb8ec09e46a11bdefae9f03a4ff7a13662.map