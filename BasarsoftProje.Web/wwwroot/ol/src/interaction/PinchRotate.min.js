/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/src/interaction/PinchRotate.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import PointerInteraction,{centroid as centroidFromPointers}from"./Pointer.js";import{FALSE}from"../functions.js";import{disable}from"../rotationconstraint.js";class PinchRotate extends PointerInteraction{constructor(t){const n=t||{},i=n;i.stopDown||(i.stopDown=FALSE),super(i),this.anchor_=null,this.lastAngle_=void 0,this.rotating_=!1,this.rotationDelta_=0,this.threshold_=void 0!==n.threshold?n.threshold:.3,this.duration_=void 0!==n.duration?n.duration:250}handleDragEvent(t){let n=0;const i=this.targetPointers[0],e=this.targetPointers[1],o=Math.atan2(e.clientY-i.clientY,e.clientX-i.clientX);if(void 0!==this.lastAngle_){const t=o-this.lastAngle_;this.rotationDelta_+=t,!this.rotating_&&Math.abs(this.rotationDelta_)>this.threshold_&&(this.rotating_=!0),n=t}this.lastAngle_=o;const r=t.map,s=r.getView();if(s.getConstraints().rotation===disable)return;const a=r.getViewport().getBoundingClientRect(),h=centroidFromPointers(this.targetPointers);h[0]-=a.left,h[1]-=a.top,this.anchor_=r.getCoordinateFromPixelInternal(h),this.rotating_&&(r.render(),s.adjustRotationInternal(n,this.anchor_))}handleUpEvent(t){if(this.targetPointers.length<2){return t.map.getView().endInteraction(this.duration_),!1}return!0}handleDownEvent(t){if(this.targetPointers.length>=2){const n=t.map;return this.anchor_=null,this.lastAngle_=void 0,this.rotating_=!1,this.rotationDelta_=0,this.handlingDownUpSequence||n.getView().beginInteraction(),!0}return!1}}export default PinchRotate;
//# sourceMappingURL=/sm/36594d7333f8b50bb1d8e48cda6adb341d3ca51dcdeeba90213f4f3011b500c1.map