/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/src/render.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import CanvasImmediateRenderer from"./render/canvas/Immediate.js";import{DEVICE_PIXEL_RATIO}from"./has.js";import{apply as applyTransform,create as createTransform,multiply as multiplyTransform,scale as scaleTransform}from"./transform.js";import{getSquaredTolerance}from"./renderer/vector.js";import{getTransformFromProjections,getUserProjection}from"./proj.js";export function toContext(e,r){const t=e.canvas,o=r||{},n=o.pixelRatio||DEVICE_PIXEL_RATIO,a=o.size;a&&(t.width=a[0]*n,t.height=a[1]*n,t.style.width=a[0]+"px",t.style.height=a[1]+"px");const s=[0,0,t.width,t.height],i=scaleTransform(createTransform(),n,n);return new CanvasImmediateRenderer(e,n,s,i,0)}export function getVectorContext(e){if(!(e.context instanceof CanvasRenderingContext2D))throw new Error("Only works for render events from Canvas 2D layers");const r=e.inversePixelTransform[0],t=e.frameState,o=multiplyTransform(e.inversePixelTransform.slice(),t.coordinateToPixelTransform),n=getSquaredTolerance(t.viewState.resolution,r);let a;const s=getUserProjection();return s&&(a=getTransformFromProjections(s,t.viewState.projection)),new CanvasImmediateRenderer(e.context,r,t.extent,o,t.viewState.rotation,n,a)}export function getRenderPixel(e,r){return applyTransform(e.inversePixelTransform,r.slice(0))}
//# sourceMappingURL=/sm/534f555d17ffc13daf3b438c66bb7f03f2fa3ec9a53ef00cd1a5d08bce3d47f8.map