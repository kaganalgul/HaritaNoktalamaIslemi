/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/src/coordinate.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{getWidth}from"./extent.js";import{modulo}from"./math.js";import{padNumber}from"./string.js";export function add(t,e){return t[0]+=+e[0],t[1]+=+e[1],t}export function closestOnCircle(t,e){const r=e.getRadius(),n=e.getCenter(),o=n[0],c=n[1];let i=t[0]-o;const u=t[1]-c;0===i&&0===u&&(i=1);const a=Math.sqrt(i*i+u*u);return[o+r*i/a,c+r*u/a]}export function closestOnSegment(t,e){const r=t[0],n=t[1],o=e[0],c=e[1],i=o[0],u=o[1],a=c[0],s=c[1],f=a-i,p=s-u,g=0===f&&0===p?0:(f*(r-i)+p*(n-u))/(f*f+p*p||0);let d,l;return g<=0?(d=i,l=u):g>=1?(d=a,l=s):(d=i+g*f,l=u+g*p),[d,l]}export function createStringXY(t){return function(e){return toStringXY(e,t)}}export function degreesToStringHDMS(t,e,r){const n=modulo(e+180,360)-180,o=Math.abs(3600*n),c=r||0,i=Math.pow(10,c);let u=Math.floor(o/3600),a=Math.floor((o-3600*u)/60),s=o-3600*u-60*a;return s=Math.ceil(s*i)/i,s>=60&&(s=0,a+=1),a>=60&&(a=0,u+=1),u+"° "+padNumber(a,2)+"′ "+padNumber(s,2,c)+"″"+(0==n?"":" "+t.charAt(n<0?1:0))}export function format(t,e,r){return t?e.replace("{x}",t[0].toFixed(r)).replace("{y}",t[1].toFixed(r)):""}export function equals(t,e){let r=!0;for(let n=t.length-1;n>=0;--n)if(t[n]!=e[n]){r=!1;break}return r}export function rotate(t,e){const r=Math.cos(e),n=Math.sin(e),o=t[0]*r-t[1]*n,c=t[1]*r+t[0]*n;return t[0]=o,t[1]=c,t}export function scale(t,e){return t[0]*=e,t[1]*=e,t}export function squaredDistance(t,e){const r=t[0]-e[0],n=t[1]-e[1];return r*r+n*n}export function distance(t,e){return Math.sqrt(squaredDistance(t,e))}export function squaredDistanceToSegment(t,e){return squaredDistance(t,closestOnSegment(t,e))}export function toStringHDMS(t,e){return t?degreesToStringHDMS("NS",t[1],e)+" "+degreesToStringHDMS("EW",t[0],e):""}export function toStringXY(t,e){return format(t,"{x}, {y}",e)}export function wrapX(t,e){if(e.canWrapX()){const r=getWidth(e.getExtent()),n=getWorldsAway(t,e,r);n&&(t[0]-=n*r)}return t}export function getWorldsAway(t,e,r){const n=e.getExtent();let o=0;if(e.canWrapX()&&(t[0]<n[0]||t[0]>n[2])){const e=r||getWidth(n);o=Math.floor((t[0]-n[0])/e)}return o}
//# sourceMappingURL=/sm/34c699d3b6bed204323ae537f43c7083b2c5fb704e8abcf5cedd4dc1a95cf3e6.map