/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/proj/epsg3857.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var __extends=this&&this.__extends||function(){var t=function(o,r){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,o){t.__proto__=o}||function(t,o){for(var r in o)Object.prototype.hasOwnProperty.call(o,r)&&(t[r]=o[r])},t(o,r)};return function(o,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function n(){this.constructor=o}t(o,r),o.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}();import Projection from"./Projection.js";import Units from"./Units.js";import{cosh}from"../math.js";export var RADIUS=6378137;export var HALF_SIZE=Math.PI*RADIUS;export var EXTENT=[-HALF_SIZE,-HALF_SIZE,HALF_SIZE,HALF_SIZE];export var WORLD_EXTENT=[-180,-85,180,85];export var MAX_SAFE_Y=RADIUS*Math.log(Math.tan(Math.PI/2));var EPSG3857Projection=function(t){function o(o){return t.call(this,{code:o,units:Units.METERS,extent:EXTENT,global:!0,worldExtent:WORLD_EXTENT,getPointResolution:function(t,o){return t/cosh(o[1]/RADIUS)}})||this}return __extends(o,t),o}(Projection);export var PROJECTIONS=[new EPSG3857Projection("EPSG:3857"),new EPSG3857Projection("EPSG:102100"),new EPSG3857Projection("EPSG:102113"),new EPSG3857Projection("EPSG:900913"),new EPSG3857Projection("http://www.opengis.net/def/crs/EPSG/0/3857"),new EPSG3857Projection("http://www.opengis.net/gml/srs/epsg.xml#3857")];export function fromEPSG4326(t,o,r){var n=t.length,e=r>1?r:2,i=o;void 0===i&&(i=e>2?t.slice():new Array(n));for(var a=0;a<n;a+=e){i[a]=HALF_SIZE*t[a]/180;var c=RADIUS*Math.log(Math.tan(Math.PI*(+t[a+1]+90)/360));c>MAX_SAFE_Y?c=MAX_SAFE_Y:c<-MAX_SAFE_Y&&(c=-MAX_SAFE_Y),i[a+1]=c}return i}export function toEPSG4326(t,o,r){var n=t.length,e=r>1?r:2,i=o;void 0===i&&(i=e>2?t.slice():new Array(n));for(var a=0;a<n;a+=e)i[a]=180*t[a]/HALF_SIZE,i[a+1]=360*Math.atan(Math.exp(t[a+1]/RADIUS))/Math.PI-90;return i}
//# sourceMappingURL=/sm/8af244168975f31fddede0e0eb84d22183b83a8fbc7f32af32a2ca503306c0c9.map