/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/layer/MapboxVector.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var __extends=this&&this.__extends||function(){var e=function(r,t){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var t in r)Object.prototype.hasOwnProperty.call(r,t)&&(e[t]=r[t])},e(r,t)};return function(r,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function o(){this.constructor=r}e(r,t),r.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}();import BaseEvent from"../events/Event.js";import EventType from"../events/EventType.js";import MVT from"../format/MVT.js";import SourceState from"../source/State.js";import VectorTileLayer from"../layer/VectorTile.js";import VectorTileSource from"../source/VectorTile.js";import{applyBackground,applyStyle,setupVectorSource}from"ol-mapbox-style";var mapboxBaseUrl="https://api.mapbox.com";export function getMapboxPath(e){var r="mapbox://";return 0!==e.indexOf(r)?"":e.slice(r.length)}export function normalizeSpriteUrl(e,r,t){var o=getMapboxPath(e);if(!o)return decodeURI(new URL(e,t).href);var n="sprites/";if(0!==o.indexOf(n))throw new Error("unexpected sprites url: "+e);var s=o.slice(n.length);return mapboxBaseUrl+"/styles/v1/"+s+"/sprite?access_token="+r}export function normalizeGlyphsUrl(e,r,t){var o=getMapboxPath(e);if(!o)return decodeURI(new URL(e,t).href);var n="fonts/";if(0!==o.indexOf(n))throw new Error("unexpected fonts url: "+e);var s=o.slice(n.length);return mapboxBaseUrl+"/fonts/v1/"+s+"/0-255.pbf?access_token="+r}export function normalizeStyleUrl(e,r){var t=getMapboxPath(e);if(!t)return decodeURI(new URL(e,location.href).href);var o="styles/";if(0!==t.indexOf(o))throw new Error("unexpected style url: "+e);var n=t.slice(o.length);return mapboxBaseUrl+"/styles/v1/"+n+"?&access_token="+r}export function normalizeSourceUrl(e,r,t,o){var n=new URL(e,o),s=getMapboxPath(e);return s?"https://{a-d}.tiles.mapbox.com/v4/"+s+"/{z}/{x}/{y}.vector.pbf?access_token="+r:r?(n.searchParams.set(t,r),decodeURI(n.href)):decodeURI(n.href)}var ErrorEvent=function(e){function r(r){var t=e.call(this,EventType.ERROR)||this;return t.error=r,t}return __extends(r,e),r}(BaseEvent),SourceType={VECTOR:"vector"},MapboxVectorLayer=function(e){function r(r){var t=this,o=!("declutter"in r)||r.declutter,n=new VectorTileSource({state:SourceState.LOADING,format:new MVT});((t=e.call(this,{source:n,background:r.background,declutter:o,className:r.className,opacity:r.opacity,visible:r.visible,zIndex:r.zIndex,minResolution:r.minResolution,maxResolution:r.maxResolution,minZoom:r.minZoom,maxZoom:r.maxZoom,renderOrder:r.renderOrder,renderBuffer:r.renderBuffer,renderMode:r.renderMode,map:r.map,updateWhileAnimating:r.updateWhileAnimating,updateWhileInteracting:r.updateWhileInteracting,preload:r.preload,useInterimTilesOnError:r.useInterimTilesOnError,properties:r.properties})||this).setMaxResolutionFromTileGrid_=void 0===r.maxResolution&&void 0===r.minZoom,t.sourceId=r.source,t.layers=r.layers,r.accessToken)?t.accessToken=r.accessToken:new URL(r.styleUrl,location.href).searchParams.forEach((function(e,r){t.accessToken=e,t.accessTokenParam_=r}));return t.fetchStyle(r.styleUrl),t}return __extends(r,e),r.prototype.fetchStyle=function(e){var r=this,t=normalizeStyleUrl(e,this.accessToken);fetch(t).then((function(e){if(!e.ok)throw new Error("unexpected response when fetching style: "+e.status);return e.json()})).then((function(e){r.onStyleLoad(e,t.startsWith("data:")?location.href:t)})).catch((function(e){r.handleError(e)}))},r.prototype.onStyleLoad=function(e,r){var t,o,n=this;if(this.layers){for(var s={},i=0;i<e.layers.length;++i){var a=e.layers[i];a.source&&(s[a.id]=a.source)}var c=void 0;for(i=0;i<this.layers.length;++i){var l=s[this.layers[i]];if(!l)return void this.handleError(new Error("could not find source for "+this.layers[i]));if(c){if(c!==l)return void this.handleError(new Error("layers can only use a single source, found "+c+" and "+l))}else c=l}t=c,o=this.layers}else t=this.sourceId,o=t;o||(t=Object.keys(e.sources)[0],o=t),e.sprite&&(e.sprite=normalizeSpriteUrl(e.sprite,this.accessToken,r)),e.glyphs&&(e.glyphs=normalizeGlyphsUrl(e.glyphs,this.accessToken,r));var u=e.sources[t];if(u.type===SourceType.VECTOR){var p=this.getSource();u.url&&0===u.url.indexOf("mapbox://")?(p.setUrl(normalizeSourceUrl(u.url,this.accessToken,this.accessTokenParam_,r)),applyStyle(this,e,o).then((function(){n.configureSource(p,e)})).catch((function(e){n.handleError(e)}))):(u.tiles&&(u.tiles=u.tiles.map((function(e){return normalizeSourceUrl(e,n.accessToken,n.accessTokenParam_,r)}))),setupVectorSource(u,u.url?normalizeSourceUrl(u.url,this.accessToken,this.accessTokenParam_,r):void 0).then((function(r){applyStyle(n,e,o).then((function(){n.configureSource(r,e)})).catch((function(t){n.configureSource(r,e),n.handleError(t)}))})))}else this.handleError(new Error("only works for vector sources, found "+u.type))},r.prototype.configureSource=function(e,r){var t=this.getSource();if(e!==t&&(t.setAttributions(e.getAttributions()),t.setTileUrlFunction(e.getTileUrlFunction()),t.setTileLoadFunction(e.getTileLoadFunction()),t.tileGrid=e.tileGrid),void 0===this.getBackground()&&applyBackground(this,r),this.setMaxResolutionFromTileGrid_){var o=t.getTileGrid();this.setMaxResolution(o.getResolution(o.getMinZoom()))}t.setState(SourceState.READY)},r.prototype.handleError=function(e){this.dispatchEvent(new ErrorEvent(e)),this.getSource().setState(SourceState.ERROR)},r}(VectorTileLayer);export default MapboxVectorLayer;
//# sourceMappingURL=/sm/06384933745433e623c889882207aa356521e3b4d7609ceb3a1a11d93da2cf8b.map