/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/format/GML3.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var __extends=this&&this.__extends||function(){var e=function(t,r){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])},e(t,r)};return function(t,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}();import GML2 from"./GML2.js";import GMLBase,{GMLNS}from"./GMLBase.js";import GeometryLayout from"../geom/GeometryLayout.js";import LineString from"../geom/LineString.js";import MultiLineString from"../geom/MultiLineString.js";import MultiPolygon from"../geom/MultiPolygon.js";import Polygon from"../geom/Polygon.js";import{OBJECT_PROPERTY_NODE_FACTORY,XML_SCHEMA_INSTANCE_URI,createElementNS,getAllTextContent,makeArrayPusher,makeChildAppender,makeReplacer,makeSimpleNodeFactory,parseNode,pushParseAndPop,pushSerializeAndPop}from"../xml.js";import{assign}from"../obj.js";import{createOrUpdate}from"../extent.js";import{extend}from"../array.js";import{get as getProjection}from"../proj.js";import{readNonNegativeIntegerString,writeStringTextNode}from"./xsd.js";import{transformExtentWithOptions,transformGeometryWithOptions}from"./Feature.js";var schemaLocation=GMLNS+" http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/1.0.0/gmlsf.xsd",MULTIGEOMETRY_TO_MEMBER_NODENAME={MultiLineString:"lineStringMember",MultiCurve:"curveMember",MultiPolygon:"polygonMember",MultiSurface:"surfaceMember"},GML3=function(e){function t(t){var r=this,o=t||{};return(r=e.call(this,o)||this).surface_=void 0!==o.surface&&o.surface,r.curve_=void 0!==o.curve&&o.curve,r.multiCurve_=void 0===o.multiCurve||o.multiCurve,r.multiSurface_=void 0===o.multiSurface||o.multiSurface,r.schemaLocation=o.schemaLocation?o.schemaLocation:schemaLocation,r.hasZ=void 0!==o.hasZ&&o.hasZ,r}return __extends(t,e),t.prototype.readMultiCurve=function(e,t){var r=pushParseAndPop([],this.MULTICURVE_PARSERS,e,t,this);return r?new MultiLineString(r):void 0},t.prototype.readMultiSurface=function(e,t){var r=pushParseAndPop([],this.MULTISURFACE_PARSERS,e,t,this);if(r)return new MultiPolygon(r)},t.prototype.curveMemberParser=function(e,t){parseNode(this.CURVEMEMBER_PARSERS,e,t,this)},t.prototype.surfaceMemberParser=function(e,t){parseNode(this.SURFACEMEMBER_PARSERS,e,t,this)},t.prototype.readPatch=function(e,t){return pushParseAndPop([null],this.PATCHES_PARSERS,e,t,this)},t.prototype.readSegment=function(e,t){return pushParseAndPop([null],this.SEGMENTS_PARSERS,e,t,this)},t.prototype.readPolygonPatch=function(e,t){return pushParseAndPop([null],this.FLAT_LINEAR_RINGS_PARSERS,e,t,this)},t.prototype.readLineStringSegment=function(e,t){return pushParseAndPop([null],this.GEOMETRY_FLAT_COORDINATES_PARSERS,e,t,this)},t.prototype.interiorParser=function(e,t){var r=pushParseAndPop(void 0,this.RING_PARSERS,e,t,this);r&&t[t.length-1].push(r)},t.prototype.exteriorParser=function(e,t){var r=pushParseAndPop(void 0,this.RING_PARSERS,e,t,this);r&&(t[t.length-1][0]=r)},t.prototype.readSurface=function(e,t){var r=pushParseAndPop([null],this.SURFACE_PARSERS,e,t,this);if(r&&r[0]){var o,i=r[0],n=[i.length],a=void 0;for(a=1,o=r.length;a<o;++a)extend(i,r[a]),n.push(i.length);return new Polygon(i,GeometryLayout.XYZ,n)}},t.prototype.readCurve=function(e,t){var r=pushParseAndPop([null],this.CURVE_PARSERS,e,t,this);return r?new LineString(r,GeometryLayout.XYZ):void 0},t.prototype.readEnvelope=function(e,t){var r=pushParseAndPop([null],this.ENVELOPE_PARSERS,e,t,this);return createOrUpdate(r[1][0],r[1][1],r[2][0],r[2][1])},t.prototype.readFlatPos=function(e,t){for(var r,o=getAllTextContent(e,!1),i=/^\s*([+\-]?\d*\.?\d+(?:[eE][+\-]?\d+)?)\s*/,n=[];r=i.exec(o);)n.push(parseFloat(r[1])),o=o.substr(r[0].length);if(""===o){var a=t[0].srsName,p="enu";if(a)p=getProjection(a).getAxisOrientation();if("neu"===p){var s,u=void 0;for(u=0,s=n.length;u<s;u+=3){var l=n[u],m=n[u+1];n[u]=m,n[u+1]=l}}var h=n.length;if(2==h&&n.push(0),0!==h)return n}},t.prototype.readFlatPosList=function(e,t){var r=getAllTextContent(e,!1).replace(/^\s*|\s*$/g,""),o=t[0],i=o.srsName,n=o.srsDimension,a="enu";i&&(a=getProjection(i).getAxisOrientation());var p,s,u,l=r.split(/\s+/),m=2;e.getAttribute("srsDimension")?m=readNonNegativeIntegerString(e.getAttribute("srsDimension")):e.getAttribute("dimension")?m=readNonNegativeIntegerString(e.getAttribute("dimension")):e.parentNode.getAttribute("srsDimension")?m=readNonNegativeIntegerString(e.parentNode.getAttribute("srsDimension")):n&&(m=readNonNegativeIntegerString(n));for(var h=[],g=0,S=l.length;g<S;g+=m)p=parseFloat(l[g]),s=parseFloat(l[g+1]),u=3===m?parseFloat(l[g+2]):0,"en"===a.substr(0,2)?h.push(p,s,u):h.push(s,p,u);return h},t.prototype.writePos_=function(e,t,r){var o=r[r.length-1],i=o.hasZ,n=i?"3":"2";e.setAttribute("srsDimension",n);var a=o.srsName,p="enu";a&&(p=getProjection(a).getAxisOrientation());var s,u=t.getCoordinates();(s="en"===p.substr(0,2)?u[0]+" "+u[1]:u[1]+" "+u[0],i)&&(s+=" "+(u[2]||0));writeStringTextNode(e,s)},t.prototype.getCoords_=function(e,t,r){var o="enu";t&&(o=getProjection(t).getAxisOrientation());var i="en"===o.substr(0,2)?e[0]+" "+e[1]:e[1]+" "+e[0];r&&(i+=" "+(e[2]||0));return i},t.prototype.writePosList_=function(e,t,r){var o=r[r.length-1],i=o.hasZ,n=i?"3":"2";e.setAttribute("srsDimension",n);for(var a,p=o.srsName,s=t.getCoordinates(),u=s.length,l=new Array(u),m=0;m<u;++m)a=s[m],l[m]=this.getCoords_(a,p,i);writeStringTextNode(e,l.join(" "))},t.prototype.writePoint=function(e,t,r){var o=r[r.length-1].srsName;o&&e.setAttribute("srsName",o);var i=createElementNS(e.namespaceURI,"pos");e.appendChild(i),this.writePos_(i,t,r)},t.prototype.writeEnvelope=function(e,t,r){var o=r[r.length-1].srsName;o&&e.setAttribute("srsName",o);var i=[t[0]+" "+t[1],t[2]+" "+t[3]];pushSerializeAndPop({node:e},this.ENVELOPE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,i,r,["lowerCorner","upperCorner"],this)},t.prototype.writeLinearRing=function(e,t,r){var o=r[r.length-1].srsName;o&&e.setAttribute("srsName",o);var i=createElementNS(e.namespaceURI,"posList");e.appendChild(i),this.writePosList_(i,t,r)},t.prototype.RING_NODE_FACTORY_=function(e,t,r){var o=t[t.length-1],i=o.node,n=o.exteriorWritten;return void 0===n&&(o.exteriorWritten=!0),createElementNS(i.namespaceURI,void 0!==n?"interior":"exterior")},t.prototype.writeSurfaceOrPolygon=function(e,t,r){var o=r[r.length-1],i=o.hasZ,n=o.srsName;if("PolygonPatch"!==e.nodeName&&n&&e.setAttribute("srsName",n),"Polygon"===e.nodeName||"PolygonPatch"===e.nodeName){var a=t.getLinearRings();pushSerializeAndPop({node:e,hasZ:i,srsName:n},this.RING_SERIALIZERS,this.RING_NODE_FACTORY_,a,r,void 0,this)}else if("Surface"===e.nodeName){var p=createElementNS(e.namespaceURI,"patches");e.appendChild(p),this.writeSurfacePatches_(p,t,r)}},t.prototype.writeCurveOrLineString=function(e,t,r){var o=r[r.length-1].srsName;if("LineStringSegment"!==e.nodeName&&o&&e.setAttribute("srsName",o),"LineString"===e.nodeName||"LineStringSegment"===e.nodeName){var i=createElementNS(e.namespaceURI,"posList");e.appendChild(i),this.writePosList_(i,t,r)}else if("Curve"===e.nodeName){var n=createElementNS(e.namespaceURI,"segments");e.appendChild(n),this.writeCurveSegments_(n,t,r)}},t.prototype.writeMultiSurfaceOrPolygon=function(e,t,r){var o=r[r.length-1],i=o.hasZ,n=o.srsName,a=o.surface;n&&e.setAttribute("srsName",n);var p=t.getPolygons();pushSerializeAndPop({node:e,hasZ:i,srsName:n,surface:a},this.SURFACEORPOLYGONMEMBER_SERIALIZERS,this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,p,r,void 0,this)},t.prototype.writeMultiPoint=function(e,t,r){var o=r[r.length-1],i=o.srsName,n=o.hasZ;i&&e.setAttribute("srsName",i);var a=t.getPoints();pushSerializeAndPop({node:e,hasZ:n,srsName:i},this.POINTMEMBER_SERIALIZERS,makeSimpleNodeFactory("pointMember"),a,r,void 0,this)},t.prototype.writeMultiCurveOrLineString=function(e,t,r){var o=r[r.length-1],i=o.hasZ,n=o.srsName,a=o.curve;n&&e.setAttribute("srsName",n);var p=t.getLineStrings();pushSerializeAndPop({node:e,hasZ:i,srsName:n,curve:a},this.LINESTRINGORCURVEMEMBER_SERIALIZERS,this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,p,r,void 0,this)},t.prototype.writeRing=function(e,t,r){var o=createElementNS(e.namespaceURI,"LinearRing");e.appendChild(o),this.writeLinearRing(o,t,r)},t.prototype.writeSurfaceOrPolygonMember=function(e,t,r){var o=this.GEOMETRY_NODE_FACTORY_(t,r);o&&(e.appendChild(o),this.writeSurfaceOrPolygon(o,t,r))},t.prototype.writePointMember=function(e,t,r){var o=createElementNS(e.namespaceURI,"Point");e.appendChild(o),this.writePoint(o,t,r)},t.prototype.writeLineStringOrCurveMember=function(e,t,r){var o=this.GEOMETRY_NODE_FACTORY_(t,r);o&&(e.appendChild(o),this.writeCurveOrLineString(o,t,r))},t.prototype.writeSurfacePatches_=function(e,t,r){var o=createElementNS(e.namespaceURI,"PolygonPatch");e.appendChild(o),this.writeSurfaceOrPolygon(o,t,r)},t.prototype.writeCurveSegments_=function(e,t,r){var o=createElementNS(e.namespaceURI,"LineStringSegment");e.appendChild(o),this.writeCurveOrLineString(o,t,r)},t.prototype.writeGeometryElement=function(e,t,r){var o,i=r[r.length-1],n=assign({},i);n.node=e,o=Array.isArray(t)?transformExtentWithOptions(t,i):transformGeometryWithOptions(t,!0,i),pushSerializeAndPop(n,this.GEOMETRY_SERIALIZERS,this.GEOMETRY_NODE_FACTORY_,[o],r,void 0,this)},t.prototype.writeFeatureElement=function(e,t,r){var o=t.getId();o&&e.setAttribute("fid",o);var i=r[r.length-1],n=i.featureNS,a=t.getGeometryName();i.serializers||(i.serializers={},i.serializers[n]={});var p=[],s=[];if(t.hasProperties()){var u=t.getProperties();for(var l in u){var m=u[l];null!==m&&(p.push(l),s.push(m),l==a||"function"==typeof m.getSimplifiedGeometry?l in i.serializers[n]||(i.serializers[n][l]=makeChildAppender(this.writeGeometryElement,this)):l in i.serializers[n]||(i.serializers[n][l]=makeChildAppender(writeStringTextNode)))}}var h=assign({},i);h.node=e,pushSerializeAndPop(h,i.serializers,makeSimpleNodeFactory(void 0,n),s,r,p)},t.prototype.writeFeatureMembers_=function(e,t,r){var o=r[r.length-1],i=o.featureType,n=o.featureNS,a={};a[n]={},a[n][i]=makeChildAppender(this.writeFeatureElement,this);var p=assign({},o);p.node=e,pushSerializeAndPop(p,a,makeSimpleNodeFactory(i,n),t,r)},t.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_=function(e,t,r){var o=t[t.length-1].node;return createElementNS(this.namespace,MULTIGEOMETRY_TO_MEMBER_NODENAME[o.nodeName])},t.prototype.GEOMETRY_NODE_FACTORY_=function(e,t,r){var o,i=t[t.length-1],n=i.multiSurface,a=i.surface,p=i.curve,s=i.multiCurve;return Array.isArray(e)?o="Envelope":"MultiPolygon"===(o=e.getType())&&!0===n?o="MultiSurface":"Polygon"===o&&!0===a?o="Surface":"LineString"===o&&!0===p?o="Curve":"MultiLineString"===o&&!0===s&&(o="MultiCurve"),createElementNS(this.namespace,o)},t.prototype.writeGeometryNode=function(e,t){t=this.adaptOptions(t);var r=createElementNS(this.namespace,"geom"),o={node:r,hasZ:this.hasZ,srsName:this.srsName,curve:this.curve_,surface:this.surface_,multiSurface:this.multiSurface_,multiCurve:this.multiCurve_};return t&&assign(o,t),this.writeGeometryElement(r,e,[o]),r},t.prototype.writeFeaturesNode=function(e,t){t=this.adaptOptions(t);var r=createElementNS(this.namespace,"featureMembers");r.setAttributeNS(XML_SCHEMA_INSTANCE_URI,"xsi:schemaLocation",this.schemaLocation);var o={srsName:this.srsName,hasZ:this.hasZ,curve:this.curve_,surface:this.surface_,multiSurface:this.multiSurface_,multiCurve:this.multiCurve_,featureNS:this.featureNS,featureType:this.featureType};return t&&assign(o,t),this.writeFeatureMembers_(r,e,[o]),r},t}(GMLBase);GML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS={"http://www.opengis.net/gml":{pos:makeReplacer(GML3.prototype.readFlatPos),posList:makeReplacer(GML3.prototype.readFlatPosList),coordinates:makeReplacer(GML2.prototype.readFlatCoordinates)}},GML3.prototype.FLAT_LINEAR_RINGS_PARSERS={"http://www.opengis.net/gml":{interior:GML3.prototype.interiorParser,exterior:GML3.prototype.exteriorParser}},GML3.prototype.GEOMETRY_PARSERS={"http://www.opengis.net/gml":{Point:makeReplacer(GMLBase.prototype.readPoint),MultiPoint:makeReplacer(GMLBase.prototype.readMultiPoint),LineString:makeReplacer(GMLBase.prototype.readLineString),MultiLineString:makeReplacer(GMLBase.prototype.readMultiLineString),LinearRing:makeReplacer(GMLBase.prototype.readLinearRing),Polygon:makeReplacer(GMLBase.prototype.readPolygon),MultiPolygon:makeReplacer(GMLBase.prototype.readMultiPolygon),Surface:makeReplacer(GML3.prototype.readSurface),MultiSurface:makeReplacer(GML3.prototype.readMultiSurface),Curve:makeReplacer(GML3.prototype.readCurve),MultiCurve:makeReplacer(GML3.prototype.readMultiCurve),Envelope:makeReplacer(GML3.prototype.readEnvelope)}},GML3.prototype.MULTICURVE_PARSERS={"http://www.opengis.net/gml":{curveMember:makeArrayPusher(GML3.prototype.curveMemberParser),curveMembers:makeArrayPusher(GML3.prototype.curveMemberParser)}},GML3.prototype.MULTISURFACE_PARSERS={"http://www.opengis.net/gml":{surfaceMember:makeArrayPusher(GML3.prototype.surfaceMemberParser),surfaceMembers:makeArrayPusher(GML3.prototype.surfaceMemberParser)}},GML3.prototype.CURVEMEMBER_PARSERS={"http://www.opengis.net/gml":{LineString:makeArrayPusher(GMLBase.prototype.readLineString),Curve:makeArrayPusher(GML3.prototype.readCurve)}},GML3.prototype.SURFACEMEMBER_PARSERS={"http://www.opengis.net/gml":{Polygon:makeArrayPusher(GMLBase.prototype.readPolygon),Surface:makeArrayPusher(GML3.prototype.readSurface)}},GML3.prototype.SURFACE_PARSERS={"http://www.opengis.net/gml":{patches:makeReplacer(GML3.prototype.readPatch)}},GML3.prototype.CURVE_PARSERS={"http://www.opengis.net/gml":{segments:makeReplacer(GML3.prototype.readSegment)}},GML3.prototype.ENVELOPE_PARSERS={"http://www.opengis.net/gml":{lowerCorner:makeArrayPusher(GML3.prototype.readFlatPosList),upperCorner:makeArrayPusher(GML3.prototype.readFlatPosList)}},GML3.prototype.PATCHES_PARSERS={"http://www.opengis.net/gml":{PolygonPatch:makeReplacer(GML3.prototype.readPolygonPatch)}},GML3.prototype.SEGMENTS_PARSERS={"http://www.opengis.net/gml":{LineStringSegment:makeReplacer(GML3.prototype.readLineStringSegment)}},GML3.prototype.writeFeatures,GML3.prototype.RING_SERIALIZERS={"http://www.opengis.net/gml":{exterior:makeChildAppender(GML3.prototype.writeRing),interior:makeChildAppender(GML3.prototype.writeRing)}},GML3.prototype.ENVELOPE_SERIALIZERS={"http://www.opengis.net/gml":{lowerCorner:makeChildAppender(writeStringTextNode),upperCorner:makeChildAppender(writeStringTextNode)}},GML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS={"http://www.opengis.net/gml":{surfaceMember:makeChildAppender(GML3.prototype.writeSurfaceOrPolygonMember),polygonMember:makeChildAppender(GML3.prototype.writeSurfaceOrPolygonMember)}},GML3.prototype.POINTMEMBER_SERIALIZERS={"http://www.opengis.net/gml":{pointMember:makeChildAppender(GML3.prototype.writePointMember)}},GML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS={"http://www.opengis.net/gml":{lineStringMember:makeChildAppender(GML3.prototype.writeLineStringOrCurveMember),curveMember:makeChildAppender(GML3.prototype.writeLineStringOrCurveMember)}},GML3.prototype.GEOMETRY_SERIALIZERS={"http://www.opengis.net/gml":{Curve:makeChildAppender(GML3.prototype.writeCurveOrLineString),MultiCurve:makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),Point:makeChildAppender(GML3.prototype.writePoint),MultiPoint:makeChildAppender(GML3.prototype.writeMultiPoint),LineString:makeChildAppender(GML3.prototype.writeCurveOrLineString),MultiLineString:makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),LinearRing:makeChildAppender(GML3.prototype.writeLinearRing),Polygon:makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),MultiPolygon:makeChildAppender(GML3.prototype.writeMultiSurfaceOrPolygon),Surface:makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),MultiSurface:makeChildAppender(GML3.prototype.writeMultiSurfaceOrPolygon),Envelope:makeChildAppender(GML3.prototype.writeEnvelope)}};export default GML3;
//# sourceMappingURL=/sm/467b6640f1137be08ca7de49b30a2be5bc7e79a53cf49ed18cd6ffb49393fd77.map