/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/format/GPX.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var __extends=this&&this.__extends||function(){var e=function(t,r){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])},e(t,r)};return function(t,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function a(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(a.prototype=r.prototype,new a)}}();import Feature from"../Feature.js";import GeometryLayout from"../geom/GeometryLayout.js";import GeometryType from"../geom/GeometryType.js";import LineString from"../geom/LineString.js";import MultiLineString from"../geom/MultiLineString.js";import Point from"../geom/Point.js";import XMLFeature from"./XMLFeature.js";import{OBJECT_PROPERTY_NODE_FACTORY,XML_SCHEMA_INSTANCE_URI,createElementNS,makeArrayPusher,makeArraySerializer,makeChildAppender,makeObjectPropertySetter,makeSequence,makeSimpleNodeFactory,makeStructureNS,parseNode,pushParseAndPop,pushSerializeAndPop}from"../xml.js";import{get as getProjection}from"../proj.js";import{includes}from"../array.js";import{readDateTime,readDecimal,readPositiveInteger,readString,writeDateTimeTextNode,writeDecimalTextNode,writeNonNegativeIntegerTextNode,writeStringTextNode}from"./xsd.js";import{transformGeometryWithOptions}from"./Feature.js";var NAMESPACE_URIS=[null,"http://www.topografix.com/GPX/1/0","http://www.topografix.com/GPX/1/1"],SCHEMA_LOCATION="http://www.topografix.com/GPX/1/1 http://www.topografix.com/GPX/1/1/gpx.xsd",FEATURE_READER={rte:readRte,trk:readTrk,wpt:readWpt},GPX_PARSERS=makeStructureNS(NAMESPACE_URIS,{rte:makeArrayPusher(readRte),trk:makeArrayPusher(readTrk),wpt:makeArrayPusher(readWpt)}),LINK_PARSERS=makeStructureNS(NAMESPACE_URIS,{text:makeObjectPropertySetter(readString,"linkText"),type:makeObjectPropertySetter(readString,"linkType")}),GPX_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{rte:makeChildAppender(writeRte),trk:makeChildAppender(writeTrk),wpt:makeChildAppender(writeWpt)}),GPX=function(e){function t(t){var r=e.call(this)||this,a=t||{};return r.dataProjection=getProjection("EPSG:4326"),r.readExtensions_=a.readExtensions,r}return __extends(t,e),t.prototype.handleReadExtensions_=function(e){e||(e=[]);for(var t=0,r=e.length;t<r;++t){var a=e[t];if(this.readExtensions_){var i=a.get("extensionsNode_")||null;this.readExtensions_(a,i)}a.set("extensionsNode_",void 0)}},t.prototype.readFeatureFromNode=function(e,t){if(!includes(NAMESPACE_URIS,e.namespaceURI))return null;var r=FEATURE_READER[e.localName];if(!r)return null;var a=r(e,[this.getReadOptions(e,t)]);return a?(this.handleReadExtensions_([a]),a):null},t.prototype.readFeaturesFromNode=function(e,t){if(!includes(NAMESPACE_URIS,e.namespaceURI))return[];if("gpx"==e.localName){var r=pushParseAndPop([],GPX_PARSERS,e,[this.getReadOptions(e,t)]);return r?(this.handleReadExtensions_(r),r):[]}return[]},t.prototype.writeFeaturesNode=function(e,t){t=this.adaptOptions(t);var r=createElementNS("http://www.topografix.com/GPX/1/1","gpx");return r.setAttributeNS("http://www.w3.org/2000/xmlns/","xmlns:xsi",XML_SCHEMA_INSTANCE_URI),r.setAttributeNS(XML_SCHEMA_INSTANCE_URI,"xsi:schemaLocation",SCHEMA_LOCATION),r.setAttribute("version","1.1"),r.setAttribute("creator","OpenLayers"),pushSerializeAndPop({node:r},GPX_SERIALIZERS,GPX_NODE_FACTORY,e,[t]),r},t}(XMLFeature),RTE_PARSERS=makeStructureNS(NAMESPACE_URIS,{name:makeObjectPropertySetter(readString),cmt:makeObjectPropertySetter(readString),desc:makeObjectPropertySetter(readString),src:makeObjectPropertySetter(readString),link:parseLink,number:makeObjectPropertySetter(readPositiveInteger),extensions:parseExtensions,type:makeObjectPropertySetter(readString),rtept:parseRtePt}),RTEPT_PARSERS=makeStructureNS(NAMESPACE_URIS,{ele:makeObjectPropertySetter(readDecimal),time:makeObjectPropertySetter(readDateTime)}),TRK_PARSERS=makeStructureNS(NAMESPACE_URIS,{name:makeObjectPropertySetter(readString),cmt:makeObjectPropertySetter(readString),desc:makeObjectPropertySetter(readString),src:makeObjectPropertySetter(readString),link:parseLink,number:makeObjectPropertySetter(readPositiveInteger),type:makeObjectPropertySetter(readString),extensions:parseExtensions,trkseg:parseTrkSeg}),TRKSEG_PARSERS=makeStructureNS(NAMESPACE_URIS,{trkpt:parseTrkPt}),TRKPT_PARSERS=makeStructureNS(NAMESPACE_URIS,{ele:makeObjectPropertySetter(readDecimal),time:makeObjectPropertySetter(readDateTime)}),WPT_PARSERS=makeStructureNS(NAMESPACE_URIS,{ele:makeObjectPropertySetter(readDecimal),time:makeObjectPropertySetter(readDateTime),magvar:makeObjectPropertySetter(readDecimal),geoidheight:makeObjectPropertySetter(readDecimal),name:makeObjectPropertySetter(readString),cmt:makeObjectPropertySetter(readString),desc:makeObjectPropertySetter(readString),src:makeObjectPropertySetter(readString),link:parseLink,sym:makeObjectPropertySetter(readString),type:makeObjectPropertySetter(readString),fix:makeObjectPropertySetter(readString),sat:makeObjectPropertySetter(readPositiveInteger),hdop:makeObjectPropertySetter(readDecimal),vdop:makeObjectPropertySetter(readDecimal),pdop:makeObjectPropertySetter(readDecimal),ageofdgpsdata:makeObjectPropertySetter(readDecimal),dgpsid:makeObjectPropertySetter(readPositiveInteger),extensions:parseExtensions}),LINK_SEQUENCE=["text","type"],LINK_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{text:makeChildAppender(writeStringTextNode),type:makeChildAppender(writeStringTextNode)}),RTE_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["name","cmt","desc","src","link","number","type","rtept"]),RTE_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{name:makeChildAppender(writeStringTextNode),cmt:makeChildAppender(writeStringTextNode),desc:makeChildAppender(writeStringTextNode),src:makeChildAppender(writeStringTextNode),link:makeChildAppender(writeLink),number:makeChildAppender(writeNonNegativeIntegerTextNode),type:makeChildAppender(writeStringTextNode),rtept:makeArraySerializer(makeChildAppender(writeWptType))}),RTEPT_TYPE_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["ele","time"]),TRK_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["name","cmt","desc","src","link","number","type","trkseg"]),TRK_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{name:makeChildAppender(writeStringTextNode),cmt:makeChildAppender(writeStringTextNode),desc:makeChildAppender(writeStringTextNode),src:makeChildAppender(writeStringTextNode),link:makeChildAppender(writeLink),number:makeChildAppender(writeNonNegativeIntegerTextNode),type:makeChildAppender(writeStringTextNode),trkseg:makeArraySerializer(makeChildAppender(writeTrkSeg))}),TRKSEG_NODE_FACTORY=makeSimpleNodeFactory("trkpt"),TRKSEG_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{trkpt:makeChildAppender(writeWptType)}),WPT_TYPE_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["ele","time","magvar","geoidheight","name","cmt","desc","src","link","sym","type","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid"]),WPT_TYPE_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{ele:makeChildAppender(writeDecimalTextNode),time:makeChildAppender(writeDateTimeTextNode),magvar:makeChildAppender(writeDecimalTextNode),geoidheight:makeChildAppender(writeDecimalTextNode),name:makeChildAppender(writeStringTextNode),cmt:makeChildAppender(writeStringTextNode),desc:makeChildAppender(writeStringTextNode),src:makeChildAppender(writeStringTextNode),link:makeChildAppender(writeLink),sym:makeChildAppender(writeStringTextNode),type:makeChildAppender(writeStringTextNode),fix:makeChildAppender(writeStringTextNode),sat:makeChildAppender(writeNonNegativeIntegerTextNode),hdop:makeChildAppender(writeDecimalTextNode),vdop:makeChildAppender(writeDecimalTextNode),pdop:makeChildAppender(writeDecimalTextNode),ageofdgpsdata:makeChildAppender(writeDecimalTextNode),dgpsid:makeChildAppender(writeNonNegativeIntegerTextNode)}),GEOMETRY_TYPE_TO_NODENAME={Point:"wpt",LineString:"rte",MultiLineString:"trk"};function GPX_NODE_FACTORY(e,t,r){var a=e.getGeometry();if(a){var i=GEOMETRY_TYPE_TO_NODENAME[a.getType()];if(i){var n=t[t.length-1].node;return createElementNS(n.namespaceURI,i)}}}function appendCoordinate(e,t,r,a){return e.push(parseFloat(r.getAttribute("lon")),parseFloat(r.getAttribute("lat"))),"ele"in a?(e.push(a.ele),delete a.ele,t.hasZ=!0):e.push(0),"time"in a?(e.push(a.time),delete a.time,t.hasM=!0):e.push(0),e}function applyLayoutOptions(e,t,r){var a=GeometryLayout.XY,i=2;if(e.hasZ&&e.hasM?(a=GeometryLayout.XYZM,i=4):e.hasZ?(a=GeometryLayout.XYZ,i=3):e.hasM&&(a=GeometryLayout.XYM,i=3),4!==i){for(var n=0,o=t.length/4;n<o;n++)t[n*i]=t[4*n],t[n*i+1]=t[4*n+1],e.hasZ&&(t[n*i+2]=t[4*n+2]),e.hasM&&(t[n*i+2]=t[4*n+3]);if(t.length=t.length/4*i,r)for(n=0,o=r.length;n<o;n++)r[n]=r[n]/4*i}return a}function parseLink(e,t){var r=t[t.length-1],a=e.getAttribute("href");null!==a&&(r.link=a),parseNode(LINK_PARSERS,e,t)}function parseExtensions(e,t){t[t.length-1].extensionsNode_=e}function parseRtePt(e,t){var r=pushParseAndPop({},RTEPT_PARSERS,e,t);if(r){var a=t[t.length-1];appendCoordinate(a.flatCoordinates,a.layoutOptions,e,r)}}function parseTrkPt(e,t){var r=pushParseAndPop({},TRKPT_PARSERS,e,t);if(r){var a=t[t.length-1];appendCoordinate(a.flatCoordinates,a.layoutOptions,e,r)}}function parseTrkSeg(e,t){var r=t[t.length-1];parseNode(TRKSEG_PARSERS,e,t);var a=r.flatCoordinates;r.ends.push(a.length)}function readRte(e,t){var r=t[0],a=pushParseAndPop({flatCoordinates:[],layoutOptions:{}},RTE_PARSERS,e,t);if(a){var i=a.flatCoordinates;delete a.flatCoordinates;var n=a.layoutOptions;delete a.layoutOptions;var o=applyLayoutOptions(n,i),p=new LineString(i,o);transformGeometryWithOptions(p,!1,r);var d=new Feature(p);return d.setProperties(a,!0),d}}function readTrk(e,t){var r=t[0],a=pushParseAndPop({flatCoordinates:[],ends:[],layoutOptions:{}},TRK_PARSERS,e,t);if(a){var i=a.flatCoordinates;delete a.flatCoordinates;var n=a.ends;delete a.ends;var o=a.layoutOptions;delete a.layoutOptions;var p=applyLayoutOptions(o,i,n),d=new MultiLineString(i,p,n);transformGeometryWithOptions(d,!1,r);var S=new Feature(d);return S.setProperties(a,!0),S}}function readWpt(e,t){var r=t[0],a=pushParseAndPop({},WPT_PARSERS,e,t);if(a){var i={},n=appendCoordinate([],i,e,a),o=applyLayoutOptions(i,n),p=new Point(n,o);transformGeometryWithOptions(p,!1,r);var d=new Feature(p);return d.setProperties(a,!0),d}}function writeLink(e,t,r){e.setAttribute("href",t);var a=r[r.length-1].properties,i=[a.linkText,a.linkType];pushSerializeAndPop({node:e},LINK_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,i,r,LINK_SEQUENCE)}function writeWptType(e,t,r){var a=r[r.length-1],i=a.node.namespaceURI,n=a.properties;switch(e.setAttributeNS(null,"lat",String(t[1])),e.setAttributeNS(null,"lon",String(t[0])),a.geometryLayout){case GeometryLayout.XYZM:0!==t[3]&&(n.time=t[3]);case GeometryLayout.XYZ:0!==t[2]&&(n.ele=t[2]);break;case GeometryLayout.XYM:0!==t[2]&&(n.time=t[2])}var o="rtept"==e.nodeName?RTEPT_TYPE_SEQUENCE[i]:WPT_TYPE_SEQUENCE[i],p=makeSequence(n,o);pushSerializeAndPop({node:e,properties:n},WPT_TYPE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,p,r,o)}function writeRte(e,t,r){var a=r[0],i=t.getProperties(),n={node:e};n.properties=i;var o=t.getGeometry();if(o.getType()==GeometryType.LINE_STRING){var p=transformGeometryWithOptions(o,!0,a);n.geometryLayout=p.getLayout(),i.rtept=p.getCoordinates()}var d=r[r.length-1].node,S=RTE_SEQUENCE[d.namespaceURI],m=makeSequence(i,S);pushSerializeAndPop(n,RTE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,m,r,S)}function writeTrk(e,t,r){var a=r[0],i=t.getProperties(),n={node:e};n.properties=i;var o=t.getGeometry();if(o.getType()==GeometryType.MULTI_LINE_STRING){var p=transformGeometryWithOptions(o,!0,a);i.trkseg=p.getLineStrings()}var d=r[r.length-1].node,S=TRK_SEQUENCE[d.namespaceURI],m=makeSequence(i,S);pushSerializeAndPop(n,TRK_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,m,r,S)}function writeTrkSeg(e,t,r){var a={node:e};a.geometryLayout=t.getLayout(),a.properties={},pushSerializeAndPop(a,TRKSEG_SERIALIZERS,TRKSEG_NODE_FACTORY,t.getCoordinates(),r)}function writeWpt(e,t,r){var a=r[0],i=r[r.length-1];i.properties=t.getProperties();var n=t.getGeometry();if(n.getType()==GeometryType.POINT){var o=transformGeometryWithOptions(n,!0,a);i.geometryLayout=o.getLayout(),writeWptType(e,o.getCoordinates(),r)}}export default GPX;
//# sourceMappingURL=/sm/c681977b42092a2d536c600806f8e458d35b54ec35106ab637bc35350c344740.map