/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/format/EsriJSON.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var __extends=this&&this.__extends||function(){var e=function(t,r){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])},e(t,r)};return function(t,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}();import Feature from"../Feature.js";import GeometryLayout from"../geom/GeometryLayout.js";import GeometryType from"../geom/GeometryType.js";import JSONFeature from"./JSONFeature.js";import LineString from"../geom/LineString.js";import LinearRing from"../geom/LinearRing.js";import MultiLineString from"../geom/MultiLineString.js";import MultiPoint from"../geom/MultiPoint.js";import MultiPolygon from"../geom/MultiPolygon.js";import Point from"../geom/Point.js";import Polygon from"../geom/Polygon.js";import{assert}from"../asserts.js";import{assign,isEmpty}from"../obj.js";import{containsExtent}from"../extent.js";import{deflateCoordinates}from"../geom/flat/deflate.js";import{get as getProjection}from"../proj.js";import{linearRingIsClockwise}from"../geom/flat/orient.js";import{transformGeometryWithOptions}from"./Feature.js";var GEOMETRY_READERS={};GEOMETRY_READERS[GeometryType.POINT]=readPointGeometry,GEOMETRY_READERS[GeometryType.LINE_STRING]=readLineStringGeometry,GEOMETRY_READERS[GeometryType.POLYGON]=readPolygonGeometry,GEOMETRY_READERS[GeometryType.MULTI_POINT]=readMultiPointGeometry,GEOMETRY_READERS[GeometryType.MULTI_LINE_STRING]=readMultiLineStringGeometry,GEOMETRY_READERS[GeometryType.MULTI_POLYGON]=readMultiPolygonGeometry;var GEOMETRY_WRITERS={};GEOMETRY_WRITERS[GeometryType.POINT]=writePointGeometry,GEOMETRY_WRITERS[GeometryType.LINE_STRING]=writeLineStringGeometry,GEOMETRY_WRITERS[GeometryType.POLYGON]=writePolygonGeometry,GEOMETRY_WRITERS[GeometryType.MULTI_POINT]=writeMultiPointGeometry,GEOMETRY_WRITERS[GeometryType.MULTI_LINE_STRING]=writeMultiLineStringGeometry,GEOMETRY_WRITERS[GeometryType.MULTI_POLYGON]=writeMultiPolygonGeometry;var EsriJSON=function(e){function t(t){var r=this,o=t||{};return(r=e.call(this)||this).geometryName_=o.geometryName,r}return __extends(t,e),t.prototype.readFeatureFromObject=function(e,t,r){var o=e,n=readGeometry(o.geometry,t),i=new Feature;if(this.geometryName_&&i.setGeometryName(this.geometryName_),i.setGeometry(n),o.attributes){i.setProperties(o.attributes,!0);var a=o.attributes[r];void 0!==a&&i.setId(a)}return i},t.prototype.readFeaturesFromObject=function(e,t){var r=t||{};if(e.features){for(var o=[],n=e.features,i=0,a=n.length;i<a;++i)o.push(this.readFeatureFromObject(n[i],r,e.objectIdFieldName));return o}return[this.readFeatureFromObject(e,r)]},t.prototype.readGeometryFromObject=function(e,t){return readGeometry(e,t)},t.prototype.readProjectionFromObject=function(e){if(e.spatialReference&&void 0!==e.spatialReference.wkid){var t=e.spatialReference.wkid;return getProjection("EPSG:"+t)}return null},t.prototype.writeGeometryObject=function(e,t){return writeGeometry(e,this.adaptOptions(t))},t.prototype.writeFeatureObject=function(e,t){t=this.adaptOptions(t);var r={};if(!e.hasProperties())return r.attributes={},r;var o=e.getProperties(),n=e.getGeometry();if(n){r.geometry=writeGeometry(n,t);var i=t&&(t.dataProjection||t.featureProjection);i&&(r.geometry.spatialReference={wkid:Number(getProjection(i).getCode().split(":").pop())}),delete o[e.getGeometryName()]}return isEmpty(o)?r.attributes={}:r.attributes=o,r},t.prototype.writeFeaturesObject=function(e,t){t=this.adaptOptions(t);for(var r=[],o=0,n=e.length;o<n;++o)r.push(this.writeFeatureObject(e[o],t));return{features:r}},t}(JSONFeature);function readGeometry(e,t){var r,o,n;if(!e)return null;if("number"==typeof e.x&&"number"==typeof e.y)n=GeometryType.POINT;else if(e.points)n=GeometryType.MULTI_POINT;else if(e.paths){n=1===e.paths.length?GeometryType.LINE_STRING:GeometryType.MULTI_LINE_STRING}else if(e.rings){var i=e,a=getGeometryLayout(i),y=convertRings(i.rings,a);1===y.length?(n=GeometryType.POLYGON,e=assign({},e,((r={}).rings=y[0],r))):(n=GeometryType.MULTI_POLYGON,e=assign({},e,((o={}).rings=y,o)))}var s=GEOMETRY_READERS[n];return transformGeometryWithOptions(s(e),!1,t)}function convertRings(e,t){var r,o,n=[],i=[],a=[];for(r=0,o=e.length;r<o;++r){n.length=0,deflateCoordinates(n,0,e[r],t.length),linearRingIsClockwise(n,0,n.length,t.length)?i.push([e[r]]):a.push(e[r])}for(;a.length;){var y=a.shift(),s=!1;for(r=i.length-1;r>=0;r--){var m=i[r][0];if(containsExtent(new LinearRing(m).getExtent(),new LinearRing(y).getExtent())){i[r].push(y),s=!0;break}}s||i.push([y.reverse()])}return i}function readPointGeometry(e){return void 0!==e.m&&void 0!==e.z?new Point([e.x,e.y,e.z,e.m],GeometryLayout.XYZM):void 0!==e.z?new Point([e.x,e.y,e.z],GeometryLayout.XYZ):void 0!==e.m?new Point([e.x,e.y,e.m],GeometryLayout.XYM):new Point([e.x,e.y])}function readLineStringGeometry(e){var t=getGeometryLayout(e);return new LineString(e.paths[0],t)}function readMultiLineStringGeometry(e){var t=getGeometryLayout(e);return new MultiLineString(e.paths,t)}function getGeometryLayout(e){var t=GeometryLayout.XY;return!0===e.hasZ&&!0===e.hasM?t=GeometryLayout.XYZM:!0===e.hasZ?t=GeometryLayout.XYZ:!0===e.hasM&&(t=GeometryLayout.XYM),t}function readMultiPointGeometry(e){var t=getGeometryLayout(e);return new MultiPoint(e.points,t)}function readMultiPolygonGeometry(e){var t=getGeometryLayout(e);return new MultiPolygon(e.rings,t)}function readPolygonGeometry(e){var t=getGeometryLayout(e);return new Polygon(e.rings,t)}function writePointGeometry(e,t){var r,o=e.getCoordinates(),n=e.getLayout();return n===GeometryLayout.XYZ?r={x:o[0],y:o[1],z:o[2]}:n===GeometryLayout.XYM?r={x:o[0],y:o[1],m:o[2]}:n===GeometryLayout.XYZM?r={x:o[0],y:o[1],z:o[2],m:o[3]}:n===GeometryLayout.XY?r={x:o[0],y:o[1]}:assert(!1,34),r}function getHasZM(e){var t=e.getLayout();return{hasZ:t===GeometryLayout.XYZ||t===GeometryLayout.XYZM,hasM:t===GeometryLayout.XYM||t===GeometryLayout.XYZM}}function writeLineStringGeometry(e,t){var r=getHasZM(e);return{hasZ:r.hasZ,hasM:r.hasM,paths:[e.getCoordinates()]}}function writePolygonGeometry(e,t){var r=getHasZM(e);return{hasZ:r.hasZ,hasM:r.hasM,rings:e.getCoordinates(!1)}}function writeMultiLineStringGeometry(e,t){var r=getHasZM(e);return{hasZ:r.hasZ,hasM:r.hasM,paths:e.getCoordinates()}}function writeMultiPointGeometry(e,t){var r=getHasZM(e);return{hasZ:r.hasZ,hasM:r.hasM,points:e.getCoordinates()}}function writeMultiPolygonGeometry(e,t){for(var r=getHasZM(e),o=e.getCoordinates(!1),n=[],i=0;i<o.length;i++)for(var a=o[i].length-1;a>=0;a--)n.push(o[i][a]);return{hasZ:r.hasZ,hasM:r.hasM,rings:n}}function writeGeometry(e,t){return(0,GEOMETRY_WRITERS[e.getType()])(transformGeometryWithOptions(e,!0,t),t)}export default EsriJSON;
//# sourceMappingURL=/sm/6a8398bc01a6b596d84a652778999e54a25b5136ed0be31533a5d86594ce7a12.map