/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/format/GMLBase.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var __extends=this&&this.__extends||function(){var e=function(t,r){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])},e(t,r)};return function(t,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}();import Feature from"../Feature.js";import GeometryLayout from"../geom/GeometryLayout.js";import LineString from"../geom/LineString.js";import LinearRing from"../geom/LinearRing.js";import MultiLineString from"../geom/MultiLineString.js";import MultiPoint from"../geom/MultiPoint.js";import MultiPolygon from"../geom/MultiPolygon.js";import Point from"../geom/Point.js";import Polygon from"../geom/Polygon.js";import XMLFeature from"./XMLFeature.js";import{assign}from"../obj.js";import{extend}from"../array.js";import{getAllTextContent,getAttributeNS,makeArrayPusher,makeReplacer,parseNode,pushParseAndPop}from"../xml.js";import{get as getProjection}from"../proj.js";import{transformExtentWithOptions,transformGeometryWithOptions}from"./Feature.js";export var GMLNS="http://www.opengis.net/gml";var ONLY_WHITESPACE_RE=/^[\s\xa0]*$/,GMLBase=function(e){function t(t){var r=e.call(this)||this,o=t||{};return r.featureType=o.featureType,r.featureNS=o.featureNS,r.srsName=o.srsName,r.schemaLocation="",r.FEATURE_COLLECTION_PARSERS={},r.FEATURE_COLLECTION_PARSERS[r.namespace]={featureMember:makeArrayPusher(r.readFeaturesInternal),featureMembers:makeReplacer(r.readFeaturesInternal)},r.supportedMediaTypes=["application/gml+xml"],r}return __extends(t,e),t.prototype.readFeaturesInternal=function(e,t){var r=e.localName,o=null;if("FeatureCollection"==r)o=pushParseAndPop([],this.FEATURE_COLLECTION_PARSERS,e,t,this);else if("featureMembers"==r||"featureMember"==r||"member"==r){var n=t[0],a=n.featureType,i=n.featureNS;if(!a&&e.childNodes){a=[],i={};for(var s=0,p=e.childNodes.length;s<p;++s){var u=e.childNodes[s];if(1===u.nodeType){var m=u.nodeName.split(":").pop();if(-1===a.indexOf(m)){var l="",y=0,h=u.namespaceURI;for(var d in i){if(i[d]===h){l=d;break}++y}l||(i[l="p"+y]=h),a.push(l+":"+m)}}}"featureMember"!=r&&(n.featureType=a,n.featureNS=i)}if("string"==typeof i){var f=i;(i={}).p0=f}var P={},g=Array.isArray(a)?a:[a];for(var R in i){var E={};for(s=0,p=g.length;s<p;++s){(-1===g[s].indexOf(":")?"p0":g[s].split(":")[0])===R&&(E[g[s].split(":").pop()]="featureMembers"==r?makeArrayPusher(this.readFeatureElement,this):makeReplacer(this.readFeatureElement,this))}P[i[R]]=E}o=pushParseAndPop("featureMember"==r||"member"==r?void 0:[],P,e,t)}return null===o&&(o=[]),o},t.prototype.readGeometryElement=function(e,t){var r=t[0];r.srsName=e.firstElementChild.getAttribute("srsName"),r.srsDimension=e.firstElementChild.getAttribute("srsDimension");var o=pushParseAndPop(null,this.GEOMETRY_PARSERS,e,t,this);return o?Array.isArray(o)?transformExtentWithOptions(o,r):transformGeometryWithOptions(o,!1,r):void 0},t.prototype.readFeatureElementInternal=function(e,t,r){for(var o,n={},a=e.firstElementChild;a;a=a.nextElementSibling){var i=void 0,s=a.localName;0===a.childNodes.length||1===a.childNodes.length&&(3===a.firstChild.nodeType||4===a.firstChild.nodeType)?(i=getAllTextContent(a,!1),ONLY_WHITESPACE_RE.test(i)&&(i=void 0)):(r&&(i=this.readGeometryElement(a,t)),i?"boundedBy"!==s&&(o=s):i=this.readFeatureElementInternal(a,t,!1)),n[s]?(n[s]instanceof Array||(n[s]=[n[s]]),n[s].push(i)):n[s]=i;var p=a.attributes.length;if(p>0){n[s]={_content_:n[s]};for(var u=0;u<p;u++){var m=a.attributes[u].name;n[s][m]=a.attributes[u].value}}}if(r){var l=new Feature(n);o&&l.setGeometryName(o);var y=e.getAttribute("fid")||getAttributeNS(e,this.namespace,"id");return y&&l.setId(y),l}return n},t.prototype.readFeatureElement=function(e,t){return this.readFeatureElementInternal(e,t,!0)},t.prototype.readPoint=function(e,t){var r=this.readFlatCoordinatesFromNode(e,t);if(r)return new Point(r,GeometryLayout.XYZ)},t.prototype.readMultiPoint=function(e,t){var r=pushParseAndPop([],this.MULTIPOINT_PARSERS,e,t,this);return r?new MultiPoint(r):void 0},t.prototype.readMultiLineString=function(e,t){var r=pushParseAndPop([],this.MULTILINESTRING_PARSERS,e,t,this);if(r)return new MultiLineString(r)},t.prototype.readMultiPolygon=function(e,t){var r=pushParseAndPop([],this.MULTIPOLYGON_PARSERS,e,t,this);if(r)return new MultiPolygon(r)},t.prototype.pointMemberParser=function(e,t){parseNode(this.POINTMEMBER_PARSERS,e,t,this)},t.prototype.lineStringMemberParser=function(e,t){parseNode(this.LINESTRINGMEMBER_PARSERS,e,t,this)},t.prototype.polygonMemberParser=function(e,t){parseNode(this.POLYGONMEMBER_PARSERS,e,t,this)},t.prototype.readLineString=function(e,t){var r=this.readFlatCoordinatesFromNode(e,t);return r?new LineString(r,GeometryLayout.XYZ):void 0},t.prototype.readFlatLinearRing=function(e,t){var r=pushParseAndPop(null,this.GEOMETRY_FLAT_COORDINATES_PARSERS,e,t,this);return r||void 0},t.prototype.readLinearRing=function(e,t){var r=this.readFlatCoordinatesFromNode(e,t);if(r)return new LinearRing(r,GeometryLayout.XYZ)},t.prototype.readPolygon=function(e,t){var r=pushParseAndPop([null],this.FLAT_LINEAR_RINGS_PARSERS,e,t,this);if(r&&r[0]){var o,n=r[0],a=[n.length],i=void 0;for(i=1,o=r.length;i<o;++i)extend(n,r[i]),a.push(n.length);return new Polygon(n,GeometryLayout.XYZ,a)}},t.prototype.readFlatCoordinatesFromNode=function(e,t){return pushParseAndPop(null,this.GEOMETRY_FLAT_COORDINATES_PARSERS,e,t,this)},t.prototype.readGeometryFromNode=function(e,t){var r=this.readGeometryElement(e,[this.getReadOptions(e,t||{})]);return r||null},t.prototype.readFeaturesFromNode=function(e,t){var r={featureType:this.featureType,featureNS:this.featureNS};return t&&assign(r,this.getReadOptions(e,t)),this.readFeaturesInternal(e,[r])||[]},t.prototype.readProjectionFromNode=function(e){return getProjection(this.srsName?this.srsName:e.firstElementChild.getAttribute("srsName"))},t}(XMLFeature);GMLBase.prototype.namespace=GMLNS,GMLBase.prototype.FLAT_LINEAR_RINGS_PARSERS={"http://www.opengis.net/gml":{}},GMLBase.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS={"http://www.opengis.net/gml":{}},GMLBase.prototype.GEOMETRY_PARSERS={"http://www.opengis.net/gml":{}},GMLBase.prototype.MULTIPOINT_PARSERS={"http://www.opengis.net/gml":{pointMember:makeArrayPusher(GMLBase.prototype.pointMemberParser),pointMembers:makeArrayPusher(GMLBase.prototype.pointMemberParser)}},GMLBase.prototype.MULTILINESTRING_PARSERS={"http://www.opengis.net/gml":{lineStringMember:makeArrayPusher(GMLBase.prototype.lineStringMemberParser),lineStringMembers:makeArrayPusher(GMLBase.prototype.lineStringMemberParser)}},GMLBase.prototype.MULTIPOLYGON_PARSERS={"http://www.opengis.net/gml":{polygonMember:makeArrayPusher(GMLBase.prototype.polygonMemberParser),polygonMembers:makeArrayPusher(GMLBase.prototype.polygonMemberParser)}},GMLBase.prototype.POINTMEMBER_PARSERS={"http://www.opengis.net/gml":{Point:makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode)}},GMLBase.prototype.LINESTRINGMEMBER_PARSERS={"http://www.opengis.net/gml":{LineString:makeArrayPusher(GMLBase.prototype.readLineString)}},GMLBase.prototype.POLYGONMEMBER_PARSERS={"http://www.opengis.net/gml":{Polygon:makeArrayPusher(GMLBase.prototype.readPolygon)}},GMLBase.prototype.RING_PARSERS={"http://www.opengis.net/gml":{LinearRing:makeReplacer(GMLBase.prototype.readFlatLinearRing)}};export default GMLBase;
//# sourceMappingURL=/sm/6544931bbf88a81227d22389450e3ab68c5a168093f1e75dc17604fe244bd53a.map