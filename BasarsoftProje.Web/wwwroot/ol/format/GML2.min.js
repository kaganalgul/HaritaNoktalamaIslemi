/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/format/GML2.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var __extends=this&&this.__extends||function(){var e=function(t,r){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])},e(t,r)};return function(t,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}();import GMLBase,{GMLNS}from"./GMLBase.js";import{OBJECT_PROPERTY_NODE_FACTORY,createElementNS,getAllTextContent,makeArrayPusher,makeChildAppender,makeReplacer,makeSimpleNodeFactory,pushParseAndPop,pushSerializeAndPop}from"../xml.js";import{assign}from"../obj.js";import{createOrUpdate}from"../extent.js";import{get as getProjection}from"../proj.js";import{transformExtentWithOptions,transformGeometryWithOptions}from"./Feature.js";import{writeStringTextNode}from"./xsd.js";var schemaLocation=GMLNS+" http://schemas.opengis.net/gml/2.1.2/feature.xsd",MULTIGEOMETRY_TO_MEMBER_NODENAME={MultiLineString:"lineStringMember",MultiCurve:"curveMember",MultiPolygon:"polygonMember",MultiSurface:"surfaceMember"},GML2=function(e){function t(t){var r=this,o=t||{};return(r=e.call(this,o)||this).FEATURE_COLLECTION_PARSERS[GMLNS].featureMember=makeArrayPusher(r.readFeaturesInternal),r.schemaLocation=o.schemaLocation?o.schemaLocation:schemaLocation,r}return __extends(t,e),t.prototype.readFlatCoordinates=function(e,t){var r=getAllTextContent(e,!1).replace(/^\s*|\s*$/g,""),o=t[0].srsName,n="enu";if(o){var i=getProjection(o);i&&(n=i.getAxisOrientation())}for(var a=r.trim().split(/\s+/),p=[],s=0,l=a.length;s<l;s++){var u=a[s].split(/,+/),d=parseFloat(u[0]),m=parseFloat(u[1]),h=3===u.length?parseFloat(u[2]):0;"en"===n.substr(0,2)?p.push(d,m,h):p.push(m,d,h)}return p},t.prototype.readBox=function(e,t){var r=pushParseAndPop([null],this.BOX_PARSERS_,e,t,this);return createOrUpdate(r[1][0],r[1][1],r[1][3],r[1][4])},t.prototype.innerBoundaryIsParser=function(e,t){var r=pushParseAndPop(void 0,this.RING_PARSERS,e,t,this);r&&t[t.length-1].push(r)},t.prototype.outerBoundaryIsParser=function(e,t){var r=pushParseAndPop(void 0,this.RING_PARSERS,e,t,this);r&&(t[t.length-1][0]=r)},t.prototype.GEOMETRY_NODE_FACTORY_=function(e,t,r){var o,n=t[t.length-1],i=n.multiSurface,a=n.surface,p=n.multiCurve;return Array.isArray(e)?o="Envelope":"MultiPolygon"===(o=e.getType())&&!0===i?o="MultiSurface":"Polygon"===o&&!0===a?o="Surface":"MultiLineString"===o&&!0===p&&(o="MultiCurve"),createElementNS("http://www.opengis.net/gml",o)},t.prototype.writeFeatureElement=function(e,t,r){var o=t.getId();o&&e.setAttribute("fid",o);var n=r[r.length-1],i=n.featureNS,a=t.getGeometryName();n.serializers||(n.serializers={},n.serializers[i]={});var p=[],s=[];if(t.hasProperties()){var l=t.getProperties();for(var u in l){var d=l[u];null!==d&&(p.push(u),s.push(d),u==a||"function"==typeof d.getSimplifiedGeometry?u in n.serializers[i]||(n.serializers[i][u]=makeChildAppender(this.writeGeometryElement,this)):u in n.serializers[i]||(n.serializers[i][u]=makeChildAppender(writeStringTextNode)))}}var m=assign({},n);m.node=e,pushSerializeAndPop(m,n.serializers,makeSimpleNodeFactory(void 0,i),s,r,p)},t.prototype.writeCurveOrLineString=function(e,t,r){var o=r[r.length-1].srsName;if("LineStringSegment"!==e.nodeName&&o&&e.setAttribute("srsName",o),"LineString"===e.nodeName||"LineStringSegment"===e.nodeName){var n=this.createCoordinatesNode_(e.namespaceURI);e.appendChild(n),this.writeCoordinates_(n,t,r)}else if("Curve"===e.nodeName){var i=createElementNS(e.namespaceURI,"segments");e.appendChild(i),this.writeCurveSegments_(i,t,r)}},t.prototype.writeLineStringOrCurveMember=function(e,t,r){var o=this.GEOMETRY_NODE_FACTORY_(t,r);o&&(e.appendChild(o),this.writeCurveOrLineString(o,t,r))},t.prototype.writeMultiCurveOrLineString=function(e,t,r){var o=r[r.length-1],n=o.hasZ,i=o.srsName,a=o.curve;i&&e.setAttribute("srsName",i);var p=t.getLineStrings();pushSerializeAndPop({node:e,hasZ:n,srsName:i,curve:a},this.LINESTRINGORCURVEMEMBER_SERIALIZERS,this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,p,r,void 0,this)},t.prototype.writeGeometryElement=function(e,t,r){var o,n=r[r.length-1],i=assign({},n);i.node=e,o=Array.isArray(t)?transformExtentWithOptions(t,n):transformGeometryWithOptions(t,!0,n),pushSerializeAndPop(i,this.GEOMETRY_SERIALIZERS,this.GEOMETRY_NODE_FACTORY_,[o],r,void 0,this)},t.prototype.createCoordinatesNode_=function(e){var t=createElementNS(e,"coordinates");return t.setAttribute("decimal","."),t.setAttribute("cs",","),t.setAttribute("ts"," "),t},t.prototype.writeCoordinates_=function(e,t,r){for(var o=r[r.length-1],n=o.hasZ,i=o.srsName,a=t.getCoordinates(),p=a.length,s=new Array(p),l=0;l<p;++l){var u=a[l];s[l]=this.getCoords_(u,i,n)}writeStringTextNode(e,s.join(" "))},t.prototype.writeCurveSegments_=function(e,t,r){var o=createElementNS(e.namespaceURI,"LineStringSegment");e.appendChild(o),this.writeCurveOrLineString(o,t,r)},t.prototype.writeSurfaceOrPolygon=function(e,t,r){var o=r[r.length-1],n=o.hasZ,i=o.srsName;if("PolygonPatch"!==e.nodeName&&i&&e.setAttribute("srsName",i),"Polygon"===e.nodeName||"PolygonPatch"===e.nodeName){var a=t.getLinearRings();pushSerializeAndPop({node:e,hasZ:n,srsName:i},this.RING_SERIALIZERS,this.RING_NODE_FACTORY_,a,r,void 0,this)}else if("Surface"===e.nodeName){var p=createElementNS(e.namespaceURI,"patches");e.appendChild(p),this.writeSurfacePatches_(p,t,r)}},t.prototype.RING_NODE_FACTORY_=function(e,t,r){var o=t[t.length-1],n=o.node,i=o.exteriorWritten;return void 0===i&&(o.exteriorWritten=!0),createElementNS(n.namespaceURI,void 0!==i?"innerBoundaryIs":"outerBoundaryIs")},t.prototype.writeSurfacePatches_=function(e,t,r){var o=createElementNS(e.namespaceURI,"PolygonPatch");e.appendChild(o),this.writeSurfaceOrPolygon(o,t,r)},t.prototype.writeRing=function(e,t,r){var o=createElementNS(e.namespaceURI,"LinearRing");e.appendChild(o),this.writeLinearRing(o,t,r)},t.prototype.getCoords_=function(e,t,r){var o="enu";t&&(o=getProjection(t).getAxisOrientation());var n="en"===o.substr(0,2)?e[0]+","+e[1]:e[1]+","+e[0];r&&(n+=","+(e[2]||0));return n},t.prototype.writePoint=function(e,t,r){var o=r[r.length-1],n=o.hasZ,i=o.srsName;i&&e.setAttribute("srsName",i);var a=this.createCoordinatesNode_(e.namespaceURI);e.appendChild(a);var p=t.getCoordinates(),s=this.getCoords_(p,i,n);writeStringTextNode(a,s)},t.prototype.writeMultiPoint=function(e,t,r){var o=r[r.length-1],n=o.hasZ,i=o.srsName;i&&e.setAttribute("srsName",i);var a=t.getPoints();pushSerializeAndPop({node:e,hasZ:n,srsName:i},this.POINTMEMBER_SERIALIZERS,makeSimpleNodeFactory("pointMember"),a,r,void 0,this)},t.prototype.writePointMember=function(e,t,r){var o=createElementNS(e.namespaceURI,"Point");e.appendChild(o),this.writePoint(o,t,r)},t.prototype.writeLinearRing=function(e,t,r){var o=r[r.length-1].srsName;o&&e.setAttribute("srsName",o);var n=this.createCoordinatesNode_(e.namespaceURI);e.appendChild(n),this.writeCoordinates_(n,t,r)},t.prototype.writeMultiSurfaceOrPolygon=function(e,t,r){var o=r[r.length-1],n=o.hasZ,i=o.srsName,a=o.surface;i&&e.setAttribute("srsName",i);var p=t.getPolygons();pushSerializeAndPop({node:e,hasZ:n,srsName:i,surface:a},this.SURFACEORPOLYGONMEMBER_SERIALIZERS,this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,p,r,void 0,this)},t.prototype.writeSurfaceOrPolygonMember=function(e,t,r){var o=this.GEOMETRY_NODE_FACTORY_(t,r);o&&(e.appendChild(o),this.writeSurfaceOrPolygon(o,t,r))},t.prototype.writeEnvelope=function(e,t,r){var o=r[r.length-1].srsName;o&&e.setAttribute("srsName",o);var n=[t[0]+" "+t[1],t[2]+" "+t[3]];pushSerializeAndPop({node:e},this.ENVELOPE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,n,r,["lowerCorner","upperCorner"],this)},t.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_=function(e,t,r){var o=t[t.length-1].node;return createElementNS("http://www.opengis.net/gml",MULTIGEOMETRY_TO_MEMBER_NODENAME[o.nodeName])},t}(GMLBase);GML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS={"http://www.opengis.net/gml":{coordinates:makeReplacer(GML2.prototype.readFlatCoordinates)}},GML2.prototype.FLAT_LINEAR_RINGS_PARSERS={"http://www.opengis.net/gml":{innerBoundaryIs:GML2.prototype.innerBoundaryIsParser,outerBoundaryIs:GML2.prototype.outerBoundaryIsParser}},GML2.prototype.BOX_PARSERS_={"http://www.opengis.net/gml":{coordinates:makeArrayPusher(GML2.prototype.readFlatCoordinates)}},GML2.prototype.GEOMETRY_PARSERS={"http://www.opengis.net/gml":{Point:makeReplacer(GMLBase.prototype.readPoint),MultiPoint:makeReplacer(GMLBase.prototype.readMultiPoint),LineString:makeReplacer(GMLBase.prototype.readLineString),MultiLineString:makeReplacer(GMLBase.prototype.readMultiLineString),LinearRing:makeReplacer(GMLBase.prototype.readLinearRing),Polygon:makeReplacer(GMLBase.prototype.readPolygon),MultiPolygon:makeReplacer(GMLBase.prototype.readMultiPolygon),Box:makeReplacer(GML2.prototype.readBox)}},GML2.prototype.GEOMETRY_SERIALIZERS={"http://www.opengis.net/gml":{Curve:makeChildAppender(GML2.prototype.writeCurveOrLineString),MultiCurve:makeChildAppender(GML2.prototype.writeMultiCurveOrLineString),Point:makeChildAppender(GML2.prototype.writePoint),MultiPoint:makeChildAppender(GML2.prototype.writeMultiPoint),LineString:makeChildAppender(GML2.prototype.writeCurveOrLineString),MultiLineString:makeChildAppender(GML2.prototype.writeMultiCurveOrLineString),LinearRing:makeChildAppender(GML2.prototype.writeLinearRing),Polygon:makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),MultiPolygon:makeChildAppender(GML2.prototype.writeMultiSurfaceOrPolygon),Surface:makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),MultiSurface:makeChildAppender(GML2.prototype.writeMultiSurfaceOrPolygon),Envelope:makeChildAppender(GML2.prototype.writeEnvelope)}},GML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS={"http://www.opengis.net/gml":{lineStringMember:makeChildAppender(GML2.prototype.writeLineStringOrCurveMember),curveMember:makeChildAppender(GML2.prototype.writeLineStringOrCurveMember)}},GML2.prototype.RING_SERIALIZERS={"http://www.opengis.net/gml":{outerBoundaryIs:makeChildAppender(GML2.prototype.writeRing),innerBoundaryIs:makeChildAppender(GML2.prototype.writeRing)}},GML2.prototype.POINTMEMBER_SERIALIZERS={"http://www.opengis.net/gml":{pointMember:makeChildAppender(GML2.prototype.writePointMember)}},GML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS={"http://www.opengis.net/gml":{surfaceMember:makeChildAppender(GML2.prototype.writeSurfaceOrPolygonMember),polygonMember:makeChildAppender(GML2.prototype.writeSurfaceOrPolygonMember)}},GML2.prototype.ENVELOPE_SERIALIZERS={"http://www.opengis.net/gml":{lowerCorner:makeChildAppender(writeStringTextNode),upperCorner:makeChildAppender(writeStringTextNode)}};export default GML2;
//# sourceMappingURL=/sm/ec05d4c5d385b57430dec30b9ff9f3e4e5d7f96ea605df32a479b9ffc6ce7c15.map