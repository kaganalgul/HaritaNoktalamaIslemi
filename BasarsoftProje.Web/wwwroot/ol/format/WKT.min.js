/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/format/WKT.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var __extends=this&&this.__extends||function(){var e=function(t,o){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])},e(t,o)};return function(t,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function r(){this.constructor=t}e(t,o),t.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}();import Feature from"../Feature.js";import GeometryCollection from"../geom/GeometryCollection.js";import GeometryLayout from"../geom/GeometryLayout.js";import GeometryType from"../geom/GeometryType.js";import LineString from"../geom/LineString.js";import MultiLineString from"../geom/MultiLineString.js";import MultiPoint from"../geom/MultiPoint.js";import MultiPolygon from"../geom/MultiPolygon.js";import Point from"../geom/Point.js";import Polygon from"../geom/Polygon.js";import TextFeature from"./TextFeature.js";import{transformGeometryWithOptions}from"./Feature.js";var GeometryConstructor={POINT:Point,LINESTRING:LineString,POLYGON:Polygon,MULTIPOINT:MultiPoint,MULTILINESTRING:MultiLineString,MULTIPOLYGON:MultiPolygon},EMPTY="EMPTY",Z="Z",M="M",ZM="ZM",TokenType={START:0,TEXT:1,LEFT_PAREN:2,RIGHT_PAREN:3,NUMBER:4,COMMA:5,EOF:6},WKTGeometryType={};for(var type in GeometryType)WKTGeometryType[type]=GeometryType[type].toUpperCase();var Lexer=function(){function e(e){this.wkt=e,this.index_=-1}return e.prototype.isAlpha_=function(e){return e>="a"&&e<="z"||e>="A"&&e<="Z"},e.prototype.isNumeric_=function(e,t){return e>="0"&&e<="9"||"."==e&&!(void 0!==t&&t)},e.prototype.isWhiteSpace_=function(e){return" "==e||"\t"==e||"\r"==e||"\n"==e},e.prototype.nextChar_=function(){return this.wkt.charAt(++this.index_)},e.prototype.nextToken=function(){var e,t=this.nextChar_(),o=this.index_,r=t;if("("==t)e=TokenType.LEFT_PAREN;else if(","==t)e=TokenType.COMMA;else if(")"==t)e=TokenType.RIGHT_PAREN;else if(this.isNumeric_(t)||"-"==t)e=TokenType.NUMBER,r=this.readNumber_();else if(this.isAlpha_(t))e=TokenType.TEXT,r=this.readText_();else{if(this.isWhiteSpace_(t))return this.nextToken();if(""!==t)throw new Error("Unexpected character: "+t);e=TokenType.EOF}return{position:o,value:r,type:e}},e.prototype.readNumber_=function(){var e,t=this.index_,o=!1,r=!1;do{"."==e?o=!0:"e"!=e&&"E"!=e||(r=!0),e=this.nextChar_()}while(this.isNumeric_(e,o)||!r&&("e"==e||"E"==e)||r&&("-"==e||"+"==e));return parseFloat(this.wkt.substring(t,this.index_--))},e.prototype.readText_=function(){var e,t=this.index_;do{e=this.nextChar_()}while(this.isAlpha_(e));return this.wkt.substring(t,this.index_--).toUpperCase()},e}(),Parser=function(){function e(e){this.lexer_=e,this.token_={position:0,type:TokenType.START},this.layout_=GeometryLayout.XY}return e.prototype.consume_=function(){this.token_=this.lexer_.nextToken()},e.prototype.isTokenType=function(e){return this.token_.type==e},e.prototype.match=function(e){var t=this.isTokenType(e);return t&&this.consume_(),t},e.prototype.parse=function(){return this.consume_(),this.parseGeometry_()},e.prototype.parseGeometryLayout_=function(){var e=GeometryLayout.XY,t=this.token_;if(this.isTokenType(TokenType.TEXT)){var o=t.value;o===Z?e=GeometryLayout.XYZ:o===M?e=GeometryLayout.XYM:o===ZM&&(e=GeometryLayout.XYZM),e!==GeometryLayout.XY&&this.consume_()}return e},e.prototype.parseGeometryCollectionText_=function(){if(this.match(TokenType.LEFT_PAREN)){var e=[];do{e.push(this.parseGeometry_())}while(this.match(TokenType.COMMA));if(this.match(TokenType.RIGHT_PAREN))return e}throw new Error(this.formatErrorMessage_())},e.prototype.parsePointText_=function(){if(this.match(TokenType.LEFT_PAREN)){var e=this.parsePoint_();if(this.match(TokenType.RIGHT_PAREN))return e}throw new Error(this.formatErrorMessage_())},e.prototype.parseLineStringText_=function(){if(this.match(TokenType.LEFT_PAREN)){var e=this.parsePointList_();if(this.match(TokenType.RIGHT_PAREN))return e}throw new Error(this.formatErrorMessage_())},e.prototype.parsePolygonText_=function(){if(this.match(TokenType.LEFT_PAREN)){var e=this.parseLineStringTextList_();if(this.match(TokenType.RIGHT_PAREN))return e}throw new Error(this.formatErrorMessage_())},e.prototype.parseMultiPointText_=function(){if(this.match(TokenType.LEFT_PAREN)){var e=void 0;if(e=this.token_.type==TokenType.LEFT_PAREN?this.parsePointTextList_():this.parsePointList_(),this.match(TokenType.RIGHT_PAREN))return e}throw new Error(this.formatErrorMessage_())},e.prototype.parseMultiLineStringText_=function(){if(this.match(TokenType.LEFT_PAREN)){var e=this.parseLineStringTextList_();if(this.match(TokenType.RIGHT_PAREN))return e}throw new Error(this.formatErrorMessage_())},e.prototype.parseMultiPolygonText_=function(){if(this.match(TokenType.LEFT_PAREN)){var e=this.parsePolygonTextList_();if(this.match(TokenType.RIGHT_PAREN))return e}throw new Error(this.formatErrorMessage_())},e.prototype.parsePoint_=function(){for(var e=[],t=this.layout_.length,o=0;o<t;++o){var r=this.token_;if(!this.match(TokenType.NUMBER))break;e.push(r.value)}if(e.length==t)return e;throw new Error(this.formatErrorMessage_())},e.prototype.parsePointList_=function(){for(var e=[this.parsePoint_()];this.match(TokenType.COMMA);)e.push(this.parsePoint_());return e},e.prototype.parsePointTextList_=function(){for(var e=[this.parsePointText_()];this.match(TokenType.COMMA);)e.push(this.parsePointText_());return e},e.prototype.parseLineStringTextList_=function(){for(var e=[this.parseLineStringText_()];this.match(TokenType.COMMA);)e.push(this.parseLineStringText_());return e},e.prototype.parsePolygonTextList_=function(){for(var e=[this.parsePolygonText_()];this.match(TokenType.COMMA);)e.push(this.parsePolygonText_());return e},e.prototype.isEmptyGeometry_=function(){var e=this.isTokenType(TokenType.TEXT)&&this.token_.value==EMPTY;return e&&this.consume_(),e},e.prototype.formatErrorMessage_=function(){return"Unexpected `"+this.token_.value+"` at position "+this.token_.position+" in `"+this.lexer_.wkt+"`"},e.prototype.parseGeometry_=function(){var e=this.token_;if(this.match(TokenType.TEXT)){var t=e.value;this.layout_=this.parseGeometryLayout_();var o=this.isEmptyGeometry_();if("GEOMETRYCOLLECTION"==t){if(o)return new GeometryCollection([]);var r=this.parseGeometryCollectionText_();return new GeometryCollection(r)}var n=GeometryConstructor[t];if(!n)throw new Error("Invalid geometry type: "+t);var i=void 0;if(o)i="POINT"==t?[NaN,NaN]:[];else switch(t){case"POINT":i=this.parsePointText_();break;case"LINESTRING":i=this.parseLineStringText_();break;case"POLYGON":i=this.parsePolygonText_();break;case"MULTIPOINT":i=this.parseMultiPointText_();break;case"MULTILINESTRING":i=this.parseMultiLineStringText_();break;case"MULTIPOLYGON":i=this.parseMultiPolygonText_()}return new n(i,this.layout_)}throw new Error(this.formatErrorMessage_())},e}(),WKT=function(e){function t(t){var o=e.call(this)||this,r=t||{};return o.splitCollection_=void 0!==r.splitCollection&&r.splitCollection,o}return __extends(t,e),t.prototype.parse_=function(e){var t=new Lexer(e);return new Parser(t).parse()},t.prototype.readFeatureFromText=function(e,t){var o=this.readGeometryFromText(e,t),r=new Feature;return r.setGeometry(o),r},t.prototype.readFeaturesFromText=function(e,t){for(var o=[],r=this.readGeometryFromText(e,t),n=[],i=0,s=(o=this.splitCollection_&&r.getType()==GeometryType.GEOMETRY_COLLECTION?r.getGeometriesArray():[r]).length;i<s;++i){var a=new Feature;a.setGeometry(o[i]),n.push(a)}return n},t.prototype.readGeometryFromText=function(e,t){var o=this.parse_(e);return transformGeometryWithOptions(o,!1,t)},t.prototype.writeFeatureText=function(e,t){var o=e.getGeometry();return o?this.writeGeometryText(o,t):""},t.prototype.writeFeaturesText=function(e,t){if(1==e.length)return this.writeFeatureText(e[0],t);for(var o=[],r=0,n=e.length;r<n;++r)o.push(e[r].getGeometry());var i=new GeometryCollection(o);return this.writeGeometryText(i,t)},t.prototype.writeGeometryText=function(e,t){return encode(transformGeometryWithOptions(e,!0,t))},t}(TextFeature);function encodePointGeometry(e){var t=e.getCoordinates();return 0===t.length?"":t.join(" ")}function encodeMultiPointGeometry(e){for(var t=[],o=e.getPoints(),r=0,n=o.length;r<n;++r)t.push("("+encodePointGeometry(o[r])+")");return t.join(",")}function encodeGeometryCollectionGeometry(e){for(var t=[],o=e.getGeometries(),r=0,n=o.length;r<n;++r)t.push(encode(o[r]));return t.join(",")}function encodeLineStringGeometry(e){for(var t=e.getCoordinates(),o=[],r=0,n=t.length;r<n;++r)o.push(t[r].join(" "));return o.join(",")}function encodeMultiLineStringGeometry(e){for(var t=[],o=e.getLineStrings(),r=0,n=o.length;r<n;++r)t.push("("+encodeLineStringGeometry(o[r])+")");return t.join(",")}function encodePolygonGeometry(e){for(var t=[],o=e.getLinearRings(),r=0,n=o.length;r<n;++r)t.push("("+encodeLineStringGeometry(o[r])+")");return t.join(",")}function encodeMultiPolygonGeometry(e){for(var t=[],o=e.getPolygons(),r=0,n=o.length;r<n;++r)t.push("("+encodePolygonGeometry(o[r])+")");return t.join(",")}function encodeGeometryLayout(e){var t=e.getLayout(),o="";return t!==GeometryLayout.XYZ&&t!==GeometryLayout.XYZM||(o+=Z),t!==GeometryLayout.XYM&&t!==GeometryLayout.XYZM||(o+=M),o}var GeometryEncoder={Point:encodePointGeometry,LineString:encodeLineStringGeometry,Polygon:encodePolygonGeometry,MultiPoint:encodeMultiPointGeometry,MultiLineString:encodeMultiLineStringGeometry,MultiPolygon:encodeMultiPolygonGeometry,GeometryCollection:encodeGeometryCollectionGeometry};function encode(e){var t=e.getType(),o=(0,GeometryEncoder[t])(e);if(t=t.toUpperCase(),"function"==typeof e.getFlatCoordinates){var r=encodeGeometryLayout(e);r.length>0&&(t+=" "+r)}return 0===o.length?t+" "+EMPTY:t+"("+o+")"}export default WKT;
//# sourceMappingURL=/sm/bdb94f87410d72a42b4edced4d08a13079ebc2d8229de55f0c4de3298c337c37.map