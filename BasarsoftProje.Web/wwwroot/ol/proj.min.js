/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/proj.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import Projection from"./proj/Projection.js";import Units,{METERS_PER_UNIT}from"./proj/Units.js";import{PROJECTIONS as EPSG3857_PROJECTIONS,fromEPSG4326,toEPSG4326}from"./proj/epsg3857.js";import{PROJECTIONS as EPSG4326_PROJECTIONS}from"./proj/epsg4326.js";import{add as addProj,clear as clearProj,get as getProj}from"./proj/projections.js";import{add as addTransformFunc,clear as clearTransformFuncs,get as getTransformFunc}from"./proj/transforms.js";import{applyTransform,getWidth}from"./extent.js";import{clamp,modulo}from"./math.js";import{getDistance}from"./sphere.js";import{getWorldsAway}from"./coordinate.js";export{METERS_PER_UNIT};export{Projection};export function cloneTransform(r,o,t){var e;if(void 0!==o){for(var n=0,i=r.length;n<i;++n)o[n]=r[n];e=o}else e=r.slice();return e}export function identityTransform(r,o,t){if(void 0!==o&&r!==o){for(var e=0,n=r.length;e<n;++e)o[e]=r[e];r=o}return r}export function addProjection(r){addProj(r.getCode(),r),addTransformFunc(r,r,cloneTransform)}export function addProjections(r){r.forEach(addProjection)}export function get(r){return"string"==typeof r?getProj(r):r||null}export function getPointResolution(r,o,t,e){var n,i=(r=get(r)).getPointResolutionFunc();if(i){if(n=i(o,t),e&&e!==r.getUnits())(a=r.getMetersPerUnit())&&(n=n*a/METERS_PER_UNIT[e])}else{var s=r.getUnits();if(s==Units.DEGREES&&!e||e==Units.DEGREES)n=o;else{var a,c=getTransformFromProjections(r,get("EPSG:4326"));if(c===identityTransform&&s!==Units.DEGREES)n=o*r.getMetersPerUnit();else{var f=[t[0]-o/2,t[1],t[0]+o/2,t[1],t[0],t[1]-o/2,t[0],t[1]+o/2];f=c(f,f,2),n=(getDistance(f.slice(0,2),f.slice(2,4))+getDistance(f.slice(4,6),f.slice(6,8)))/2}void 0!==(a=e?METERS_PER_UNIT[e]:r.getMetersPerUnit())&&(n/=a)}}return n}export function addEquivalentProjections(r){addProjections(r),r.forEach((function(o){r.forEach((function(r){o!==r&&addTransformFunc(o,r,cloneTransform)}))}))}export function addEquivalentTransforms(r,o,t,e){r.forEach((function(r){o.forEach((function(o){addTransformFunc(r,o,t),addTransformFunc(o,r,e)}))}))}export function clearAllProjections(){clearProj(),clearTransformFuncs()}export function createProjection(r,o){return r?"string"==typeof r?get(r):r:get(o)}export function createTransformFromCoordinateTransform(r){return function(o,t,e){for(var n=o.length,i=void 0!==e?e:2,s=void 0!==t?t:new Array(n),a=0;a<n;a+=i){var c=r([o[a],o[a+1]]);s[a]=c[0],s[a+1]=c[1];for(var f=i-1;f>=2;--f)s[a+f]=o[a+f]}return s}}export function addCoordinateTransforms(r,o,t,e){var n=get(r),i=get(o);addTransformFunc(n,i,createTransformFromCoordinateTransform(t)),addTransformFunc(i,n,createTransformFromCoordinateTransform(e))}export function fromLonLat(r,o){return transform(r,"EPSG:4326",void 0!==o?o:"EPSG:3857")}export function toLonLat(r,o){var t=transform(r,void 0!==o?o:"EPSG:3857","EPSG:4326"),e=t[0];return(e<-180||e>180)&&(t[0]=modulo(e+180,360)-180),t}export function equivalent(r,o){if(r===o)return!0;var t=r.getUnits()===o.getUnits();return(r.getCode()===o.getCode()||getTransformFromProjections(r,o)===cloneTransform)&&t}export function getTransformFromProjections(r,o){var t=r.getCode(),e=o.getCode(),n=getTransformFunc(t,e);return n||(n=identityTransform),n}export function getTransform(r,o){return getTransformFromProjections(get(r),get(o))}export function transform(r,o,t){return getTransform(o,t)(r,void 0,r.length)}export function transformExtent(r,o,t,e){var n=getTransform(o,t);return applyTransform(r,n,void 0,e)}export function transformWithProjections(r,o,t){return getTransformFromProjections(o,t)(r)}var userProjection=null;export function setUserProjection(r){userProjection=get(r)}export function clearUserProjection(){userProjection=null}export function getUserProjection(){return userProjection}export function useGeographic(){setUserProjection("EPSG:4326")}export function toUserCoordinate(r,o){return userProjection?transform(r,o,userProjection):r}export function fromUserCoordinate(r,o){return userProjection?transform(r,userProjection,o):r}export function toUserExtent(r,o){return userProjection?transformExtent(r,o,userProjection):r}export function fromUserExtent(r,o){return userProjection?transformExtent(r,userProjection,o):r}export function toUserResolution(r,o){if(!userProjection)return r;var t=get(o).getUnits(),e=userProjection.getUnits();return t&&e?r*METERS_PER_UNIT[t]/METERS_PER_UNIT[e]:r}export function fromUserResolution(r,o){if(!userProjection)return r;var t=get(o).getUnits(),e=userProjection.getUnits();return t&&e?r*METERS_PER_UNIT[e]/METERS_PER_UNIT[t]:r}export function createSafeCoordinateTransform(r,o,t){return function(e){var n,i,s=e[0],a=e[1];if(r.canWrapX()){var c=r.getExtent(),f=getWidth(c);(i=getWorldsAway(e,r,f))&&(s-=i*f),s=clamp(s,c[0],c[2]),a=clamp(a,c[1],c[3]),n=t([s,a])}else n=t(e);return i&&o.canWrapX()&&(n[0]+=i*getWidth(o.getExtent())),n}}export function addCommon(){addEquivalentProjections(EPSG3857_PROJECTIONS),addEquivalentProjections(EPSG4326_PROJECTIONS),addEquivalentTransforms(EPSG4326_PROJECTIONS,EPSG3857_PROJECTIONS,fromEPSG4326,toEPSG4326)}addCommon();
//# sourceMappingURL=/sm/13a11b64531eb92ad5f93f3f5d0b06fe081912c40d6fc402f2f7661037fab1d2.map