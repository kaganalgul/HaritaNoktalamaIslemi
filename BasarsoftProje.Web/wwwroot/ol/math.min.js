/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/math.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
export function clamp(r,t,n){return Math.min(Math.max(r,t),n)}export var cosh="cosh"in Math?Math.cosh:function(r){var t=Math.exp(r);return(t+1/t)/2};export var log2="log2"in Math?Math.log2:function(r){return Math.log(r)*Math.LOG2E};export function squaredSegmentDistance(r,t,n,o,e,a){var u=e-n,i=a-o;if(0!==u||0!==i){var f=((r-n)*u+(t-o)*i)/(u*u+i*i);f>1?(n=e,o=a):f>0&&(n+=u*f,o+=i*f)}return squaredDistance(r,t,n,o)}export function squaredDistance(r,t,n,o){var e=n-r,a=o-t;return e*e+a*a}export function solveLinearSystem(r){for(var t=r.length,n=0;n<t;n++){for(var o=n,e=Math.abs(r[n][n]),a=n+1;a<t;a++){var u=Math.abs(r[a][n]);u>e&&(e=u,o=a)}if(0===e)return null;var i=r[o];r[o]=r[n],r[n]=i;for(var f=n+1;f<t;f++)for(var c=-r[f][n]/r[n][n],h=n;h<t+1;h++)n==h?r[f][h]=0:r[f][h]+=c*r[n][h]}for(var x=new Array(t),p=t-1;p>=0;p--){x[p]=r[p][t]/r[p][p];for(var M=p-1;M>=0;M--)r[M][t]-=r[M][p]*x[p]}return x}export function toDegrees(r){return 180*r/Math.PI}export function toRadians(r){return r*Math.PI/180}export function modulo(r,t){var n=r%t;return n*t<0?n+t:n}export function lerp(r,t,n){return r+n*(t-r)}export function toFixed(r,t){var n=Math.pow(10,t);return Math.round(r*n)/n}export function round(r,t){return Math.round(toFixed(r,t))}export function floor(r,t){return Math.floor(toFixed(r,t))}export function ceil(r,t){return Math.ceil(toFixed(r,t))}
//# sourceMappingURL=/sm/6e684cba476a29225b77cfe56b7143761845b14c980496b515fe83f79e8ed816.map