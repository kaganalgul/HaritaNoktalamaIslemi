/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/structs/RBush.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import RBush_ from"rbush";import{createOrUpdate,equals}from"../extent.js";import{getUid}from"../util.js";import{isEmpty}from"../obj.js";var RBush=function(){function t(t){this.rbush_=new RBush_(t),this.items_={}}return t.prototype.insert=function(t,r){var e={minX:t[0],minY:t[1],maxX:t[2],maxY:t[3],value:r};this.rbush_.insert(e),this.items_[getUid(r)]=e},t.prototype.load=function(t,r){for(var e=new Array(r.length),i=0,n=r.length;i<n;i++){var o=t[i],s=r[i],u={minX:o[0],minY:o[1],maxX:o[2],maxY:o[3],value:s};e[i]=u,this.items_[getUid(s)]=u}this.rbush_.load(e)},t.prototype.remove=function(t){var r=getUid(t),e=this.items_[r];return delete this.items_[r],null!==this.rbush_.remove(e)},t.prototype.update=function(t,r){var e=this.items_[getUid(r)],i=[e.minX,e.minY,e.maxX,e.maxY];equals(i,t)||(this.remove(r),this.insert(t,r))},t.prototype.getAll=function(){return this.rbush_.all().map((function(t){return t.value}))},t.prototype.getInExtent=function(t){var r={minX:t[0],minY:t[1],maxX:t[2],maxY:t[3]};return this.rbush_.search(r).map((function(t){return t.value}))},t.prototype.forEach=function(t){return this.forEach_(this.getAll(),t)},t.prototype.forEachInExtent=function(t,r){return this.forEach_(this.getInExtent(t),r)},t.prototype.forEach_=function(t,r){for(var e,i=0,n=t.length;i<n;i++)if(e=r(t[i]))return e;return e},t.prototype.isEmpty=function(){return isEmpty(this.items_)},t.prototype.clear=function(){this.rbush_.clear(),this.items_={}},t.prototype.getExtent=function(t){var r=this.rbush_.toJSON();return createOrUpdate(r.minX,r.minY,r.maxX,r.maxY,t)},t.prototype.concat=function(t){for(var r in this.rbush_.load(t.rbush_.all()),t.items_)this.items_[r]=t.items_[r]},t}();export default RBush;
//# sourceMappingURL=/sm/6b9d5dd15a3374b554d94f60906de2350746c006d10b8b480d88a6ce91c8f91e.map