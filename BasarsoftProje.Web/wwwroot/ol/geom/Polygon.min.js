/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/geom/Polygon.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var __extends=this&&this.__extends||function(){var t=function(e,i){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])},t(e,i)};return function(e,i){if("function"!=typeof i&&null!==i)throw new TypeError("Class extends value "+String(i)+" is not a constructor or null");function r(){this.constructor=e}t(e,i),e.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}();import GeometryLayout from"./GeometryLayout.js";import GeometryType from"./GeometryType.js";import LinearRing from"./LinearRing.js";import Point from"./Point.js";import SimpleGeometry from"./SimpleGeometry.js";import{arrayMaxSquaredDelta,assignClosestArrayPoint}from"./flat/closest.js";import{closestSquaredDistanceXY,getCenter}from"../extent.js";import{deflateCoordinatesArray}from"./flat/deflate.js";import{extend}from"../array.js";import{getInteriorPointOfArray}from"./flat/interiorpoint.js";import{inflateCoordinatesArray}from"./flat/inflate.js";import{intersectsLinearRingArray}from"./flat/intersectsextent.js";import{linearRingsAreOriented,orientLinearRings}from"./flat/orient.js";import{linearRings as linearRingsArea}from"./flat/area.js";import{linearRingsContainsXY}from"./flat/contains.js";import{modulo}from"../math.js";import{quantizeArray}from"./flat/simplify.js";import{offset as sphereOffset}from"../sphere.js";var Polygon=function(t){function e(e,i,r){var n=t.call(this)||this;return n.ends_=[],n.flatInteriorPointRevision_=-1,n.flatInteriorPoint_=null,n.maxDelta_=-1,n.maxDeltaRevision_=-1,n.orientedRevision_=-1,n.orientedFlatCoordinates_=null,void 0!==i&&r?(n.setFlatCoordinates(i,e),n.ends_=r):n.setCoordinates(e,i),n}return __extends(e,t),e.prototype.appendLinearRing=function(t){this.flatCoordinates?extend(this.flatCoordinates,t.getFlatCoordinates()):this.flatCoordinates=t.getFlatCoordinates().slice(),this.ends_.push(this.flatCoordinates.length),this.changed()},e.prototype.clone=function(){var t=new e(this.flatCoordinates.slice(),this.layout,this.ends_.slice());return t.applyProperties(this),t},e.prototype.closestPointXY=function(t,e,i,r){return r<closestSquaredDistanceXY(this.getExtent(),t,e)?r:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates,0,this.ends_,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),assignClosestArrayPoint(this.flatCoordinates,0,this.ends_,this.stride,this.maxDelta_,!0,t,e,i,r))},e.prototype.containsXY=function(t,e){return linearRingsContainsXY(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride,t,e)},e.prototype.getArea=function(){return linearRingsArea(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride)},e.prototype.getCoordinates=function(t){var e;return void 0!==t?(e=this.getOrientedFlatCoordinates().slice(),orientLinearRings(e,0,this.ends_,this.stride,t)):e=this.flatCoordinates,inflateCoordinatesArray(e,0,this.ends_,this.stride)},e.prototype.getEnds=function(){return this.ends_},e.prototype.getFlatInteriorPoint=function(){if(this.flatInteriorPointRevision_!=this.getRevision()){var t=getCenter(this.getExtent());this.flatInteriorPoint_=getInteriorPointOfArray(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride,t,0),this.flatInteriorPointRevision_=this.getRevision()}return this.flatInteriorPoint_},e.prototype.getInteriorPoint=function(){return new Point(this.getFlatInteriorPoint(),GeometryLayout.XYM)},e.prototype.getLinearRingCount=function(){return this.ends_.length},e.prototype.getLinearRing=function(t){return t<0||this.ends_.length<=t?null:new LinearRing(this.flatCoordinates.slice(0===t?0:this.ends_[t-1],this.ends_[t]),this.layout)},e.prototype.getLinearRings=function(){for(var t=this.layout,e=this.flatCoordinates,i=this.ends_,r=[],n=0,o=0,s=i.length;o<s;++o){var a=i[o],l=new LinearRing(e.slice(n,a),t);r.push(l),n=a}return r},e.prototype.getOrientedFlatCoordinates=function(){if(this.orientedRevision_!=this.getRevision()){var t=this.flatCoordinates;linearRingsAreOriented(t,0,this.ends_,this.stride)?this.orientedFlatCoordinates_=t:(this.orientedFlatCoordinates_=t.slice(),this.orientedFlatCoordinates_.length=orientLinearRings(this.orientedFlatCoordinates_,0,this.ends_,this.stride)),this.orientedRevision_=this.getRevision()}return this.orientedFlatCoordinates_},e.prototype.getSimplifiedGeometryInternal=function(t){var i=[],r=[];return i.length=quantizeArray(this.flatCoordinates,0,this.ends_,this.stride,Math.sqrt(t),i,0,r),new e(i,GeometryLayout.XY,r)},e.prototype.getType=function(){return GeometryType.POLYGON},e.prototype.intersectsExtent=function(t){return intersectsLinearRingArray(this.getOrientedFlatCoordinates(),0,this.ends_,this.stride,t)},e.prototype.setCoordinates=function(t,e){this.setLayout(e,t,2),this.flatCoordinates||(this.flatCoordinates=[]);var i=deflateCoordinatesArray(this.flatCoordinates,0,t,this.stride,this.ends_);this.flatCoordinates.length=0===i.length?0:i[i.length-1],this.changed()},e}(SimpleGeometry);export default Polygon;export function circular(t,e,i,r){for(var n=i||32,o=[],s=0;s<n;++s)extend(o,sphereOffset(t,e,2*Math.PI*s/n,r));return o.push(o[0],o[1]),new Polygon(o,GeometryLayout.XY,[o.length])}export function fromExtent(t){var e=t[0],i=t[1],r=t[2],n=t[3],o=[e,i,e,n,r,n,r,i,e,i];return new Polygon(o,GeometryLayout.XY,[o.length])}export function fromCircle(t,e,i){for(var r=e||32,n=t.getStride(),o=t.getLayout(),s=t.getCenter(),a=n*(r+1),l=new Array(a),h=0;h<a;h+=n){l[h]=0,l[h+1]=0;for(var d=2;d<n;d++)l[h+d]=s[d]}var f=[l.length],p=new Polygon(l,o,f);return makeRegular(p,s,t.getRadius(),i),p}export function makeRegular(t,e,i,r){for(var n=t.getFlatCoordinates(),o=t.getStride(),s=n.length/o-1,a=r||0,l=0;l<=s;++l){var h=l*o,d=a+2*modulo(l,s)*Math.PI/s;n[h]=e[0]+i*Math.cos(d),n[h+1]=e[1]+i*Math.sin(d)}t.changed()}
//# sourceMappingURL=/sm/9c663d332c5d04c335d05a697268d121564bd9891e945d37c6302743134472ce.map