/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/geom/flat/geodesic.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{get as getProjection,getTransform}from"../../proj.js";import{squaredSegmentDistance,toDegrees,toRadians}from"../../math.js";function line(t,n,a){for(var r,o,e,i,s,p,h=[],u=t(0),c=t(1),g=n(u),f=n(c),M=[c,u],m=[f,g],d=[1,0],l={},R=1e5;--R>0&&d.length>0;)e=d.pop(),u=M.pop(),g=m.pop(),(p=e.toString())in l||(h.push(g[0],g[1]),l[p]=!0),i=d.pop(),c=M.pop(),f=m.pop(),o=n(r=t(s=(e+i)/2)),squaredSegmentDistance(o[0],o[1],g[0],g[1],f[0],f[1])<a?(h.push(f[0],f[1]),l[p=i.toString()]=!0):(d.push(i,s,s,e),m.push(f,o,o,g),M.push(c,r,r,u));return h}export function greatCircleArc(t,n,a,r,o,e){var i=getProjection("EPSG:4326"),s=Math.cos(toRadians(n)),p=Math.sin(toRadians(n)),h=Math.cos(toRadians(r)),u=Math.sin(toRadians(r)),c=Math.cos(toRadians(a-t)),g=Math.sin(toRadians(a-t)),f=p*u+s*h*c;return line((function(n){if(1<=f)return[a,r];var o=n*Math.acos(f),e=Math.cos(o),i=Math.sin(o),M=g*h,m=s*u-p*h*c,d=Math.atan2(M,m),l=Math.asin(p*e+s*i*Math.cos(d)),R=toRadians(t)+Math.atan2(Math.sin(d)*i*s,e-p*Math.sin(l));return[toDegrees(R),toDegrees(l)]}),getTransform(i,o),e)}export function meridian(t,n,a,r,o){var e=getProjection("EPSG:4326");return line((function(r){return[t,n+(a-n)*r]}),getTransform(e,r),o)}export function parallel(t,n,a,r,o){var e=getProjection("EPSG:4326");return line((function(r){return[n+(a-n)*r,t]}),getTransform(e,r),o)}
//# sourceMappingURL=/sm/3aeef2712c79cc0751bc26f21c8f0a21e95ad7357bf741b7b702c5075946f1df.map