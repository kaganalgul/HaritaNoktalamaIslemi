/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/ol@6.12.0/geom/MultiLineString.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var __extends=this&&this.__extends||function(){var t=function(e,i){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])},t(e,i)};return function(e,i){if("function"!=typeof i&&null!==i)throw new TypeError("Class extends value "+String(i)+" is not a constructor or null");function r(){this.constructor=e}t(e,i),e.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}();import GeometryLayout from"./GeometryLayout.js";import GeometryType from"./GeometryType.js";import LineString from"./LineString.js";import SimpleGeometry from"./SimpleGeometry.js";import{arrayMaxSquaredDelta,assignClosestArrayPoint}from"./flat/closest.js";import{closestSquaredDistanceXY}from"../extent.js";import{deflateCoordinatesArray}from"./flat/deflate.js";import{douglasPeuckerArray}from"./flat/simplify.js";import{extend}from"../array.js";import{inflateCoordinatesArray}from"./flat/inflate.js";import{interpolatePoint,lineStringsCoordinateAtM}from"./flat/interpolate.js";import{intersectsLineStringArray}from"./flat/intersectsextent.js";var MultiLineString=function(t){function e(e,i,r){var o=t.call(this)||this;if(o.ends_=[],o.maxDelta_=-1,o.maxDeltaRevision_=-1,Array.isArray(e[0]))o.setCoordinates(e,i);else if(void 0!==i&&r)o.setFlatCoordinates(i,e),o.ends_=r;else{for(var n=o.getLayout(),s=e,a=[],l=[],d=0,h=s.length;d<h;++d){var f=s[d];0===d&&(n=f.getLayout()),extend(a,f.getFlatCoordinates()),l.push(a.length)}o.setFlatCoordinates(n,a),o.ends_=l}return o}return __extends(e,t),e.prototype.appendLineString=function(t){this.flatCoordinates?extend(this.flatCoordinates,t.getFlatCoordinates().slice()):this.flatCoordinates=t.getFlatCoordinates().slice(),this.ends_.push(this.flatCoordinates.length),this.changed()},e.prototype.clone=function(){var t=new e(this.flatCoordinates.slice(),this.layout,this.ends_.slice());return t.applyProperties(this),t},e.prototype.closestPointXY=function(t,e,i,r){return r<closestSquaredDistanceXY(this.getExtent(),t,e)?r:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates,0,this.ends_,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),assignClosestArrayPoint(this.flatCoordinates,0,this.ends_,this.stride,this.maxDelta_,!1,t,e,i,r))},e.prototype.getCoordinateAtM=function(t,e,i){if(this.layout!=GeometryLayout.XYM&&this.layout!=GeometryLayout.XYZM||0===this.flatCoordinates.length)return null;var r=void 0!==e&&e,o=void 0!==i&&i;return lineStringsCoordinateAtM(this.flatCoordinates,0,this.ends_,this.stride,t,r,o)},e.prototype.getCoordinates=function(){return inflateCoordinatesArray(this.flatCoordinates,0,this.ends_,this.stride)},e.prototype.getEnds=function(){return this.ends_},e.prototype.getLineString=function(t){return t<0||this.ends_.length<=t?null:new LineString(this.flatCoordinates.slice(0===t?0:this.ends_[t-1],this.ends_[t]),this.layout)},e.prototype.getLineStrings=function(){for(var t=this.flatCoordinates,e=this.ends_,i=this.layout,r=[],o=0,n=0,s=e.length;n<s;++n){var a=e[n],l=new LineString(t.slice(o,a),i);r.push(l),o=a}return r},e.prototype.getFlatMidpoints=function(){for(var t=[],e=this.flatCoordinates,i=0,r=this.ends_,o=this.stride,n=0,s=r.length;n<s;++n){var a=r[n],l=interpolatePoint(e,i,a,o,.5);extend(t,l),i=a}return t},e.prototype.getSimplifiedGeometryInternal=function(t){var i=[],r=[];return i.length=douglasPeuckerArray(this.flatCoordinates,0,this.ends_,this.stride,t,i,0,r),new e(i,GeometryLayout.XY,r)},e.prototype.getType=function(){return GeometryType.MULTI_LINE_STRING},e.prototype.intersectsExtent=function(t){return intersectsLineStringArray(this.flatCoordinates,0,this.ends_,this.stride,t)},e.prototype.setCoordinates=function(t,e){this.setLayout(e,t,2),this.flatCoordinates||(this.flatCoordinates=[]);var i=deflateCoordinatesArray(this.flatCoordinates,0,t,this.stride,this.ends_);this.flatCoordinates.length=0===i.length?0:i[i.length-1],this.changed()},e}(SimpleGeometry);export default MultiLineString;
//# sourceMappingURL=/sm/757e8a351d42e6dca5f9b52e201111db7a55ff4679f5e7f1957cec30bdbbf05c.map